gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 2.9.4 #5595 (Mar 13 2012) (UNIX)
                      00004 ; This file was generated Tue Mar 20 13:24:25 2012
                      00005 ;--------------------------------------------------------
                      00006 ; PIC16 port for the Microchip 16-bit core micros
                      00007 ;--------------------------------------------------------
                      00008         list    p=18f97j60
                      00009 
                      00010         radix dec
                      00011 
                      00012 ;--------------------------------------------------------
                      00013 ; public variables in this module
                      00014 ;--------------------------------------------------------
                      00015         global _increment_time
                      00016         global _alarm
                      00017         global _test_inc_current_time
                      00018         global _display_time
                      00019         global _display_word
                      00020         global _display_string
                      00021         global _strlcpy
                      00022         global _dumb_delay1ms
                      00023         global _time
                      00024         global _currentTime
                      00025         global _position
                      00026         global _refresh
                      00027         global _bres
                      00028         global _high_isr
                      00029         global _main
                      00030 
                      00031 ;--------------------------------------------------------
                      00032 ; extern variables in this module
                      00033 ;--------------------------------------------------------
                      00034         extern __gptrget1
                      00035         extern __gptrput1
                      00036         extern _EBSTCONbits
                      00037         extern _MISTATbits
                      00038         extern _EFLOCONbits
                      00039         extern _MACON1bits
                      00040         extern _MACON2bits
                      00041         extern _MACON3bits
                      00042         extern _MACON4bits
                      00043         extern _MACLCON1bits
                      00044         extern _MACLCON2bits
                      00045         extern _MICONbits
                      00046         extern _MICMDbits
                      00047         extern _EWOLIEbits
                      00048         extern _EWOLIRbits
                      00049         extern _ERXFCONbits
                      00050         extern _EIEbits
                      00051         extern _ESTATbits
                      00052         extern _ECON2bits
                      00053         extern _EIRbits
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054         extern _EDATAbits
                      00055         extern _SSP2CON2bits
                      00056         extern _SSP2CON1bits
                      00057         extern _SSP2STATbits
                      00058         extern _ECCP2DELbits
                      00059         extern _ECCP2ASbits
                      00060         extern _ECCP3DELbits
                      00061         extern _ECCP3ASbits
                      00062         extern _RCSTA2bits
                      00063         extern _TXSTA2bits
                      00064         extern _CCP5CONbits
                      00065         extern _CCP4CONbits
                      00066         extern _T4CONbits
                      00067         extern _ECCP1DELbits
                      00068         extern _BAUDCON2bits
                      00069         extern _BAUDCTL2bits
                      00070         extern _BAUDCONbits
                      00071         extern _BAUDCON1bits
                      00072         extern _BAUDCTLbits
                      00073         extern _BAUDCTL1bits
                      00074         extern _PORTAbits
                      00075         extern _PORTBbits
                      00076         extern _PORTCbits
                      00077         extern _PORTDbits
                      00078         extern _PORTEbits
                      00079         extern _PORTFbits
                      00080         extern _PORTGbits
                      00081         extern _PORTHbits
                      00082         extern _PORTJbits
                      00083         extern _LATAbits
                      00084         extern _LATBbits
                      00085         extern _LATCbits
                      00086         extern _LATDbits
                      00087         extern _LATEbits
                      00088         extern _LATFbits
                      00089         extern _LATGbits
                      00090         extern _LATHbits
                      00091         extern _LATJbits
                      00092         extern _DDRAbits
                      00093         extern _TRISAbits
                      00094         extern _DDRBbits
                      00095         extern _TRISBbits
                      00096         extern _DDRCbits
                      00097         extern _TRISCbits
                      00098         extern _DDRDbits
                      00099         extern _TRISDbits
                      00100         extern _DDREbits
                      00101         extern _TRISEbits
                      00102         extern _DDRFbits
                      00103         extern _TRISFbits
                      00104         extern _DDRGbits
                      00105         extern _TRISGbits
                      00106         extern _DDRHbits
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107         extern _TRISHbits
                      00108         extern _DDRJbits
                      00109         extern _TRISJbits
                      00110         extern _OSCTUNEbits
                      00111         extern _MEMCONbits
                      00112         extern _PIE1bits
                      00113         extern _PIR1bits
                      00114         extern _IPR1bits
                      00115         extern _PIE2bits
                      00116         extern _PIR2bits
                      00117         extern _IPR2bits
                      00118         extern _PIE3bits
                      00119         extern _PIR3bits
                      00120         extern _IPR3bits
                      00121         extern _EECON1bits
                      00122         extern _RCSTAbits
                      00123         extern _RCSTA1bits
                      00124         extern _TXSTAbits
                      00125         extern _TXSTA1bits
                      00126         extern _PSPCONbits
                      00127         extern _T3CONbits
                      00128         extern _CMCONbits
                      00129         extern _CVRCONbits
                      00130         extern _ECCP1ASbits
                      00131         extern _CCP3CONbits
                      00132         extern _ECCP3CONbits
                      00133         extern _CCP2CONbits
                      00134         extern _ECCP2CONbits
                      00135         extern _CCP1CONbits
                      00136         extern _ECCP1CONbits
                      00137         extern _ADCON2bits
                      00138         extern _ADCON1bits
                      00139         extern _ADCON0bits
                      00140         extern _SSP1CON2bits
                      00141         extern _SSPCON2bits
                      00142         extern _SSP1CON1bits
                      00143         extern _SSPCON1bits
                      00144         extern _SSP1STATbits
                      00145         extern _SSPSTATbits
                      00146         extern _T2CONbits
                      00147         extern _T1CONbits
                      00148         extern _RCONbits
                      00149         extern _WDTCONbits
                      00150         extern _ECON1bits
                      00151         extern _OSCCONbits
                      00152         extern _T0CONbits
                      00153         extern _STATUSbits
                      00154         extern _INTCON3bits
                      00155         extern _INTCON2bits
                      00156         extern _INTCONbits
                      00157         extern _STKPTRbits
                      00158         extern _stdin
                      00159         extern _stdout
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00160         extern _LCDText
                      00161         extern _MAADR5
                      00162         extern _MAADR6
                      00163         extern _MAADR3
                      00164         extern _MAADR4
                      00165         extern _MAADR1
                      00166         extern _MAADR2
                      00167         extern _EBSTSD
                      00168         extern _EBSTCON
                      00169         extern _EBSTCS
                      00170         extern _EBSTCSL
                      00171         extern _EBSTCSH
                      00172         extern _MISTAT
                      00173         extern _EFLOCON
                      00174         extern _EPAUS
                      00175         extern _EPAUSL
                      00176         extern _EPAUSH
                      00177         extern _MACON1
                      00178         extern _MACON2
                      00179         extern _MACON3
                      00180         extern _MACON4
                      00181         extern _MABBIPG
                      00182         extern _MAIPG
                      00183         extern _MAIPGL
                      00184         extern _MAIPGH
                      00185         extern _MACLCON1
                      00186         extern _MACLCON2
                      00187         extern _MAMXFL
                      00188         extern _MAMXFLL
                      00189         extern _MAMXFLH
                      00190         extern _MICON
                      00191         extern _MICMD
                      00192         extern _MIREGADR
                      00193         extern _MIWR
                      00194         extern _MIWRL
                      00195         extern _MIWRH
                      00196         extern _MIRD
                      00197         extern _MIRDL
                      00198         extern _MIRDH
                      00199         extern _EHT0
                      00200         extern _EHT1
                      00201         extern _EHT2
                      00202         extern _EHT3
                      00203         extern _EHT4
                      00204         extern _EHT5
                      00205         extern _EHT6
                      00206         extern _EHT7
                      00207         extern _EPMM0
                      00208         extern _EPMM1
                      00209         extern _EPMM2
                      00210         extern _EPMM3
                      00211         extern _EPMM4
                      00212         extern _EPMM5
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00213         extern _EPMM6
                      00214         extern _EPMM7
                      00215         extern _EPMCS
                      00216         extern _EPMCSL
                      00217         extern _EPMCSH
                      00218         extern _EPMO
                      00219         extern _EPMOL
                      00220         extern _EPMOH
                      00221         extern _EWOLIE
                      00222         extern _EWOLIR
                      00223         extern _ERXFCON
                      00224         extern _EPKTCNT
                      00225         extern _EWRPT
                      00226         extern _EWRPTL
                      00227         extern _EWRPTH
                      00228         extern _ETXST
                      00229         extern _ETXSTL
                      00230         extern _ETXSTH
                      00231         extern _ETXND
                      00232         extern _ETXNDL
                      00233         extern _ETXNDH
                      00234         extern _ERXST
                      00235         extern _ERXSTL
                      00236         extern _ERXSTH
                      00237         extern _ERXND
                      00238         extern _ERXNDL
                      00239         extern _ERXNDH
                      00240         extern _ERXRDPT
                      00241         extern _ERXRDPTL
                      00242         extern _ERXRDPTH
                      00243         extern _ERXWRPT
                      00244         extern _ERXWRPTL
                      00245         extern _ERXWRPTH
                      00246         extern _EDMAST
                      00247         extern _EDMASTL
                      00248         extern _EDMASTH
                      00249         extern _EDMAND
                      00250         extern _EDMANDL
                      00251         extern _EDMANDH
                      00252         extern _EDMADST
                      00253         extern _EDMADSTL
                      00254         extern _EDMADSTH
                      00255         extern _EDMACS
                      00256         extern _EDMACSL
                      00257         extern _EDMACSH
                      00258         extern _EIE
                      00259         extern _ESTAT
                      00260         extern _ECON2
                      00261         extern _EIR
                      00262         extern _EDATA
                      00263         extern _SSP2CON2
                      00264         extern _SSP2CON1
                      00265         extern _SSP2STAT
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00266         extern _SSP2ADD
                      00267         extern _SSP2BUF
                      00268         extern _ECCP2DEL
                      00269         extern _ECCP2AS
                      00270         extern _ECCP3DEL
                      00271         extern _ECCP3AS
                      00272         extern _RCSTA2
                      00273         extern _TXSTA2
                      00274         extern _TXREG2
                      00275         extern _RCREG2
                      00276         extern _SPBRG2
                      00277         extern _CCP5CON
                      00278         extern _CCPR5
                      00279         extern _CCPR5L
                      00280         extern _CCPR5H
                      00281         extern _CCP4CON
                      00282         extern _CCPR4
                      00283         extern _CCPR4L
                      00284         extern _CCPR4H
                      00285         extern _T4CON
                      00286         extern _PR4
                      00287         extern _TMR4
                      00288         extern _ECCP1DEL
                      00289         extern _ERDPT
                      00290         extern _ERDPTL
                      00291         extern _ERDPTH
                      00292         extern _BAUDCON2
                      00293         extern _BAUDCTL2
                      00294         extern _SPBRGH2
                      00295         extern _BAUDCON
                      00296         extern _BAUDCON1
                      00297         extern _BAUDCTL
                      00298         extern _BAUDCTL1
                      00299         extern _SPBRGH
                      00300         extern _SPBRGH1
                      00301         extern _PORTA
                      00302         extern _PORTB
                      00303         extern _PORTC
                      00304         extern _PORTD
                      00305         extern _PORTE
                      00306         extern _PORTF
                      00307         extern _PORTG
                      00308         extern _PORTH
                      00309         extern _PORTJ
                      00310         extern _LATA
                      00311         extern _LATB
                      00312         extern _LATC
                      00313         extern _LATD
                      00314         extern _LATE
                      00315         extern _LATF
                      00316         extern _LATG
                      00317         extern _LATH
                      00318         extern _LATJ
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00319         extern _DDRA
                      00320         extern _TRISA
                      00321         extern _DDRB
                      00322         extern _TRISB
                      00323         extern _DDRC
                      00324         extern _TRISC
                      00325         extern _DDRD
                      00326         extern _TRISD
                      00327         extern _DDRE
                      00328         extern _TRISE
                      00329         extern _DDRF
                      00330         extern _TRISF
                      00331         extern _DDRG
                      00332         extern _TRISG
                      00333         extern _DDRH
                      00334         extern _TRISH
                      00335         extern _DDRJ
                      00336         extern _TRISJ
                      00337         extern _OSCTUNE
                      00338         extern _MEMCON
                      00339         extern _PIE1
                      00340         extern _PIR1
                      00341         extern _IPR1
                      00342         extern _PIE2
                      00343         extern _PIR2
                      00344         extern _IPR2
                      00345         extern _PIE3
                      00346         extern _PIR3
                      00347         extern _IPR3
                      00348         extern _EECON1
                      00349         extern _EECON2
                      00350         extern _RCSTA
                      00351         extern _RCSTA1
                      00352         extern _TXSTA
                      00353         extern _TXSTA1
                      00354         extern _TXREG
                      00355         extern _TXREG1
                      00356         extern _RCREG
                      00357         extern _RCREG1
                      00358         extern _SPBRG
                      00359         extern _SPBRG1
                      00360         extern _PSPCON
                      00361         extern _T3CON
                      00362         extern _TMR3L
                      00363         extern _TMR3H
                      00364         extern _CMCON
                      00365         extern _CVRCON
                      00366         extern _ECCP1AS
                      00367         extern _CCP3CON
                      00368         extern _ECCP3CON
                      00369         extern _CCPR3
                      00370         extern _CCPR3L
                      00371         extern _CCPR3H
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00372         extern _CCP2CON
                      00373         extern _ECCP2CON
                      00374         extern _CCPR2
                      00375         extern _CCPR2L
                      00376         extern _CCPR2H
                      00377         extern _CCP1CON
                      00378         extern _ECCP1CON
                      00379         extern _CCPR1
                      00380         extern _CCPR1L
                      00381         extern _CCPR1H
                      00382         extern _ADCON2
                      00383         extern _ADCON1
                      00384         extern _ADCON0
                      00385         extern _ADRES
                      00386         extern _ADRESL
                      00387         extern _ADRESH
                      00388         extern _SSP1CON2
                      00389         extern _SSPCON2
                      00390         extern _SSP1CON1
                      00391         extern _SSPCON1
                      00392         extern _SSP1STAT
                      00393         extern _SSPSTAT
                      00394         extern _SSP1ADD
                      00395         extern _SSPADD
                      00396         extern _SSP1BUF
                      00397         extern _SSPBUF
                      00398         extern _T2CON
                      00399         extern _PR2
                      00400         extern _TMR2
                      00401         extern _T1CON
                      00402         extern _TMR1L
                      00403         extern _TMR1H
                      00404         extern _RCON
                      00405         extern _WDTCON
                      00406         extern _ECON1
                      00407         extern _OSCCON
                      00408         extern _T0CON
                      00409         extern _TMR0L
                      00410         extern _TMR0H
                      00411         extern _STATUS
                      00412         extern _FSR2L
                      00413         extern _FSR2H
                      00414         extern _PLUSW2
                      00415         extern _PREINC2
                      00416         extern _POSTDEC2
                      00417         extern _POSTINC2
                      00418         extern _INDF2
                      00419         extern _BSR
                      00420         extern _FSR1L
                      00421         extern _FSR1H
                      00422         extern _PLUSW1
                      00423         extern _PREINC1
                      00424         extern _POSTDEC1
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00425         extern _POSTINC1
                      00426         extern _INDF1
                      00427         extern _WREG
                      00428         extern _FSR0L
                      00429         extern _FSR0H
                      00430         extern _PLUSW0
                      00431         extern _PREINC0
                      00432         extern _POSTDEC0
                      00433         extern _POSTINC0
                      00434         extern _INDF0
                      00435         extern _INTCON3
                      00436         extern _INTCON2
                      00437         extern _INTCON
                      00438         extern _PROD
                      00439         extern _PRODL
                      00440         extern _PRODH
                      00441         extern _TABLAT
                      00442         extern _TBLPTR
                      00443         extern _TBLPTRL
                      00444         extern _TBLPTRH
                      00445         extern _TBLPTRU
                      00446         extern _PC
                      00447         extern _PCL
                      00448         extern _PCLATH
                      00449         extern _PCLATU
                      00450         extern _STKPTR
                      00451         extern _TOS
                      00452         extern _TOSL
                      00453         extern _TOSH
                      00454         extern _TOSU
                      00455         extern _ultoa
                      00456         extern _strlen
                      00457         extern _LCDInit
                      00458         extern _LCDUpdate
                      00459 ;--------------------------------------------------------
                      00460 ;       Equates to used internal registers
                      00461 ;--------------------------------------------------------
  00000FD8            00462 STATUS  equ     0xfd8
  00000FFA            00463 PCLATH  equ     0xffa
  00000FFB            00464 PCLATU  equ     0xffb
  00000FE8            00465 WREG    equ     0xfe8
  00000FE0            00466 BSR     equ     0xfe0
  00000FE9            00467 FSR0L   equ     0xfe9
  00000FEA            00468 FSR0H   equ     0xfea
  00000FE1            00469 FSR1L   equ     0xfe1
  00000FD9            00470 FSR2L   equ     0xfd9
  00000FEF            00471 INDF0   equ     0xfef
  00000FE5            00472 POSTDEC1        equ     0xfe5
  00000FE4            00473 PREINC1 equ     0xfe4
  00000FDB            00474 PLUSW2  equ     0xfdb
  00000FF3            00475 PRODL   equ     0xff3
  00000FF4            00476 PRODH   equ     0xff4
                      00477 
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00478 
                      00479         idata
000000                00480 _time   db      0x30, 0x30, 0x3a, 0x30, 0x30, 0x20, 0x20, 0x30, 0x30, 0x3a, 0x30, 0x30
00000C                00481         db      0x3a, 0x30, 0x30, 0x00
000010                00482 _currentTime    db      LOW((_time + 7)), HIGH((_time + 7)), 0x80
000013                00483 _position       db      0x00, 0x00
000015                00484 _refresh        db      0x01, 0x00
000017                00485 _bres   db      0x00, 0x00, 0x00, 0x00
                      00486 
                      00487 
                      00488 ; Internal registers
                      00489 .registers      udata_ovr       0x0000
000000                00490 r0x00   res     1
000001                00491 r0x01   res     1
000002                00492 r0x02   res     1
000003                00493 r0x03   res     1
000004                00494 r0x04   res     1
000005                00495 r0x05   res     1
000006                00496 r0x06   res     1
000007                00497 r0x07   res     1
000008                00498 r0x08   res     1
000009                00499 r0x09   res     1
00000A                00500 r0x0a   res     1
00000B                00501 r0x0b   res     1
00000C                00502 r0x0c   res     1
00000D                00503 r0x0d   res     1
00000E                00504 r0x0e   res     1
00000F                00505 r0x0f   res     1
000010                00506 r0x10   res     1
000011                00507 r0x11   res     1
000012                00508 r0x12   res     1
000013                00509 r0x13   res     1
000014                00510 r0x14   res     1
000015                00511 r0x15   res     1
                      00512 
                      00513 udata_testint_0 udata
000000                00514 _main_string_1_1        res     16
                      00515 
                      00516 udata_testint_1 udata
000000                00517 _display_word_WDigit_1_1        res     6
                      00518 
                      00519 ;--------------------------------------------------------
                      00520 ; interrupt vector 
                      00521 ;--------------------------------------------------------
                      00522 
                      00523 ;--------------------------------------------------------
                      00524 ; global & static initialisations
                      00525 ;--------------------------------------------------------
                      00526 ; ; Starting pCode block for absolute section
                      00527 ; ;-----------------------------------------
                      00528 S_testint_ivec_0x1_high_isr     code    0X000008
000008                00529 ivec_0x1_high_isr:
000008 EF00 F000      00530         GOTO    _high_isr
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00531 
                      00532 ; I code from now on!
                      00533 ; ; Starting pCode block
                      00534 S_testint__main code
000000                00535 _main:
000000 0100           00536         BANKSEL _main_string_1_1
                      00537 ;       .line   84; testint.c   char string[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
000002 6B00           00538         CLRF    _main_string_1_1, B
000004 0100           00539         BANKSEL (_main_string_1_1 + 1)
000006 6B00           00540         CLRF    (_main_string_1_1 + 1), B
000008 0100           00541         BANKSEL (_main_string_1_1 + 2)
00000A 6B00           00542         CLRF    (_main_string_1_1 + 2), B
00000C 0100           00543         BANKSEL (_main_string_1_1 + 3)
00000E 6B00           00544         CLRF    (_main_string_1_1 + 3), B
000010 0100           00545         BANKSEL (_main_string_1_1 + 4)
000012 6B00           00546         CLRF    (_main_string_1_1 + 4), B
000014 0100           00547         BANKSEL (_main_string_1_1 + 5)
000016 6B00           00548         CLRF    (_main_string_1_1 + 5), B
000018 0100           00549         BANKSEL (_main_string_1_1 + 6)
00001A 6B00           00550         CLRF    (_main_string_1_1 + 6), B
00001C 0100           00551         BANKSEL (_main_string_1_1 + 7)
00001E 6B00           00552         CLRF    (_main_string_1_1 + 7), B
000020 0100           00553         BANKSEL (_main_string_1_1 + 8)
000022 6B00           00554         CLRF    (_main_string_1_1 + 8), B
000024 0100           00555         BANKSEL (_main_string_1_1 + 9)
000026 6B00           00556         CLRF    (_main_string_1_1 + 9), B
000028 0100           00557         BANKSEL (_main_string_1_1 + 10)
00002A 6B00           00558         CLRF    (_main_string_1_1 + 10), B
00002C 0100           00559         BANKSEL (_main_string_1_1 + 11)
00002E 6B00           00560         CLRF    (_main_string_1_1 + 11), B
000030 0100           00561         BANKSEL (_main_string_1_1 + 12)
000032 6B00           00562         CLRF    (_main_string_1_1 + 12), B
000034 0100           00563         BANKSEL (_main_string_1_1 + 13)
000036 6B00           00564         CLRF    (_main_string_1_1 + 13), B
000038 0100           00565         BANKSEL (_main_string_1_1 + 14)
00003A 6B00           00566         CLRF    (_main_string_1_1 + 14), B
00003C 0100           00567         BANKSEL (_main_string_1_1 + 15)
00003E 6B00           00568         CLRF    (_main_string_1_1 + 15), B
                      00569 ;       .line   86; testint.c   LED0_TRIS = 0; //configure 1st led pin as output (yellow)
000040 9000           00570         BCF     _TRISJbits, 0
                      00571 ;       .line   87; testint.c   LED1_TRIS = 0; //configure 2nd led pin as output (red)
000042 9200           00572         BCF     _TRISJbits, 1
                      00573 ;       .line   88; testint.c   LED2_TRIS = 0; //configure 3rd led pin as output (red)
000044 9400           00574         BCF     _TRISJbits, 2
                      00575 ;       .line   90; testint.c   BUTTON0_TRIS = 1; //configure button0 as input
000046 8600           00576         BSF     _TRISBbits, 3
                      00577 ;       .line   91; testint.c   BUTTON1_TRIS = 1; //configure button1 as input 
000048 8200           00578         BSF     _TRISBbits, 1
                      00579 ;       .line   93; testint.c   RCONbits.IPEN      = 1;   // Interrupts Priority ENable
00004A 8E00           00580         BSF     _RCONbits, 7
                      00581 ;       .line   95; testint.c   INT1F  = 0;   //clear INT1 flag
00004C 9000           00582         BCF     _INTCON3bits, 0
                      00583 ;       .line   98; testint.c   INTCON3bits.INT1P  = 1; 
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00004E 8C00           00584         BSF     _INTCON3bits, 6
                      00585 ;       .line   100; testint.c  INTCON2bits.INTEDG1= 0;
000050 9A00           00586         BCF     _INTCON2bits, 5
                      00587 ;       .line   103; testint.c  INTCONbits.GIE     = 1;
000052 8E00           00588         BSF     _INTCONbits, 7
                      00589 ;       .line   106; testint.c  INTCON3bits.INT1E  = 1;
000054 8600           00590         BSF     _INTCON3bits, 3
                      00591 ;       .line   107; testint.c  INTCON3bits.INT3E  = 1;
000056 8A00           00592         BSF     _INTCON3bits, 5
                      00593 ;       .line   109; testint.c  T0CONbits.T0CS     = 1;
000058 8A00           00594         BSF     _T0CONbits, 5
                      00595 ;       .line   111; testint.c  LCDInit();
00005A EC00 F000      00596         CALL    _LCDInit
                      00597 ;       .line   112; testint.c  for(i=0;i<100;i++) dumb_delay1ms();
00005E 0E64           00598         MOVLW   0x64
000060 6E00           00599         MOVWF   r0x00
000062 6A00           00600         CLRF    r0x01
000064                00601 _00162_DS_:
000064 EC00 F000      00602         CALL    _dumb_delay1ms
000068 0EFF           00603         MOVLW   0xff
00006A 2600           00604         ADDWF   r0x00, F
00006C A0D8           00605         BTFSS   STATUS, 0
00006E 0600           00606         DECF    r0x01, F
000070 5000           00607         MOVF    r0x00, W
000072 1000           00608         IORWF   r0x01, W
000074 E100           00609         BNZ     _00162_DS_
                      00610 ;       .line   114; testint.c  display_time (); 
000076 EC00 F000      00611         CALL    _display_time
                      00612 ;       .line   117; testint.c  INTCON2bits.TMR0IP       = 1; 
00007A 8400           00613         BSF     _INTCON2bits, 2
                      00614 ;       .line   120; testint.c  TMR0F    = 0;
00007C 9400           00615         BCF     _INTCONbits, 2
                      00616 ;       .line   123; testint.c  T0CONbits.T08BIT    = 0;
00007E 9C00           00617         BCF     _T0CONbits, 6
                      00618 ;       .line   125; testint.c  T0CONbits.PSA       = 1;
000080 8600           00619         BSF     _T0CONbits, 3
                      00620 ;       .line   127; testint.c  INTCONbits.TMR0IE   = 1;
000082 8A00           00621         BSF     _INTCONbits, 5
                      00622 ;       .line   129; testint.c  T0CONbits.TMR0ON    = 1;
000084 8E00           00623         BSF     _T0CONbits, 7
000086                00624 _00158_DS_:
000086 0100           00625         BANKSEL _refresh
                      00626 ;       .line   134; testint.c  if ( refresh == 1){
000088 5100           00627         MOVF    _refresh, W, B
00008A 0A01           00628         XORLW   0x01
00008C E100           00629         BNZ     _00170_DS_
00008E 0100           00630         BANKSEL (_refresh + 1)
000090 5100           00631         MOVF    (_refresh + 1), W, B
000092 E000           00632         BZ      _00171_DS_
000094                00633 _00170_DS_:
000094 D000           00634         BRA     _00158_DS_
000096                00635 _00171_DS_:
000096 0100           00636         BANKSEL _refresh
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00637 ;       .line   135; testint.c  refresh = 0;
000098 6B00           00638         CLRF    _refresh, B
00009A 0100           00639         BANKSEL (_refresh + 1)
00009C 6B00           00640         CLRF    (_refresh + 1), B
                      00641 ;       .line   136; testint.c  display_time();
00009E EC00 F000      00642         CALL    _display_time
0000A2 D000           00643         BRA     _00158_DS_
0000A4 0012           00644         RETURN  
                      00645 
                      00646 ; ; Starting pCode block
                      00647 S_testint__dumb_delay1ms        code
000000                00648 _dumb_delay1ms:
                      00649 ;       .line   332; testint.c  void dumb_delay1ms (void)
000000 CFD9 FFE5      00650         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00651         MOVFF   FSR1L, FSR2L
                      00652 ;       .line   334; testint.c  TMR0H = HIGH (0x10000-EXEC_FREQ/1000);
000008 0ED8           00653         MOVLW   0xd8
00000A 6E00           00654         MOVWF   _TMR0H
                      00655 ;       .line   335; testint.c  TMR0L = LOW  (0x10000-EXEC_FREQ/1000);
00000C 0EF0           00656         MOVLW   0xf0
00000E 6E00           00657         MOVWF   _TMR0L
                      00658 ;       .line   336; testint.c  T0CONbits.TMR0ON = 0;  //disable timer0
000010 9E00           00659         BCF     _T0CONbits, 7
                      00660 ;       .line   337; testint.c  T0CONbits.T08BIT = 0;  //use timer0 16-bit counter
000012 9C00           00661         BCF     _T0CONbits, 6
                      00662 ;       .line   338; testint.c  T0CONbits.T0CS   = 0;  //use timer0 instruction cycle clock
000014 9A00           00663         BCF     _T0CONbits, 5
                      00664 ;       .line   339; testint.c  T0CONbits.PSA    = 1;  //disable timer0 prescaler
000016 8600           00665         BSF     _T0CONbits, 3
                      00666 ;       .line   340; testint.c  INTCONbits.T0IF   = 0;  //clear timer0 overflow bit
000018 9400           00667         BCF     _INTCONbits, 2
                      00668 ;       .line   341; testint.c  T0CONbits.TMR0ON = 1;  //enable timer0
00001A 8E00           00669         BSF     _T0CONbits, 7
00001C                00670 _00350_DS_:
                      00671 ;       .line   342; testint.c  while(!INTCONbits.T0IF){} //busy wait for timer0 to overflow
00001C A400           00672         BTFSS   _INTCONbits, 2
00001E D000           00673         BRA     _00350_DS_
                      00674 ;       .line   343; testint.c  INTCONbits.T0IF   = 0;  //clear timer0 overflow bit
000020 9400           00675         BCF     _INTCONbits, 2
                      00676 ;       .line   344; testint.c  T0CONbits.TMR0ON = 0;  //disable timer0   
000022 9E00           00677         BCF     _T0CONbits, 7
000024 CFE4 FFD9      00678         MOVFF   PREINC1, FSR2L
000028 0012           00679         RETURN  
                      00680 
                      00681 ; ; Starting pCode block
                      00682 S_testint__strlcpy      code
000000                00683 _strlcpy:
                      00684 ;       .line   301; testint.c  strlcpy(char *dst, const char *src, size_t siz)
000000 CFD9 FFE5      00685         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00686         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      00687         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      00688         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      00689         MOVFF   r0x02, POSTDEC1
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000014 C000 FFE5      00690         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      00691         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      00692         MOVFF   r0x05, POSTDEC1
000020 C000 FFE5      00693         MOVFF   r0x06, POSTDEC1
000024 C000 FFE5      00694         MOVFF   r0x07, POSTDEC1
000028 C000 FFE5      00695         MOVFF   r0x08, POSTDEC1
00002C C000 FFE5      00696         MOVFF   r0x09, POSTDEC1
000030 C000 FFE5      00697         MOVFF   r0x0a, POSTDEC1
000034 C000 FFE5      00698         MOVFF   r0x0b, POSTDEC1
000038 C000 FFE5      00699         MOVFF   r0x0c, POSTDEC1
00003C C000 FFE5      00700         MOVFF   r0x0d, POSTDEC1
000040 C000 FFE5      00701         MOVFF   r0x0e, POSTDEC1
000044 C000 FFE5      00702         MOVFF   r0x0f, POSTDEC1
000048 C000 FFE5      00703         MOVFF   r0x10, POSTDEC1
00004C C000 FFE5      00704         MOVFF   r0x11, POSTDEC1
000050 C000 FFE5      00705         MOVFF   r0x12, POSTDEC1
000054 C000 FFE5      00706         MOVFF   r0x13, POSTDEC1
000058 C000 FFE5      00707         MOVFF   r0x14, POSTDEC1
00005C C000 FFE5      00708         MOVFF   r0x15, POSTDEC1
000060 0E02           00709         MOVLW   0x02
000062 CFDB F000      00710         MOVFF   PLUSW2, r0x00
000066 0E03           00711         MOVLW   0x03
000068 CFDB F000      00712         MOVFF   PLUSW2, r0x01
00006C 0E04           00713         MOVLW   0x04
00006E CFDB F000      00714         MOVFF   PLUSW2, r0x02
000072 0E05           00715         MOVLW   0x05
000074 CFDB F000      00716         MOVFF   PLUSW2, r0x03
000078 0E06           00717         MOVLW   0x06
00007A CFDB F000      00718         MOVFF   PLUSW2, r0x04
00007E 0E07           00719         MOVLW   0x07
000080 CFDB F000      00720         MOVFF   PLUSW2, r0x05
000084 0E08           00721         MOVLW   0x08
000086 CFDB F000      00722         MOVFF   PLUSW2, r0x06
00008A 0E09           00723         MOVLW   0x09
00008C CFDB F000      00724         MOVFF   PLUSW2, r0x07
                      00725 ;       .line   303; testint.c  char       *d = dst;
000090 C000 F000      00726         MOVFF   r0x00, r0x08
000094 C000 F000      00727         MOVFF   r0x01, r0x09
000098 C000 F000      00728         MOVFF   r0x02, r0x0a
                      00729 ;       .line   304; testint.c  const char *s = src;
00009C C000 F000      00730         MOVFF   r0x03, r0x0b
0000A0 C000 F000      00731         MOVFF   r0x04, r0x0c
0000A4 C000 F000      00732         MOVFF   r0x05, r0x0d
                      00733 ;       .line   305; testint.c  size_t      n = siz;
0000A8 C000 F000      00734         MOVFF   r0x06, r0x0e
0000AC C000 F000      00735         MOVFF   r0x07, r0x0f
                      00736 ;       .line   308; testint.c  if (n != 0)
0000B0 5000           00737         MOVF    r0x06, W
0000B2 1000           00738         IORWF   r0x07, W
0000B4 B4D8           00739         BTFSC   STATUS, 2
0000B6 D000           00740         BRA     _00330_DS_
                      00741 ;       .line   310; testint.c  while (--n != 0)
0000B8 C000 F000      00742         MOVFF   r0x03, r0x10
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000BC C000 F000      00743         MOVFF   r0x04, r0x11
0000C0 C000 F000      00744         MOVFF   r0x05, r0x12
0000C4 C000 F000      00745         MOVFF   r0x06, r0x13
0000C8 C000 F000      00746         MOVFF   r0x07, r0x14
0000CC                00747 _00326_DS_:
0000CC 0EFF           00748         MOVLW   0xff
0000CE 2600           00749         ADDWF   r0x13, F
0000D0 A0D8           00750         BTFSS   STATUS, 0
0000D2 0600           00751         DECF    r0x14, F
0000D4 5000           00752         MOVF    r0x13, W
0000D6 1000           00753         IORWF   r0x14, W
0000D8 E000           00754         BZ      _00345_DS_
                      00755 ;       .line   312; testint.c  if ((*d++ = *s++) == '\0')
0000DA C000 FFE9      00756         MOVFF   r0x10, FSR0L
0000DE C000 FFF3      00757         MOVFF   r0x11, PRODL
0000E2 5000           00758         MOVF    r0x12, W
0000E4 EC00 F000      00759         CALL    __gptrget1
0000E8 6E00           00760         MOVWF   r0x15
0000EA 2A00           00761         INCF    r0x10, F
0000EC B0D8           00762         BTFSC   STATUS, 0
0000EE 2A00           00763         INCF    r0x11, F
0000F0 B0D8           00764         BTFSC   STATUS, 0
0000F2 2A00           00765         INCF    r0x12, F
0000F4 C000 FFE5      00766         MOVFF   r0x15, POSTDEC1
0000F8 C000 FFE9      00767         MOVFF   r0x00, FSR0L
0000FC C000 FFF3      00768         MOVFF   r0x01, PRODL
000100 5000           00769         MOVF    r0x02, W
000102 EC00 F000      00770         CALL    __gptrput1
000106 2A00           00771         INCF    r0x00, F
000108 B0D8           00772         BTFSC   STATUS, 0
00010A 2A00           00773         INCF    r0x01, F
00010C B0D8           00774         BTFSC   STATUS, 0
00010E 2A00           00775         INCF    r0x02, F
000110 5000           00776         MOVF    r0x15, W
000112 E100           00777         BNZ     _00326_DS_
000114                00778 _00345_DS_:
                      00779 ;       .line   313; testint.c  break;
000114 C000 F000      00780         MOVFF   r0x10, r0x0b
000118 C000 F000      00781         MOVFF   r0x11, r0x0c
00011C C000 F000      00782         MOVFF   r0x12, r0x0d
000120 C000 F000      00783         MOVFF   r0x00, r0x08
000124 C000 F000      00784         MOVFF   r0x01, r0x09
000128 C000 F000      00785         MOVFF   r0x02, r0x0a
00012C C000 F000      00786         MOVFF   r0x13, r0x0e
000130 C000 F000      00787         MOVFF   r0x14, r0x0f
000134                00788 _00330_DS_:
                      00789 ;       .line   318; testint.c  if (n == 0)
000134 5000           00790         MOVF    r0x0e, W
000136 1000           00791         IORWF   r0x0f, W
000138 E100           00792         BNZ     _00337_DS_
                      00793 ;       .line   320; testint.c  if (siz != 0)
00013A 5000           00794         MOVF    r0x06, W
00013C 1000           00795         IORWF   r0x07, W
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00013E E000           00796         BZ      _00344_DS_
                      00797 ;       .line   321; testint.c  *d = '\0';          /* NUL-terminate dst */
000140 0E00           00798         MOVLW   0x00
000142 6EE5           00799         MOVWF   POSTDEC1
000144 C000 FFE9      00800         MOVFF   r0x08, FSR0L
000148 C000 FFF3      00801         MOVFF   r0x09, PRODL
00014C 5000           00802         MOVF    r0x0a, W
00014E EC00 F000      00803         CALL    __gptrput1
000152                00804 _00344_DS_:
                      00805 ;       .line   322; testint.c  while (*s++)
000152 C000 F000      00806         MOVFF   r0x0b, r0x00
000156 C000 F000      00807         MOVFF   r0x0c, r0x01
00015A C000 F000      00808         MOVFF   r0x0d, r0x02
00015E                00809 _00333_DS_:
00015E C000 FFE9      00810         MOVFF   r0x00, FSR0L
000162 C000 FFF3      00811         MOVFF   r0x01, PRODL
000166 5000           00812         MOVF    r0x02, W
000168 EC00 F000      00813         CALL    __gptrget1
00016C 6E00           00814         MOVWF   r0x06
00016E 2A00           00815         INCF    r0x00, F
000170 B0D8           00816         BTFSC   STATUS, 0
000172 2A00           00817         INCF    r0x01, F
000174 B0D8           00818         BTFSC   STATUS, 0
000176 2A00           00819         INCF    r0x02, F
000178 5000           00820         MOVF    r0x06, W
00017A E100           00821         BNZ     _00333_DS_
00017C C000 F000      00822         MOVFF   r0x00, r0x0b
000180 C000 F000      00823         MOVFF   r0x01, r0x0c
000184 C000 F000      00824         MOVFF   r0x02, r0x0d
000188                00825 _00337_DS_:
                      00826 ;       .line   328; testint.c  return (s - src - 1);       /* count does not include NUL */
000188 5000           00827         MOVF    r0x03, W
00018A 5C00           00828         SUBWF   r0x0b, W
00018C 6E00           00829         MOVWF   r0x03
00018E 5000           00830         MOVF    r0x04, W
000190 5800           00831         SUBWFB  r0x0c, W
000192 6E00           00832         MOVWF   r0x04
000194 0EFF           00833         MOVLW   0xff
000196 2600           00834         ADDWF   r0x03, F
000198 A0D8           00835         BTFSS   STATUS, 0
00019A 0600           00836         DECF    r0x04, F
00019C C000 FFF3      00837         MOVFF   r0x04, PRODL
0001A0 5000           00838         MOVF    r0x03, W
0001A2 CFE4 F000      00839         MOVFF   PREINC1, r0x15
0001A6 CFE4 F000      00840         MOVFF   PREINC1, r0x14
0001AA CFE4 F000      00841         MOVFF   PREINC1, r0x13
0001AE CFE4 F000      00842         MOVFF   PREINC1, r0x12
0001B2 CFE4 F000      00843         MOVFF   PREINC1, r0x11
0001B6 CFE4 F000      00844         MOVFF   PREINC1, r0x10
0001BA CFE4 F000      00845         MOVFF   PREINC1, r0x0f
0001BE CFE4 F000      00846         MOVFF   PREINC1, r0x0e
0001C2 CFE4 F000      00847         MOVFF   PREINC1, r0x0d
0001C6 CFE4 F000      00848         MOVFF   PREINC1, r0x0c
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001CA CFE4 F000      00849         MOVFF   PREINC1, r0x0b
0001CE CFE4 F000      00850         MOVFF   PREINC1, r0x0a
0001D2 CFE4 F000      00851         MOVFF   PREINC1, r0x09
0001D6 CFE4 F000      00852         MOVFF   PREINC1, r0x08
0001DA CFE4 F000      00853         MOVFF   PREINC1, r0x07
0001DE CFE4 F000      00854         MOVFF   PREINC1, r0x06
0001E2 CFE4 F000      00855         MOVFF   PREINC1, r0x05
0001E6 CFE4 F000      00856         MOVFF   PREINC1, r0x04
0001EA CFE4 F000      00857         MOVFF   PREINC1, r0x03
0001EE CFE4 F000      00858         MOVFF   PREINC1, r0x02
0001F2 CFE4 F000      00859         MOVFF   PREINC1, r0x01
0001F6 CFE4 F000      00860         MOVFF   PREINC1, r0x00
0001FA CFE4 FFD9      00861         MOVFF   PREINC1, FSR2L
0001FE 0012           00862         RETURN  
                      00863 
                      00864 ; ; Starting pCode block
                      00865 S_testint__display_string       code
000000                00866 _display_string:
                      00867 ;       .line   256; testint.c  void display_string(BYTE pos, char* text)
000000 CFD9 FFE5      00868         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00869         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      00870         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      00871         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      00872         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      00873         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      00874         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      00875         MOVFF   r0x05, POSTDEC1
000020 C000 FFE5      00876         MOVFF   r0x06, POSTDEC1
000024 C000 FFE5      00877         MOVFF   r0x07, POSTDEC1
000028 0E02           00878         MOVLW   0x02
00002A CFDB F000      00879         MOVFF   PLUSW2, r0x00
00002E 0E03           00880         MOVLW   0x03
000030 CFDB F000      00881         MOVFF   PLUSW2, r0x01
000034 0E04           00882         MOVLW   0x04
000036 CFDB F000      00883         MOVFF   PLUSW2, r0x02
00003A 0E05           00884         MOVLW   0x05
00003C CFDB F000      00885         MOVFF   PLUSW2, r0x03
                      00886 ;       .line   258; testint.c  BYTE l= strlen(text)+1;
000040 5000           00887         MOVF    r0x03, W
000042 6EE5           00888         MOVWF   POSTDEC1
000044 5000           00889         MOVF    r0x02, W
000046 6EE5           00890         MOVWF   POSTDEC1
000048 5000           00891         MOVF    r0x01, W
00004A 6EE5           00892         MOVWF   POSTDEC1
00004C EC00 F000      00893         CALL    _strlen
000050 6E00           00894         MOVWF   r0x04
000052 CFF3 F000      00895         MOVFF   PRODL, r0x05
000056 0E03           00896         MOVLW   0x03
000058 26E1           00897         ADDWF   FSR1L, F
00005A 2A00           00898         INCF    r0x04, F
                      00899 ;       .line   259; testint.c  BYTE max= 32-pos;
00005C 5000           00900         MOVF    r0x00, W
00005E 0820           00901         SUBLW   0x20
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000060 6E00           00902         MOVWF   r0x05
                      00903 ;       .line   260; testint.c  strlcpy((char*)&LCDText[pos], text,(l<max)?l:max );
000062 6A00           00904         CLRF    r0x06
000064 0E00           00905         MOVLW   LOW(_LCDText)
000066 2600           00906         ADDWF   r0x00, F
000068 0E00           00907         MOVLW   HIGH(_LCDText)
00006A 2200           00908         ADDWFC  r0x06, F
00006C 5000           00909         MOVF    r0x06, W
00006E 6E00           00910         MOVWF   r0x06
000070 5000           00911         MOVF    r0x00, W
000072 6E00           00912         MOVWF   r0x00
000074 0E80           00913         MOVLW   0x80
000076 6E00           00914         MOVWF   r0x07
000078 5000           00915         MOVF    r0x05, W
00007A 5C00           00916         SUBWF   r0x04, W
00007C E300           00917         BNC     _00317_DS_
00007E C000 F000      00918         MOVFF   r0x05, r0x04
000082                00919 _00317_DS_:
000082 6A00           00920         CLRF    r0x05
000084 5000           00921         MOVF    r0x05, W
000086 6EE5           00922         MOVWF   POSTDEC1
000088 5000           00923         MOVF    r0x04, W
00008A 6EE5           00924         MOVWF   POSTDEC1
00008C 5000           00925         MOVF    r0x03, W
00008E 6EE5           00926         MOVWF   POSTDEC1
000090 5000           00927         MOVF    r0x02, W
000092 6EE5           00928         MOVWF   POSTDEC1
000094 5000           00929         MOVF    r0x01, W
000096 6EE5           00930         MOVWF   POSTDEC1
000098 5000           00931         MOVF    r0x07, W
00009A 6EE5           00932         MOVWF   POSTDEC1
00009C 5000           00933         MOVF    r0x06, W
00009E 6EE5           00934         MOVWF   POSTDEC1
0000A0 5000           00935         MOVF    r0x00, W
0000A2 6EE5           00936         MOVWF   POSTDEC1
0000A4 EC00 F000      00937         CALL    _strlcpy
0000A8 0E08           00938         MOVLW   0x08
0000AA 26E1           00939         ADDWF   FSR1L, F
                      00940 ;       .line   261; testint.c  LCDUpdate();
0000AC EC00 F000      00941         CALL    _LCDUpdate
0000B0 CFE4 F000      00942         MOVFF   PREINC1, r0x07
0000B4 CFE4 F000      00943         MOVFF   PREINC1, r0x06
0000B8 CFE4 F000      00944         MOVFF   PREINC1, r0x05
0000BC CFE4 F000      00945         MOVFF   PREINC1, r0x04
0000C0 CFE4 F000      00946         MOVFF   PREINC1, r0x03
0000C4 CFE4 F000      00947         MOVFF   PREINC1, r0x02
0000C8 CFE4 F000      00948         MOVFF   PREINC1, r0x01
0000CC CFE4 F000      00949         MOVFF   PREINC1, r0x00
0000D0 CFE4 FFD9      00950         MOVFF   PREINC1, FSR2L
0000D4 0012           00951         RETURN  
                      00952 
                      00953 ; ; Starting pCode block
                      00954 S_testint__display_word code
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000000                00955 _display_word:
                      00956 ;       .line   234; testint.c  void display_word(BYTE pos, WORD w) //WORD is a 16 bits unsigned
000000 CFD9 FFE5      00957         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00958         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      00959         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      00960         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      00961         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      00962         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      00963         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      00964         MOVFF   r0x05, POSTDEC1
000020 0E02           00965         MOVLW   0x02
000022 CFDB F000      00966         MOVFF   PLUSW2, r0x00
000026 0E03           00967         MOVLW   0x03
000028 CFDB F000      00968         MOVFF   PLUSW2, r0x01
00002C 0E04           00969         MOVLW   0x04
00002E CFDB F000      00970         MOVFF   PLUSW2, r0x02
                      00971 ;       .line   242; testint.c  ultoa(w, WDigit, radix);      
000032 6A00           00972         CLRF    r0x03
000034 6A00           00973         CLRF    r0x04
000036 0E0A           00974         MOVLW   0x0a
000038 6EE5           00975         MOVWF   POSTDEC1
00003A 0E00           00976         MOVLW   HIGH(_display_word_WDigit_1_1)
00003C 6EE5           00977         MOVWF   POSTDEC1
00003E 0E00           00978         MOVLW   LOW(_display_word_WDigit_1_1)
000040 6EE5           00979         MOVWF   POSTDEC1
000042 5000           00980         MOVF    r0x04, W
000044 6EE5           00981         MOVWF   POSTDEC1
000046 5000           00982         MOVF    r0x03, W
000048 6EE5           00983         MOVWF   POSTDEC1
00004A 5000           00984         MOVF    r0x02, W
00004C 6EE5           00985         MOVWF   POSTDEC1
00004E 5000           00986         MOVF    r0x01, W
000050 6EE5           00987         MOVWF   POSTDEC1
000052 EC00 F000      00988         CALL    _ultoa
000056 0E07           00989         MOVLW   0x07
000058 26E1           00990         ADDWF   FSR1L, F
                      00991 ;       .line   243; testint.c  for(j = 0; j < strlen((char*)WDigit); j++)
00005A 6A00           00992         CLRF    r0x01
00005C                00993 _00298_DS_:
00005C 0E00           00994         MOVLW   HIGH(_display_word_WDigit_1_1)
00005E 6E00           00995         MOVWF   r0x03
000060 0E00           00996         MOVLW   LOW(_display_word_WDigit_1_1)
000062 6E00           00997         MOVWF   r0x02
000064 0E80           00998         MOVLW   0x80
000066 6E00           00999         MOVWF   r0x04
000068 5000           01000         MOVF    r0x04, W
00006A 6EE5           01001         MOVWF   POSTDEC1
00006C 5000           01002         MOVF    r0x03, W
00006E 6EE5           01003         MOVWF   POSTDEC1
000070 5000           01004         MOVF    r0x02, W
000072 6EE5           01005         MOVWF   POSTDEC1
000074 EC00 F000      01006         CALL    _strlen
000078 6E00           01007         MOVWF   r0x02
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00007A CFF3 F000      01008         MOVFF   PRODL, r0x03
00007E 0E03           01009         MOVLW   0x03
000080 26E1           01010         ADDWF   FSR1L, F
000082 C000 F000      01011         MOVFF   r0x01, r0x04
000086 6A00           01012         CLRF    r0x05
000088 5000           01013         MOVF    r0x05, W
00008A 0F80           01014         ADDLW   0x80
00008C 6EF3           01015         MOVWF   PRODL
00008E 5000           01016         MOVF    r0x03, W
000090 0F80           01017         ADDLW   0x80
000092 5CF3           01018         SUBWF   PRODL, W
000094 E100           01019         BNZ     _00308_DS_
000096 5000           01020         MOVF    r0x02, W
000098 5C00           01021         SUBWF   r0x04, W
00009A                01022 _00308_DS_:
00009A E200           01023         BC      _00301_DS_
                      01024 ;       .line   245; testint.c  LCDText[LCDPos++] = WDigit[j];
00009C C000 F000      01025         MOVFF   r0x00, r0x02
0000A0 2A00           01026         INCF    r0x00, F
0000A2 6A00           01027         CLRF    r0x03
0000A4 0E00           01028         MOVLW   LOW(_LCDText)
0000A6 2600           01029         ADDWF   r0x02, F
0000A8 0E00           01030         MOVLW   HIGH(_LCDText)
0000AA 2200           01031         ADDWFC  r0x03, F
0000AC 0E00           01032         MOVLW   LOW(_display_word_WDigit_1_1)
0000AE 2400           01033         ADDWF   r0x01, W
0000B0 6E00           01034         MOVWF   r0x04
0000B2 6A00           01035         CLRF    r0x05
0000B4 0E00           01036         MOVLW   HIGH(_display_word_WDigit_1_1)
0000B6 2200           01037         ADDWFC  r0x05, F
0000B8 C000 FFE9      01038         MOVFF   r0x04, FSR0L
0000BC C000 FFEA      01039         MOVFF   r0x05, FSR0H
0000C0 CFEF F000      01040         MOVFF   INDF0, r0x04
0000C4 C000 FFE9      01041         MOVFF   r0x02, FSR0L
0000C8 C000 FFEA      01042         MOVFF   r0x03, FSR0H
0000CC C000 FFEF      01043         MOVFF   r0x04, INDF0
                      01044 ;       .line   243; testint.c  for(j = 0; j < strlen((char*)WDigit); j++)
0000D0 2A00           01045         INCF    r0x01, F
0000D2 D000           01046         BRA     _00298_DS_
0000D4                01047 _00301_DS_:
                      01048 ;       .line   247; testint.c  if(LCDPos < 32u)
0000D4 C000 F000      01049         MOVFF   r0x00, r0x01
0000D8 6A00           01050         CLRF    r0x02
0000DA 0E00           01051         MOVLW   0x00
0000DC 5C00           01052         SUBWF   r0x02, W
0000DE E100           01053         BNZ     _00309_DS_
0000E0 0E20           01054         MOVLW   0x20
0000E2 5C00           01055         SUBWF   r0x01, W
0000E4                01056 _00309_DS_:
0000E4 E200           01057         BC      _00297_DS_
                      01058 ;       .line   248; testint.c  LCDText[LCDPos] = 0;
0000E6 6A00           01059         CLRF    r0x01
0000E8 0E00           01060         MOVLW   LOW(_LCDText)
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000EA 2600           01061         ADDWF   r0x00, F
0000EC 0E00           01062         MOVLW   HIGH(_LCDText)
0000EE 2200           01063         ADDWFC  r0x01, F
0000F0 C000 FFE9      01064         MOVFF   r0x00, FSR0L
0000F4 C000 FFEA      01065         MOVFF   r0x01, FSR0H
0000F8 0E00           01066         MOVLW   0x00
0000FA 6EEF           01067         MOVWF   INDF0
0000FC                01068 _00297_DS_:
                      01069 ;       .line   249; testint.c  LCDUpdate();
0000FC EC00 F000      01070         CALL    _LCDUpdate
000100 CFE4 F000      01071         MOVFF   PREINC1, r0x05
000104 CFE4 F000      01072         MOVFF   PREINC1, r0x04
000108 CFE4 F000      01073         MOVFF   PREINC1, r0x03
00010C CFE4 F000      01074         MOVFF   PREINC1, r0x02
000110 CFE4 F000      01075         MOVFF   PREINC1, r0x01
000114 CFE4 F000      01076         MOVFF   PREINC1, r0x00
000118 CFE4 FFD9      01077         MOVFF   PREINC1, FSR2L
00011C 0012           01078         RETURN  
                      01079 
                      01080 ; ; Starting pCode block
                      01081 S_testint__display_time code
000000                01082 _display_time:
                      01083 ;       .line   219; testint.c  void display_time(){    
000000 CFD9 FFE5      01084         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      01085         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      01086         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      01087         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      01088         MOVFF   r0x02, POSTDEC1
                      01089 ;       .line   220; testint.c  display_string(0,time);             
000014 0E00           01090         MOVLW   HIGH(_time)
000016 6E00           01091         MOVWF   r0x01
000018 0E00           01092         MOVLW   LOW(_time)
00001A 6E00           01093         MOVWF   r0x00
00001C 0E80           01094         MOVLW   0x80
00001E 6E00           01095         MOVWF   r0x02
000020 5000           01096         MOVF    r0x02, W
000022 6EE5           01097         MOVWF   POSTDEC1
000024 5000           01098         MOVF    r0x01, W
000026 6EE5           01099         MOVWF   POSTDEC1
000028 5000           01100         MOVF    r0x00, W
00002A 6EE5           01101         MOVWF   POSTDEC1
00002C 0E00           01102         MOVLW   0x00
00002E 6EE5           01103         MOVWF   POSTDEC1
000030 EC00 F000      01104         CALL    _display_string
000034 0E04           01105         MOVLW   0x04
000036 26E1           01106         ADDWF   FSR1L, F
000038 0100           01107         BANKSEL _position
                      01108 ;       .line   221; testint.c  display_string(16+position-1," ^");
00003A 5100           01109         MOVF    _position, W, B
00003C 6E00           01110         MOVWF   r0x00
00003E 0E0F           01111         MOVLW   0x0f
000040 2600           01112         ADDWF   r0x00, F
000042 0E00           01113         MOVLW   UPPER(__str_1)
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000044 6EE5           01114         MOVWF   POSTDEC1
000046 0E00           01115         MOVLW   HIGH(__str_1)
000048 6EE5           01116         MOVWF   POSTDEC1
00004A 0E00           01117         MOVLW   LOW(__str_1)
00004C 6EE5           01118         MOVWF   POSTDEC1
00004E 5000           01119         MOVF    r0x00, W
000050 6EE5           01120         MOVWF   POSTDEC1
000052 EC00 F000      01121         CALL    _display_string
000056 0E04           01122         MOVLW   0x04
000058 26E1           01123         ADDWF   FSR1L, F
00005A CFE4 F000      01124         MOVFF   PREINC1, r0x02
00005E CFE4 F000      01125         MOVFF   PREINC1, r0x01
000062 CFE4 F000      01126         MOVFF   PREINC1, r0x00
000066 CFE4 FFD9      01127         MOVFF   PREINC1, FSR2L
00006A 0012           01128         RETURN  
                      01129 
                      01130 ; ; Starting pCode block
                      01131 S_testint__test_inc_current_time        code
000000                01132 _test_inc_current_time:
                      01133 ;       .line   188; testint.c  void test_inc_current_time(){        
000000 CFD9 FFE5      01134         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      01135         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      01136         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      01137         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      01138         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      01139         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      01140         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      01141         MOVFF   r0x05, POSTDEC1
000020 C000 FFE5      01142         MOVFF   r0x06, POSTDEC1
000024 0100           01143         BANKSEL _currentTime
                      01144 ;       .line   189; testint.c  if(currentTime[7] == ':'){
000026 5100           01145         MOVF    _currentTime, W, B
000028 0F07           01146         ADDLW   0x07
00002A 6E00           01147         MOVWF   r0x00
00002C 0E00           01148         MOVLW   0x00
00002E 0100           01149         BANKSEL (_currentTime + 1)
000030 2100           01150         ADDWFC  (_currentTime + 1), W, B
000032 6E00           01151         MOVWF   r0x01
000034 0E00           01152         MOVLW   0x00
000036 0100           01153         BANKSEL (_currentTime + 2)
000038 2100           01154         ADDWFC  (_currentTime + 2), W, B
00003A 6E00           01155         MOVWF   r0x02
00003C C000 FFE9      01156         MOVFF   r0x00, FSR0L
000040 C000 FFF3      01157         MOVFF   r0x01, PRODL
000044 5000           01158         MOVF    r0x02, W
000046 EC00 F000      01159         CALL    __gptrget1
00004A 6E00           01160         MOVWF   r0x03
00004C 5000           01161         MOVF    r0x03, W
00004E 0A3A           01162         XORLW   0x3a
000050 E100           01163         BNZ     _00247_DS_
                      01164 ;       .line   190; testint.c  currentTime[7] = '0';
000052 0E30           01165         MOVLW   0x30
000054 6EE5           01166         MOVWF   POSTDEC1
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000056 C000 FFE9      01167         MOVFF   r0x00, FSR0L
00005A C000 FFF3      01168         MOVFF   r0x01, PRODL
00005E 5000           01169         MOVF    r0x02, W
000060 EC00 F000      01170         CALL    __gptrput1
000064 0100           01171         BANKSEL _currentTime
                      01172 ;       .line   191; testint.c  ++currentTime[6];
000066 5100           01173         MOVF    _currentTime, W, B
000068 0F06           01174         ADDLW   0x06
00006A 6E00           01175         MOVWF   r0x00
00006C 0E00           01176         MOVLW   0x00
00006E 0100           01177         BANKSEL (_currentTime + 1)
000070 2100           01178         ADDWFC  (_currentTime + 1), W, B
000072 6E00           01179         MOVWF   r0x01
000074 0E00           01180         MOVLW   0x00
000076 0100           01181         BANKSEL (_currentTime + 2)
000078 2100           01182         ADDWFC  (_currentTime + 2), W, B
00007A 6E00           01183         MOVWF   r0x02
00007C C000 FFE9      01184         MOVFF   r0x00, FSR0L
000080 C000 FFF3      01185         MOVFF   r0x01, PRODL
000084 5000           01186         MOVF    r0x02, W
000086 EC00 F000      01187         CALL    __gptrget1
00008A 6E00           01188         MOVWF   r0x03
00008C 2A00           01189         INCF    r0x03, F
00008E C000 FFE5      01190         MOVFF   r0x03, POSTDEC1
000092 C000 FFE9      01191         MOVFF   r0x00, FSR0L
000096 C000 FFF3      01192         MOVFF   r0x01, PRODL
00009A 5000           01193         MOVF    r0x02, W
00009C EC00 F000      01194         CALL    __gptrput1
0000A0                01195 _00247_DS_:
0000A0 0100           01196         BANKSEL _currentTime
                      01197 ;       .line   193; testint.c  if(currentTime[6]=='6'){
0000A2 5100           01198         MOVF    _currentTime, W, B
0000A4 0F06           01199         ADDLW   0x06
0000A6 6E00           01200         MOVWF   r0x00
0000A8 0E00           01201         MOVLW   0x00
0000AA 0100           01202         BANKSEL (_currentTime + 1)
0000AC 2100           01203         ADDWFC  (_currentTime + 1), W, B
0000AE 6E00           01204         MOVWF   r0x01
0000B0 0E00           01205         MOVLW   0x00
0000B2 0100           01206         BANKSEL (_currentTime + 2)
0000B4 2100           01207         ADDWFC  (_currentTime + 2), W, B
0000B6 6E00           01208         MOVWF   r0x02
0000B8 C000 FFE9      01209         MOVFF   r0x00, FSR0L
0000BC C000 FFF3      01210         MOVFF   r0x01, PRODL
0000C0 5000           01211         MOVF    r0x02, W
0000C2 EC00 F000      01212         CALL    __gptrget1
0000C6 6E00           01213         MOVWF   r0x03
0000C8 5000           01214         MOVF    r0x03, W
0000CA 0A36           01215         XORLW   0x36
0000CC E100           01216         BNZ     _00249_DS_
                      01217 ;       .line   194; testint.c  currentTime[6]='0';
0000CE 0E30           01218         MOVLW   0x30
0000D0 6EE5           01219         MOVWF   POSTDEC1
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000D2 C000 FFE9      01220         MOVFF   r0x00, FSR0L
0000D6 C000 FFF3      01221         MOVFF   r0x01, PRODL
0000DA 5000           01222         MOVF    r0x02, W
0000DC EC00 F000      01223         CALL    __gptrput1
0000E0 0100           01224         BANKSEL _currentTime
                      01225 ;       .line   195; testint.c  currentTime[4]++;
0000E2 5100           01226         MOVF    _currentTime, W, B
0000E4 0F04           01227         ADDLW   0x04
0000E6 6E00           01228         MOVWF   r0x00
0000E8 0E00           01229         MOVLW   0x00
0000EA 0100           01230         BANKSEL (_currentTime + 1)
0000EC 2100           01231         ADDWFC  (_currentTime + 1), W, B
0000EE 6E00           01232         MOVWF   r0x01
0000F0 0E00           01233         MOVLW   0x00
0000F2 0100           01234         BANKSEL (_currentTime + 2)
0000F4 2100           01235         ADDWFC  (_currentTime + 2), W, B
0000F6 6E00           01236         MOVWF   r0x02
0000F8 C000 FFE9      01237         MOVFF   r0x00, FSR0L
0000FC C000 FFF3      01238         MOVFF   r0x01, PRODL
000100 5000           01239         MOVF    r0x02, W
000102 EC00 F000      01240         CALL    __gptrget1
000106 6E00           01241         MOVWF   r0x03
000108 2A00           01242         INCF    r0x03, F
00010A C000 FFE5      01243         MOVFF   r0x03, POSTDEC1
00010E C000 FFE9      01244         MOVFF   r0x00, FSR0L
000112 C000 FFF3      01245         MOVFF   r0x01, PRODL
000116 5000           01246         MOVF    r0x02, W
000118 EC00 F000      01247         CALL    __gptrput1
                      01248 ;       .line   196; testint.c  alarm();
00011C EC00 F000      01249         CALL    _alarm
000120                01250 _00249_DS_:
000120 0100           01251         BANKSEL _currentTime
                      01252 ;       .line   198; testint.c  if(currentTime[4] == ':'){
000122 5100           01253         MOVF    _currentTime, W, B
000124 0F04           01254         ADDLW   0x04
000126 6E00           01255         MOVWF   r0x00
000128 0E00           01256         MOVLW   0x00
00012A 0100           01257         BANKSEL (_currentTime + 1)
00012C 2100           01258         ADDWFC  (_currentTime + 1), W, B
00012E 6E00           01259         MOVWF   r0x01
000130 0E00           01260         MOVLW   0x00
000132 0100           01261         BANKSEL (_currentTime + 2)
000134 2100           01262         ADDWFC  (_currentTime + 2), W, B
000136 6E00           01263         MOVWF   r0x02
000138 C000 FFE9      01264         MOVFF   r0x00, FSR0L
00013C C000 FFF3      01265         MOVFF   r0x01, PRODL
000140 5000           01266         MOVF    r0x02, W
000142 EC00 F000      01267         CALL    __gptrget1
000146 6E00           01268         MOVWF   r0x03
000148 5000           01269         MOVF    r0x03, W
00014A 0A3A           01270         XORLW   0x3a
00014C E100           01271         BNZ     _00251_DS_
                      01272 ;       .line   199; testint.c  currentTime[4] = '0';
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00014E 0E30           01273         MOVLW   0x30
000150 6EE5           01274         MOVWF   POSTDEC1
000152 C000 FFE9      01275         MOVFF   r0x00, FSR0L
000156 C000 FFF3      01276         MOVFF   r0x01, PRODL
00015A 5000           01277         MOVF    r0x02, W
00015C EC00 F000      01278         CALL    __gptrput1
000160 0100           01279         BANKSEL _currentTime
                      01280 ;       .line   200; testint.c  ++currentTime[3];
000162 5100           01281         MOVF    _currentTime, W, B
000164 0F03           01282         ADDLW   0x03
000166 6E00           01283         MOVWF   r0x00
000168 0E00           01284         MOVLW   0x00
00016A 0100           01285         BANKSEL (_currentTime + 1)
00016C 2100           01286         ADDWFC  (_currentTime + 1), W, B
00016E 6E00           01287         MOVWF   r0x01
000170 0E00           01288         MOVLW   0x00
000172 0100           01289         BANKSEL (_currentTime + 2)
000174 2100           01290         ADDWFC  (_currentTime + 2), W, B
000176 6E00           01291         MOVWF   r0x02
000178 C000 FFE9      01292         MOVFF   r0x00, FSR0L
00017C C000 FFF3      01293         MOVFF   r0x01, PRODL
000180 5000           01294         MOVF    r0x02, W
000182 EC00 F000      01295         CALL    __gptrget1
000186 6E00           01296         MOVWF   r0x03
000188 2A00           01297         INCF    r0x03, F
00018A C000 FFE5      01298         MOVFF   r0x03, POSTDEC1
00018E C000 FFE9      01299         MOVFF   r0x00, FSR0L
000192 C000 FFF3      01300         MOVFF   r0x01, PRODL
000196 5000           01301         MOVF    r0x02, W
000198 EC00 F000      01302         CALL    __gptrput1
00019C                01303 _00251_DS_:
00019C 0100           01304         BANKSEL _currentTime
                      01305 ;       .line   202; testint.c  if(currentTime[3]=='6'){
00019E 5100           01306         MOVF    _currentTime, W, B
0001A0 0F03           01307         ADDLW   0x03
0001A2 6E00           01308         MOVWF   r0x00
0001A4 0E00           01309         MOVLW   0x00
0001A6 0100           01310         BANKSEL (_currentTime + 1)
0001A8 2100           01311         ADDWFC  (_currentTime + 1), W, B
0001AA 6E00           01312         MOVWF   r0x01
0001AC 0E00           01313         MOVLW   0x00
0001AE 0100           01314         BANKSEL (_currentTime + 2)
0001B0 2100           01315         ADDWFC  (_currentTime + 2), W, B
0001B2 6E00           01316         MOVWF   r0x02
0001B4 C000 FFE9      01317         MOVFF   r0x00, FSR0L
0001B8 C000 FFF3      01318         MOVFF   r0x01, PRODL
0001BC 5000           01319         MOVF    r0x02, W
0001BE EC00 F000      01320         CALL    __gptrget1
0001C2 6E00           01321         MOVWF   r0x03
0001C4 5000           01322         MOVF    r0x03, W
0001C6 0A36           01323         XORLW   0x36
0001C8 E100           01324         BNZ     _00253_DS_
                      01325 ;       .line   203; testint.c  currentTime[3]='0';
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001CA 0E30           01326         MOVLW   0x30
0001CC 6EE5           01327         MOVWF   POSTDEC1
0001CE C000 FFE9      01328         MOVFF   r0x00, FSR0L
0001D2 C000 FFF3      01329         MOVFF   r0x01, PRODL
0001D6 5000           01330         MOVF    r0x02, W
0001D8 EC00 F000      01331         CALL    __gptrput1
0001DC 0100           01332         BANKSEL _currentTime
                      01333 ;       .line   204; testint.c  currentTime[1]++;
0001DE 5100           01334         MOVF    _currentTime, W, B
0001E0 0F01           01335         ADDLW   0x01
0001E2 6E00           01336         MOVWF   r0x00
0001E4 0E00           01337         MOVLW   0x00
0001E6 0100           01338         BANKSEL (_currentTime + 1)
0001E8 2100           01339         ADDWFC  (_currentTime + 1), W, B
0001EA 6E00           01340         MOVWF   r0x01
0001EC 0E00           01341         MOVLW   0x00
0001EE 0100           01342         BANKSEL (_currentTime + 2)
0001F0 2100           01343         ADDWFC  (_currentTime + 2), W, B
0001F2 6E00           01344         MOVWF   r0x02
0001F4 C000 FFE9      01345         MOVFF   r0x00, FSR0L
0001F8 C000 FFF3      01346         MOVFF   r0x01, PRODL
0001FC 5000           01347         MOVF    r0x02, W
0001FE EC00 F000      01348         CALL    __gptrget1
000202 6E00           01349         MOVWF   r0x03
000204 2A00           01350         INCF    r0x03, F
000206 C000 FFE5      01351         MOVFF   r0x03, POSTDEC1
00020A C000 FFE9      01352         MOVFF   r0x00, FSR0L
00020E C000 FFF3      01353         MOVFF   r0x01, PRODL
000212 5000           01354         MOVF    r0x02, W
000214 EC00 F000      01355         CALL    __gptrput1
000218                01356 _00253_DS_:
000218 0100           01357         BANKSEL _currentTime
                      01358 ;       .line   206; testint.c  if(currentTime[1] == ':'){
00021A 5100           01359         MOVF    _currentTime, W, B
00021C 0F01           01360         ADDLW   0x01
00021E 6E00           01361         MOVWF   r0x00
000220 0E00           01362         MOVLW   0x00
000222 0100           01363         BANKSEL (_currentTime + 1)
000224 2100           01364         ADDWFC  (_currentTime + 1), W, B
000226 6E00           01365         MOVWF   r0x01
000228 0E00           01366         MOVLW   0x00
00022A 0100           01367         BANKSEL (_currentTime + 2)
00022C 2100           01368         ADDWFC  (_currentTime + 2), W, B
00022E 6E00           01369         MOVWF   r0x02
000230 C000 FFE9      01370         MOVFF   r0x00, FSR0L
000234 C000 FFF3      01371         MOVFF   r0x01, PRODL
000238 5000           01372         MOVF    r0x02, W
00023A EC00 F000      01373         CALL    __gptrget1
00023E 6E00           01374         MOVWF   r0x03
000240 5000           01375         MOVF    r0x03, W
000242 0A3A           01376         XORLW   0x3a
000244 E100           01377         BNZ     _00255_DS_
                      01378 ;       .line   207; testint.c  currentTime[1] = '0';
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000246 0E30           01379         MOVLW   0x30
000248 6EE5           01380         MOVWF   POSTDEC1
00024A C000 FFE9      01381         MOVFF   r0x00, FSR0L
00024E C000 FFF3      01382         MOVFF   r0x01, PRODL
000252 5000           01383         MOVF    r0x02, W
000254 EC00 F000      01384         CALL    __gptrput1
                      01385 ;       .line   208; testint.c  ++currentTime[0];
000258 C000 F000      01386         MOVFF   _currentTime, r0x03
00025C C000 F000      01387         MOVFF   (_currentTime + 1), r0x04
000260 C000 F000      01388         MOVFF   (_currentTime + 2), r0x05
000264 C000 FFE9      01389         MOVFF   r0x03, FSR0L
000268 C000 FFF3      01390         MOVFF   r0x04, PRODL
00026C 5000           01391         MOVF    r0x05, W
00026E EC00 F000      01392         CALL    __gptrget1
000272 6E00           01393         MOVWF   r0x06
000274 2A00           01394         INCF    r0x06, F
000276 C000 FFE5      01395         MOVFF   r0x06, POSTDEC1
00027A C000 FFE9      01396         MOVFF   r0x03, FSR0L
00027E C000 FFF3      01397         MOVFF   r0x04, PRODL
000282 5000           01398         MOVF    r0x05, W
000284 EC00 F000      01399         CALL    __gptrput1
000288                01400 _00255_DS_:
                      01401 ;       .line   210; testint.c  if(currentTime[0]=='2' && currentTime[1]=='4'){
000288 C000 F000      01402         MOVFF   _currentTime, r0x03
00028C C000 F000      01403         MOVFF   (_currentTime + 1), r0x04
000290 C000 F000      01404         MOVFF   (_currentTime + 2), r0x05
000294 C000 FFE9      01405         MOVFF   r0x03, FSR0L
000298 C000 FFF3      01406         MOVFF   r0x04, PRODL
00029C 5000           01407         MOVF    r0x05, W
00029E EC00 F000      01408         CALL    __gptrget1
0002A2 6E00           01409         MOVWF   r0x03
0002A4 5000           01410         MOVF    r0x03, W
0002A6 0A32           01411         XORLW   0x32
0002A8 E100           01412         BNZ     _00257_DS_
0002AA C000 FFE9      01413         MOVFF   r0x00, FSR0L
0002AE C000 FFF3      01414         MOVFF   r0x01, PRODL
0002B2 5000           01415         MOVF    r0x02, W
0002B4 EC00 F000      01416         CALL    __gptrget1
0002B8 6E00           01417         MOVWF   r0x03
0002BA 5000           01418         MOVF    r0x03, W
0002BC 0A34           01419         XORLW   0x34
0002BE E100           01420         BNZ     _00257_DS_
                      01421 ;       .line   211; testint.c  currentTime[0]='0';
0002C0 C000 F000      01422         MOVFF   _currentTime, r0x03
0002C4 C000 F000      01423         MOVFF   (_currentTime + 1), r0x04
0002C8 C000 F000      01424         MOVFF   (_currentTime + 2), r0x05
0002CC 0E30           01425         MOVLW   0x30
0002CE 6EE5           01426         MOVWF   POSTDEC1
0002D0 C000 FFE9      01427         MOVFF   r0x03, FSR0L
0002D4 C000 FFF3      01428         MOVFF   r0x04, PRODL
0002D8 5000           01429         MOVF    r0x05, W
0002DA EC00 F000      01430         CALL    __gptrput1
                      01431 ;       .line   212; testint.c  currentTime[1]='0';
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002DE 0E30           01432         MOVLW   0x30
0002E0 6EE5           01433         MOVWF   POSTDEC1
0002E2 C000 FFE9      01434         MOVFF   r0x00, FSR0L
0002E6 C000 FFF3      01435         MOVFF   r0x01, PRODL
0002EA 5000           01436         MOVF    r0x02, W
0002EC EC00 F000      01437         CALL    __gptrput1
0002F0                01438 _00257_DS_:
                      01439 ;       .line   214; testint.c  if(currentTime[0]=='3'){
0002F0 C000 F000      01440         MOVFF   _currentTime, r0x00
0002F4 C000 F000      01441         MOVFF   (_currentTime + 1), r0x01
0002F8 C000 F000      01442         MOVFF   (_currentTime + 2), r0x02
0002FC C000 FFE9      01443         MOVFF   r0x00, FSR0L
000300 C000 FFF3      01444         MOVFF   r0x01, PRODL
000304 5000           01445         MOVF    r0x02, W
000306 EC00 F000      01446         CALL    __gptrget1
00030A 6E00           01447         MOVWF   r0x00
00030C 5000           01448         MOVF    r0x00, W
00030E 0A33           01449         XORLW   0x33
000310 E100           01450         BNZ     _00261_DS_
                      01451 ;       .line   215; testint.c  currentTime[0]='0';
000312 C000 F000      01452         MOVFF   _currentTime, r0x00
000316 C000 F000      01453         MOVFF   (_currentTime + 1), r0x01
00031A C000 F000      01454         MOVFF   (_currentTime + 2), r0x02
00031E 0E30           01455         MOVLW   0x30
000320 6EE5           01456         MOVWF   POSTDEC1
000322 C000 FFE9      01457         MOVFF   r0x00, FSR0L
000326 C000 FFF3      01458         MOVFF   r0x01, PRODL
00032A 5000           01459         MOVF    r0x02, W
00032C EC00 F000      01460         CALL    __gptrput1
000330                01461 _00261_DS_:
000330 CFE4 F000      01462         MOVFF   PREINC1, r0x06
000334 CFE4 F000      01463         MOVFF   PREINC1, r0x05
000338 CFE4 F000      01464         MOVFF   PREINC1, r0x04
00033C CFE4 F000      01465         MOVFF   PREINC1, r0x03
000340 CFE4 F000      01466         MOVFF   PREINC1, r0x02
000344 CFE4 F000      01467         MOVFF   PREINC1, r0x01
000348 CFE4 F000      01468         MOVFF   PREINC1, r0x00
00034C CFE4 FFD9      01469         MOVFF   PREINC1, FSR2L
000350 0012           01470         RETURN  
                      01471 
                      01472 ; ; Starting pCode block
                      01473 S_testint__alarm        code
000000                01474 _alarm:
                      01475 ;       .line   165; testint.c  void alarm(){
000000 CFD9 FFE5      01476         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      01477         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      01478         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      01479         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      01480         MOVFF   r0x02, POSTDEC1
000014 C000 FFE5      01481         MOVFF   r0x03, POSTDEC1
000018 C000 FFE5      01482         MOVFF   r0x04, POSTDEC1
00001C C000 FFE5      01483         MOVFF   r0x05, POSTDEC1
000020 C000 FFE5      01484         MOVFF   r0x06, POSTDEC1
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01485 ;       .line   166; testint.c  int blink = 1;
000024 0E01           01486         MOVLW   0x01
000026 6E00           01487         MOVWF   r0x00
000028 6A00           01488         CLRF    r0x01
                      01489 ;       .line   170; testint.c  for(i; i<5; i++){
00002A 6A00           01490         CLRF    r0x02
00002C 6A00           01491         CLRF    r0x03
00002E                01492 _00214_DS_:
00002E 5000           01493         MOVF    r0x03, W
000030 0F80           01494         ADDLW   0x80
000032 0F80           01495         ADDLW   0x80
000034 E100           01496         BNZ     _00238_DS_
000036 0E05           01497         MOVLW   0x05
000038 5C00           01498         SUBWF   r0x02, W
00003A                01499 _00238_DS_:
00003A E200           01500         BC      _00217_DS_
                      01501 ;       .line   171; testint.c  if(currentTime[i]!=time[i]){
00003C 5000           01502         MOVF    r0x02, W
00003E 0100           01503         BANKSEL _currentTime
000040 2500           01504         ADDWF   _currentTime, W, B
000042 6E00           01505         MOVWF   r0x04
000044 5000           01506         MOVF    r0x03, W
000046 0100           01507         BANKSEL (_currentTime + 1)
000048 2100           01508         ADDWFC  (_currentTime + 1), W, B
00004A 6E00           01509         MOVWF   r0x05
00004C 6AE8           01510         CLRF    WREG
00004E BE00           01511         BTFSC   r0x03, 7
000050 68E8           01512         SETF    WREG
000052 0100           01513         BANKSEL (_currentTime + 2)
000054 2100           01514         ADDWFC  (_currentTime + 2), W, B
000056 6E00           01515         MOVWF   r0x06
000058 C000 FFE9      01516         MOVFF   r0x04, FSR0L
00005C C000 FFF3      01517         MOVFF   r0x05, PRODL
000060 5000           01518         MOVF    r0x06, W
000062 EC00 F000      01519         CALL    __gptrget1
000066 6E00           01520         MOVWF   r0x04
000068 0E00           01521         MOVLW   LOW(_time)
00006A 2400           01522         ADDWF   r0x02, W
00006C 6E00           01523         MOVWF   r0x05
00006E 0E00           01524         MOVLW   HIGH(_time)
000070 2000           01525         ADDWFC  r0x03, W
000072 6E00           01526         MOVWF   r0x06
000074 C000 FFE9      01527         MOVFF   r0x05, FSR0L
000078 C000 FFEA      01528         MOVFF   r0x06, FSR0H
00007C CFEF F000      01529         MOVFF   INDF0, r0x05
000080 5000           01530         MOVF    r0x04, W
000082 1800           01531         XORWF   r0x05, W
000084 E000           01532         BZ      _00216_DS_
                      01533 ;       .line   172; testint.c  blink = 0;
000086 6A00           01534         CLRF    r0x00
000088 6A00           01535         CLRF    r0x01
                      01536 ;       .line   173; testint.c  break;
00008A D000           01537         BRA     _00217_DS_
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00008C                01538 _00216_DS_:
                      01539 ;       .line   170; testint.c  for(i; i<5; i++){
00008C 2A00           01540         INCF    r0x02, F
00008E B0D8           01541         BTFSC   STATUS, 0
000090 2A00           01542         INCF    r0x03, F
000092 D000           01543         BRA     _00214_DS_
000094                01544 _00217_DS_:
                      01545 ;       .line   176; testint.c  if(blink){
000094 5000           01546         MOVF    r0x00, W
000096 1000           01547         IORWF   r0x01, W
000098 B4D8           01548         BTFSC   STATUS, 2
00009A D000           01549         BRA     _00227_DS_
                      01550 ;       .line   177; testint.c  for(j; j<10; j++){
00009C 6A00           01551         CLRF    r0x00
00009E 6A00           01552         CLRF    r0x01
0000A0                01553 _00223_DS_:
0000A0 5000           01554         MOVF    r0x01, W
0000A2 0F80           01555         ADDLW   0x80
0000A4 0F80           01556         ADDLW   0x80
0000A6 E100           01557         BNZ     _00241_DS_
0000A8 0E0A           01558         MOVLW   0x0a
0000AA 5C00           01559         SUBWF   r0x00, W
0000AC                01560 _00241_DS_:
0000AC E200           01561         BC      _00226_DS_
                      01562 ;       .line   179; testint.c  LED1_IO ^=1;
0000AE 6A00           01563         CLRF    r0x02
0000B0 B200           01564         BTFSC   _LATJbits, 1
0000B2 2A00           01565         INCF    r0x02, F
0000B4 0E01           01566         MOVLW   0x01
0000B6 1A00           01567         XORWF   r0x02, F
0000B8 5000           01568         MOVF    r0x02, W
0000BA 0B01           01569         ANDLW   0x01
0000BC 44E8           01570         RLNCF   WREG, W
0000BE 6EF4           01571         MOVWF   PRODH
0000C0 5000           01572         MOVF    _LATJbits, W
0000C2 0BFD           01573         ANDLW   0xfd
0000C4 10F4           01574         IORWF   PRODH, W
0000C6 6E00           01575         MOVWF   _LATJbits
                      01576 ;       .line   180; testint.c  for(k=0;k<10;k++) 
0000C8 0E0A           01577         MOVLW   0x0a
0000CA 6E00           01578         MOVWF   r0x02
0000CC 6A00           01579         CLRF    r0x03
0000CE                01580 _00222_DS_:
                      01581 ;       .line   181; testint.c  display_string(0,"wake up");
0000CE 0E00           01582         MOVLW   UPPER(__str_0)
0000D0 6EE5           01583         MOVWF   POSTDEC1
0000D2 0E00           01584         MOVLW   HIGH(__str_0)
0000D4 6EE5           01585         MOVWF   POSTDEC1
0000D6 0E00           01586         MOVLW   LOW(__str_0)
0000D8 6EE5           01587         MOVWF   POSTDEC1
0000DA 0E00           01588         MOVLW   0x00
0000DC 6EE5           01589         MOVWF   POSTDEC1
0000DE EC00 F000      01590         CALL    _display_string
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000E2 0E04           01591         MOVLW   0x04
0000E4 26E1           01592         ADDWF   FSR1L, F
0000E6 0EFF           01593         MOVLW   0xff
0000E8 2600           01594         ADDWF   r0x02, F
0000EA A0D8           01595         BTFSS   STATUS, 0
0000EC 0600           01596         DECF    r0x03, F
                      01597 ;       .line   180; testint.c  for(k=0;k<10;k++) 
0000EE 5000           01598         MOVF    r0x02, W
0000F0 1000           01599         IORWF   r0x03, W
0000F2 E100           01600         BNZ     _00222_DS_
                      01601 ;       .line   177; testint.c  for(j; j<10; j++){
0000F4 2A00           01602         INCF    r0x00, F
0000F6 B0D8           01603         BTFSC   STATUS, 0
0000F8 2A00           01604         INCF    r0x01, F
0000FA D000           01605         BRA     _00223_DS_
0000FC                01606 _00226_DS_:
                      01607 ;       .line   184; testint.c  LED1_IO ^=1;
0000FC 6A00           01608         CLRF    r0x00
0000FE B200           01609         BTFSC   _LATJbits, 1
000100 2A00           01610         INCF    r0x00, F
000102 0E01           01611         MOVLW   0x01
000104 1A00           01612         XORWF   r0x00, F
000106 5000           01613         MOVF    r0x00, W
000108 0B01           01614         ANDLW   0x01
00010A 44E8           01615         RLNCF   WREG, W
00010C 6EF4           01616         MOVWF   PRODH
00010E 5000           01617         MOVF    _LATJbits, W
000110 0BFD           01618         ANDLW   0xfd
000112 10F4           01619         IORWF   PRODH, W
000114 6E00           01620         MOVWF   _LATJbits
000116                01621 _00227_DS_:
000116 CFE4 F000      01622         MOVFF   PREINC1, r0x06
00011A CFE4 F000      01623         MOVFF   PREINC1, r0x05
00011E CFE4 F000      01624         MOVFF   PREINC1, r0x04
000122 CFE4 F000      01625         MOVFF   PREINC1, r0x03
000126 CFE4 F000      01626         MOVFF   PREINC1, r0x02
00012A CFE4 F000      01627         MOVFF   PREINC1, r0x01
00012E CFE4 F000      01628         MOVFF   PREINC1, r0x00
000132 CFE4 FFD9      01629         MOVFF   PREINC1, FSR2L
000136 0012           01630         RETURN  
                      01631 
                      01632 ; ; Starting pCode block
                      01633 S_testint__increment_time       code
000000                01634 _increment_time:
                      01635 ;       .line   141; testint.c  void increment_time(){
000000 CFD9 FFE5      01636         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      01637         MOVFF   FSR1L, FSR2L
000008 C000 FFE5      01638         MOVFF   r0x00, POSTDEC1
00000C C000 FFE5      01639         MOVFF   r0x01, POSTDEC1
000010 C000 FFE5      01640         MOVFF   r0x02, POSTDEC1
                      01641 ;       .line   142; testint.c  time[position]++;
000014 0E00           01642         MOVLW   LOW(_time)
000016 0100           01643         BANKSEL _position
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000018 2500           01644         ADDWF   _position, W, B
00001A 6E00           01645         MOVWF   r0x00
00001C 0E00           01646         MOVLW   HIGH(_time)
00001E 0100           01647         BANKSEL (_position + 1)
000020 2100           01648         ADDWFC  (_position + 1), W, B
000022 6E00           01649         MOVWF   r0x01
000024 C000 FFE9      01650         MOVFF   r0x00, FSR0L
000028 C000 FFEA      01651         MOVFF   r0x01, FSR0H
00002C CFEF F000      01652         MOVFF   INDF0, r0x02
000030 2A00           01653         INCF    r0x02, F
000032 C000 FFE9      01654         MOVFF   r0x00, FSR0L
000036 C000 FFEA      01655         MOVFF   r0x01, FSR0H
00003A C000 FFEF      01656         MOVFF   r0x02, INDF0
00003E 0100           01657         BANKSEL (_time + 4)
                      01658 ;       .line   143; testint.c  if(time[4] == ':'){
000040 5100           01659         MOVF    (_time + 4), W, B
000042 0A3A           01660         XORLW   0x3a
000044 E100           01661         BNZ     _00177_DS_
                      01662 ;       .line   144; testint.c  time[4] = '0';
000046 0E30           01663         MOVLW   0x30
000048 0100           01664         BANKSEL (_time + 4)
00004A 6F00           01665         MOVWF   (_time + 4), B
00004C 0100           01666         BANKSEL (_time + 3)
                      01667 ;       .line   145; testint.c  ++time[3];
00004E 2900           01668         INCF    (_time + 3), W, B
000050 6E00           01669         MOVWF   r0x00
000052 5000           01670         MOVF    r0x00, W
000054 0100           01671         BANKSEL (_time + 3)
000056 6F00           01672         MOVWF   (_time + 3), B
000058                01673 _00177_DS_:
000058 0100           01674         BANKSEL (_time + 3)
                      01675 ;       .line   147; testint.c  if(time[3]=='6'){
00005A 5100           01676         MOVF    (_time + 3), W, B
00005C 0A36           01677         XORLW   0x36
00005E E100           01678         BNZ     _00179_DS_
                      01679 ;       .line   148; testint.c  time[3]='0';
000060 0E30           01680         MOVLW   0x30
000062 0100           01681         BANKSEL (_time + 3)
000064 6F00           01682         MOVWF   (_time + 3), B
                      01683 ;       .line   149; testint.c  time[1]++;
000066 C000 F000      01684         MOVFF   (_time + 1), r0x00
00006A 2A00           01685         INCF    r0x00, F
00006C 5000           01686         MOVF    r0x00, W
00006E 0100           01687         BANKSEL (_time + 1)
000070 6F00           01688         MOVWF   (_time + 1), B
000072                01689 _00179_DS_:
                      01690 ;       .line   151; testint.c  if(time[1] == ':'){
000072 C000 F000      01691         MOVFF   (_time + 1), r0x00
000076 5000           01692         MOVF    r0x00, W
000078 0A3A           01693         XORLW   0x3a
00007A E100           01694         BNZ     _00187_DS_
                      01695 ;       .line   152; testint.c  time[1] = '0';
00007C 0E30           01696         MOVLW   0x30
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00007E 0100           01697         BANKSEL (_time + 1)
000080 6F00           01698         MOVWF   (_time + 1), B
000082 0100           01699         BANKSEL _time
                      01700 ;       .line   153; testint.c  ++time[0];
000084 2900           01701         INCF    _time, W, B
000086 6E00           01702         MOVWF   r0x01
000088 5000           01703         MOVF    r0x01, W
00008A 0100           01704         BANKSEL _time
00008C 6F00           01705         MOVWF   _time, B
00008E D000           01706         BRA     _00189_DS_
000090                01707 _00187_DS_:
                      01708 ;       .line   155; testint.c  else if(time[0]=='2' && time[1]>='4'){
000090 C000 F000      01709         MOVFF   _time, r0x01
000094 5000           01710         MOVF    r0x01, W
000096 0A32           01711         XORLW   0x32
000098 E100           01712         BNZ     _00183_DS_
00009A 5000           01713         MOVF    r0x00, W
00009C 0F80           01714         ADDLW   0x80
00009E 0F4C           01715         ADDLW   0x4c
0000A0 E300           01716         BNC     _00183_DS_
                      01717 ;       .line   156; testint.c  time[0]='0';
0000A2 0E30           01718         MOVLW   0x30
0000A4 0100           01719         BANKSEL _time
0000A6 6F00           01720         MOVWF   _time, B
                      01721 ;       .line   157; testint.c  time[1]='0';
0000A8 0E30           01722         MOVLW   0x30
0000AA 0100           01723         BANKSEL (_time + 1)
0000AC 6F00           01724         MOVWF   (_time + 1), B
0000AE D000           01725         BRA     _00189_DS_
0000B0                01726 _00183_DS_:
                      01727 ;       .line   159; testint.c  else if(time[0]=='3'){
0000B0 5000           01728         MOVF    r0x01, W
0000B2 0A33           01729         XORLW   0x33
0000B4 E100           01730         BNZ     _00189_DS_
                      01731 ;       .line   160; testint.c  time[0]='0';
0000B6 0E30           01732         MOVLW   0x30
0000B8 0100           01733         BANKSEL _time
0000BA 6F00           01734         MOVWF   _time, B
0000BC                01735 _00189_DS_:
0000BC CFE4 F000      01736         MOVFF   PREINC1, r0x02
0000C0 CFE4 F000      01737         MOVFF   PREINC1, r0x01
0000C4 CFE4 F000      01738         MOVFF   PREINC1, r0x00
0000C8 CFE4 FFD9      01739         MOVFF   PREINC1, FSR2L
0000CC 0012           01740         RETURN  
                      01741 
                      01742 ; ; Starting pCode block
                      01743 S_testint__high_isr     code
000000                01744 _high_isr:
                      01745 ;       .line   37; testint.c   void high_isr (void) __interrupt 1
000000 CFE8 FFE5      01746         MOVFF   WREG, POSTDEC1
000004 CFD8 FFE5      01747         MOVFF   STATUS, POSTDEC1
000008 CFE0 FFE5      01748         MOVFF   BSR, POSTDEC1
00000C CFF3 FFE5      01749         MOVFF   PRODL, POSTDEC1
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000010 CFF4 FFE5      01750         MOVFF   PRODH, POSTDEC1
000014 CFE9 FFE5      01751         MOVFF   FSR0L, POSTDEC1
000018 CFEA FFE5      01752         MOVFF   FSR0H, POSTDEC1
00001C CFFA FFE5      01753         MOVFF   PCLATH, POSTDEC1
000020 CFFB FFE5      01754         MOVFF   PCLATU, POSTDEC1
000024 CFD9 FFE5      01755         MOVFF   FSR2L, POSTDEC1
000028 CFE1 FFD9      01756         MOVFF   FSR1L, FSR2L
00002C C000 FFE5      01757         MOVFF   r0x00, POSTDEC1
000030 C000 FFE5      01758         MOVFF   r0x01, POSTDEC1
000034 C000 FFE5      01759         MOVFF   r0x02, POSTDEC1
000038 C000 FFE5      01760         MOVFF   r0x03, POSTDEC1
                      01761 ;       .line   40; testint.c   if (INT3F)
00003C A400           01762         BTFSS   _INTCON3bits, 2
00003E D000           01763         BRA     _00117_DS_
000040 0100           01764         BANKSEL (_position + 1)
                      01765 ;       .line   42; testint.c   if(position<2 || (position>2 && position<5))
000042 5100           01766         MOVF    (_position + 1), W, B
000044 0F80           01767         ADDLW   0x80
000046 0F80           01768         ADDLW   0x80
000048 E100           01769         BNZ     _00138_DS_
00004A 0E02           01770         MOVLW   0x02
00004C 0100           01771         BANKSEL _position
00004E 5D00           01772         SUBWF   _position, W, B
000050                01773 _00138_DS_:
000050 E300           01774         BNC     _00105_DS_
000052 0100           01775         BANKSEL (_position + 1)
000054 5100           01776         MOVF    (_position + 1), W, B
000056 0F80           01777         ADDLW   0x80
000058 0F80           01778         ADDLW   0x80
00005A E100           01779         BNZ     _00139_DS_
00005C 0E03           01780         MOVLW   0x03
00005E 0100           01781         BANKSEL _position
000060 5D00           01782         SUBWF   _position, W, B
000062                01783 _00139_DS_:
000062 E300           01784         BNC     _00106_DS_
000064 0100           01785         BANKSEL (_position + 1)
000066 5100           01786         MOVF    (_position + 1), W, B
000068 0F80           01787         ADDLW   0x80
00006A 0F80           01788         ADDLW   0x80
00006C E100           01789         BNZ     _00140_DS_
00006E 0E05           01790         MOVLW   0x05
000070 0100           01791         BANKSEL _position
000072 5D00           01792         SUBWF   _position, W, B
000074                01793 _00140_DS_:
000074 E200           01794         BC      _00106_DS_
000076                01795 _00105_DS_:
                      01796 ;       .line   43; testint.c   increment_time();
000076 EC00 F000      01797         CALL    _increment_time
00007A                01798 _00106_DS_:
00007A 0100           01799         BANKSEL (_position + 1)
                      01800 ;       .line   45; testint.c   if((position>6 && position<9) || (position>9 && position<12) || (position>12 && position<15)){
00007C 5100           01801         MOVF    (_position + 1), W, B
00007E 0F80           01802         ADDLW   0x80
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000080 0F80           01803         ADDLW   0x80
000082 E100           01804         BNZ     _00141_DS_
000084 0E07           01805         MOVLW   0x07
000086 0100           01806         BANKSEL _position
000088 5D00           01807         SUBWF   _position, W, B
00008A                01808 _00141_DS_:
00008A E300           01809         BNC     _00113_DS_
00008C 0100           01810         BANKSEL (_position + 1)
00008E 5100           01811         MOVF    (_position + 1), W, B
000090 0F80           01812         ADDLW   0x80
000092 0F80           01813         ADDLW   0x80
000094 E100           01814         BNZ     _00142_DS_
000096 0E09           01815         MOVLW   0x09
000098 0100           01816         BANKSEL _position
00009A 5D00           01817         SUBWF   _position, W, B
00009C                01818 _00142_DS_:
00009C E300           01819         BNC     _00109_DS_
00009E                01820 _00113_DS_:
00009E 0100           01821         BANKSEL (_position + 1)
0000A0 5100           01822         MOVF    (_position + 1), W, B
0000A2 0F80           01823         ADDLW   0x80
0000A4 0F80           01824         ADDLW   0x80
0000A6 E100           01825         BNZ     _00143_DS_
0000A8 0E0A           01826         MOVLW   0x0a
0000AA 0100           01827         BANKSEL _position
0000AC 5D00           01828         SUBWF   _position, W, B
0000AE                01829 _00143_DS_:
0000AE E300           01830         BNC     _00115_DS_
0000B0 0100           01831         BANKSEL (_position + 1)
0000B2 5100           01832         MOVF    (_position + 1), W, B
0000B4 0F80           01833         ADDLW   0x80
0000B6 0F80           01834         ADDLW   0x80
0000B8 E100           01835         BNZ     _00144_DS_
0000BA 0E0C           01836         MOVLW   0x0c
0000BC 0100           01837         BANKSEL _position
0000BE 5D00           01838         SUBWF   _position, W, B
0000C0                01839 _00144_DS_:
0000C0 E300           01840         BNC     _00109_DS_
0000C2                01841 _00115_DS_:
0000C2 0100           01842         BANKSEL (_position + 1)
0000C4 5100           01843         MOVF    (_position + 1), W, B
0000C6 0F80           01844         ADDLW   0x80
0000C8 0F80           01845         ADDLW   0x80
0000CA E100           01846         BNZ     _00145_DS_
0000CC 0E0D           01847         MOVLW   0x0d
0000CE 0100           01848         BANKSEL _position
0000D0 5D00           01849         SUBWF   _position, W, B
0000D2                01850 _00145_DS_:
0000D2 E300           01851         BNC     _00110_DS_
0000D4 0100           01852         BANKSEL (_position + 1)
0000D6 5100           01853         MOVF    (_position + 1), W, B
0000D8 0F80           01854         ADDLW   0x80
0000DA 0F80           01855         ADDLW   0x80
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000DC E100           01856         BNZ     _00146_DS_
0000DE 0E0F           01857         MOVLW   0x0f
0000E0 0100           01858         BANKSEL _position
0000E2 5D00           01859         SUBWF   _position, W, B
0000E4                01860 _00146_DS_:
0000E4 E200           01861         BC      _00110_DS_
0000E6                01862 _00109_DS_:
0000E6 0100           01863         BANKSEL _position
                      01864 ;       .line   46; testint.c   currentTime[position-7]++;
0000E8 5100           01865         MOVF    _position, W, B
0000EA 0FF9           01866         ADDLW   0xf9
0000EC 6E00           01867         MOVWF   r0x00
0000EE 0EFF           01868         MOVLW   0xff
0000F0 0100           01869         BANKSEL (_position + 1)
0000F2 2100           01870         ADDWFC  (_position + 1), W, B
0000F4 6E00           01871         MOVWF   r0x01
0000F6 6A00           01872         CLRF    r0x02
0000F8 BE00           01873         BTFSC   r0x01, 7
0000FA 6800           01874         SETF    r0x02
0000FC 0100           01875         BANKSEL _currentTime
0000FE 5100           01876         MOVF    _currentTime, W, B
000100 2600           01877         ADDWF   r0x00, F
000102 0100           01878         BANKSEL (_currentTime + 1)
000104 5100           01879         MOVF    (_currentTime + 1), W, B
000106 2200           01880         ADDWFC  r0x01, F
000108 0100           01881         BANKSEL (_currentTime + 2)
00010A 5100           01882         MOVF    (_currentTime + 2), W, B
00010C 2200           01883         ADDWFC  r0x02, F
00010E C000 FFE9      01884         MOVFF   r0x00, FSR0L
000112 C000 FFF3      01885         MOVFF   r0x01, PRODL
000116 5000           01886         MOVF    r0x02, W
000118 EC00 F000      01887         CALL    __gptrget1
00011C 6E00           01888         MOVWF   r0x03
00011E 2A00           01889         INCF    r0x03, F
000120 C000 FFE5      01890         MOVFF   r0x03, POSTDEC1
000124 C000 FFE9      01891         MOVFF   r0x00, FSR0L
000128 C000 FFF3      01892         MOVFF   r0x01, PRODL
00012C 5000           01893         MOVF    r0x02, W
00012E EC00 F000      01894         CALL    __gptrput1
                      01895 ;       .line   47; testint.c   test_inc_current_time();
000132 EC00 F000      01896         CALL    _test_inc_current_time
000136                01897 _00110_DS_:
                      01898 ;       .line   50; testint.c   INT3F = 0;
000136 9400           01899         BCF     _INTCON3bits, 2
                      01900 ;       .line   51; testint.c   refresh = 1;
000138 0E01           01901         MOVLW   0x01
00013A 0100           01902         BANKSEL _refresh
00013C 6F00           01903         MOVWF   _refresh, B
00013E 0100           01904         BANKSEL (_refresh + 1)
000140 6B00           01905         CLRF    (_refresh + 1), B
000142                01906 _00117_DS_:
                      01907 ;       .line   54; testint.c   if ( INT1F ) {
000142 A000           01908         BTFSS   _INTCON3bits, 0
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000144 D000           01909         BRA     _00121_DS_
                      01910 ;       .line   55; testint.c   LED2_IO ^= 1; 
000146 6A00           01911         CLRF    r0x00
000148 B400           01912         BTFSC   _LATJbits, 2
00014A 2A00           01913         INCF    r0x00, F
00014C 0E01           01914         MOVLW   0x01
00014E 1A00           01915         XORWF   r0x00, F
000150 5000           01916         MOVF    r0x00, W
000152 0B01           01917         ANDLW   0x01
000154 44E8           01918         RLNCF   WREG, W
000156 44E8           01919         RLNCF   WREG, W
000158 6EF4           01920         MOVWF   PRODH
00015A 5000           01921         MOVF    _LATJbits, W
00015C 0BFB           01922         ANDLW   0xfb
00015E 10F4           01923         IORWF   PRODH, W
000160 6E00           01924         MOVWF   _LATJbits
000162 0100           01925         BANKSEL _position
                      01926 ;       .line   56; testint.c   position++;
000164 2B00           01927         INCF    _position, F, B
000166 E300           01928         BNC     _10350_DS_
000168 0100           01929         BANKSEL (_position + 1)
00016A 2B00           01930         INCF    (_position + 1), F, B
00016C                01931 _10350_DS_:
00016C 0100           01932         BANKSEL _position
                      01933 ;       .line   57; testint.c   if(position == 15){
00016E 5100           01934         MOVF    _position, W, B
000170 0A0F           01935         XORLW   0x0f
000172 E100           01936         BNZ     _00148_DS_
000174 0100           01937         BANKSEL (_position + 1)
000176 5100           01938         MOVF    (_position + 1), W, B
000178 E000           01939         BZ      _00149_DS_
00017A                01940 _00148_DS_:
00017A D000           01941         BRA     _00119_DS_
00017C                01942 _00149_DS_:
00017C 0100           01943         BANKSEL _position
                      01944 ;       .line   58; testint.c   position = 0;
00017E 6B00           01945         CLRF    _position, B
000180 0100           01946         BANKSEL (_position + 1)
000182 6B00           01947         CLRF    (_position + 1), B
000184                01948 _00119_DS_:
                      01949 ;       .line   60; testint.c   refresh = 1;
000184 0E01           01950         MOVLW   0x01
000186 0100           01951         BANKSEL _refresh
000188 6F00           01952         MOVWF   _refresh, B
00018A 0100           01953         BANKSEL (_refresh + 1)
00018C 6B00           01954         CLRF    (_refresh + 1), B
                      01955 ;       .line   62; testint.c   INT1F  = 0;     
00018E 9000           01956         BCF     _INTCON3bits, 0
000190                01957 _00121_DS_:
                      01958 ;       .line   66; testint.c   if ( TMR0F ){        
000190 A400           01959         BTFSS   _INTCONbits, 2
000192 D000           01960         BRA     _00126_DS_
                      01961 ;       .line   67; testint.c   bres += 4096;  
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000194 0E10           01962         MOVLW   0x10
000196 0100           01963         BANKSEL (_bres + 1)
000198 2700           01964         ADDWF   (_bres + 1), F, B
00019A 0E00           01965         MOVLW   0x00
00019C 0100           01966         BANKSEL (_bres + 2)
00019E 2300           01967         ADDWFC  (_bres + 2), F, B
0001A0 0E00           01968         MOVLW   0x00
0001A2 0100           01969         BANKSEL (_bres + 3)
0001A4 2300           01970         ADDWFC  (_bres + 3), F, B
                      01971 ;       .line   68; testint.c   if(bres >= 390625)
0001A6 0E00           01972         MOVLW   0x00
0001A8 0100           01973         BANKSEL (_bres + 3)
0001AA 5D00           01974         SUBWF   (_bres + 3), W, B
0001AC E100           01975         BNZ     _00150_DS_
0001AE 0E05           01976         MOVLW   0x05
0001B0 0100           01977         BANKSEL (_bres + 2)
0001B2 5D00           01978         SUBWF   (_bres + 2), W, B
0001B4 E100           01979         BNZ     _00150_DS_
0001B6 0EF5           01980         MOVLW   0xf5
0001B8 0100           01981         BANKSEL (_bres + 1)
0001BA 5D00           01982         SUBWF   (_bres + 1), W, B
0001BC E100           01983         BNZ     _00150_DS_
0001BE 0EE1           01984         MOVLW   0xe1
0001C0 0100           01985         BANKSEL _bres
0001C2 5D00           01986         SUBWF   _bres, W, B
0001C4                01987 _00150_DS_:
0001C4 A0D8           01988         BTFSS   STATUS, 0
0001C6 D000           01989         BRA     _00123_DS_
                      01990 ;       .line   70; testint.c   bres -= 390625; 
0001C8 0E1F           01991         MOVLW   0x1f
0001CA 0100           01992         BANKSEL _bres
0001CC 2700           01993         ADDWF   _bres, F, B
0001CE 0E0A           01994         MOVLW   0x0a
0001D0 0100           01995         BANKSEL (_bres + 1)
0001D2 2300           01996         ADDWFC  (_bres + 1), F, B
0001D4 0EFA           01997         MOVLW   0xfa
0001D6 0100           01998         BANKSEL (_bres + 2)
0001D8 2300           01999         ADDWFC  (_bres + 2), F, B
0001DA 0EFF           02000         MOVLW   0xff
0001DC 0100           02001         BANKSEL (_bres + 3)
0001DE 2300           02002         ADDWFC  (_bres + 3), F, B
                      02003 ;       .line   71; testint.c   LED0_IO ^= 1;
0001E0 6A00           02004         CLRF    r0x00
0001E2 B000           02005         BTFSC   _LATJbits, 0
0001E4 2A00           02006         INCF    r0x00, F
0001E6 0E01           02007         MOVLW   0x01
0001E8 1A00           02008         XORWF   r0x00, F
0001EA 5000           02009         MOVF    r0x00, W
0001EC 0B01           02010         ANDLW   0x01
0001EE 6EF4           02011         MOVWF   PRODH
0001F0 5000           02012         MOVF    _LATJbits, W
0001F2 0BFE           02013         ANDLW   0xfe
0001F4 10F4           02014         IORWF   PRODH, W
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001F6 6E00           02015         MOVWF   _LATJbits
0001F8 0100           02016         BANKSEL _currentTime
                      02017 ;       .line   72; testint.c   currentTime[7]++;
0001FA 5100           02018         MOVF    _currentTime, W, B
0001FC 0F07           02019         ADDLW   0x07
0001FE 6E00           02020         MOVWF   r0x00
000200 0E00           02021         MOVLW   0x00
000202 0100           02022         BANKSEL (_currentTime + 1)
000204 2100           02023         ADDWFC  (_currentTime + 1), W, B
000206 6E00           02024         MOVWF   r0x01
000208 0E00           02025         MOVLW   0x00
00020A 0100           02026         BANKSEL (_currentTime + 2)
00020C 2100           02027         ADDWFC  (_currentTime + 2), W, B
00020E 6E00           02028         MOVWF   r0x02
000210 C000 FFE9      02029         MOVFF   r0x00, FSR0L
000214 C000 FFF3      02030         MOVFF   r0x01, PRODL
000218 5000           02031         MOVF    r0x02, W
00021A EC00 F000      02032         CALL    __gptrget1
00021E 6E00           02033         MOVWF   r0x03
000220 2A00           02034         INCF    r0x03, F
000222 C000 FFE5      02035         MOVFF   r0x03, POSTDEC1
000226 C000 FFE9      02036         MOVFF   r0x00, FSR0L
00022A C000 FFF3      02037         MOVFF   r0x01, PRODL
00022E 5000           02038         MOVF    r0x02, W
000230 EC00 F000      02039         CALL    __gptrput1
                      02040 ;       .line   73; testint.c   test_inc_current_time();
000234 EC00 F000      02041         CALL    _test_inc_current_time
000238                02042 _00123_DS_:
                      02043 ;       .line   75; testint.c   refresh = 1;
000238 0E01           02044         MOVLW   0x01
00023A 0100           02045         BANKSEL _refresh
00023C 6F00           02046         MOVWF   _refresh, B
00023E 0100           02047         BANKSEL (_refresh + 1)
000240 6B00           02048         CLRF    (_refresh + 1), B
                      02049 ;       .line   76; testint.c   TMR0F = 0; 
000242 9400           02050         BCF     _INTCONbits, 2
000244                02051 _00126_DS_:
000244 CFE4 F000      02052         MOVFF   PREINC1, r0x03
000248 CFE4 F000      02053         MOVFF   PREINC1, r0x02
00024C CFE4 F000      02054         MOVFF   PREINC1, r0x01
000250 CFE4 F000      02055         MOVFF   PREINC1, r0x00
000254 CFE4 FFD9      02056         MOVFF   PREINC1, FSR2L
000258 CFE4 FFFB      02057         MOVFF   PREINC1, PCLATU
00025C CFE4 FFFA      02058         MOVFF   PREINC1, PCLATH
000260 CFE4 FFEA      02059         MOVFF   PREINC1, FSR0H
000264 CFE4 FFE9      02060         MOVFF   PREINC1, FSR0L
000268 CFE4 FFF4      02061         MOVFF   PREINC1, PRODH
00026C CFE4 FFF3      02062         MOVFF   PREINC1, PRODL
000270 CFE4 FFE0      02063         MOVFF   PREINC1, BSR
000274 CFE4 FFD8      02064         MOVFF   PREINC1, STATUS
000278 CFE4 FFE8      02065         MOVFF   PREINC1, WREG
00027C 0010           02066         RETFIE  
                      02067 
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02068 ; ; Starting pCode block
00027E                02069 __str_0:
00027E 6177 656B 7520 02070         DB      0x77, 0x61, 0x6b, 0x65, 0x20, 0x75, 0x70, 0x00
       0070           
                      02071 ; ; Starting pCode block
000286                02072 __str_1:
000286 5E20 0000      02073         DB      0x20, 0x5e, 0x00
                      02074 
                      02075 
                      02076 ; Statistics:
                      02077 ; code size:     3340 (0x0d0c) bytes ( 2.55%)
                      02078 ;                1670 (0x0686) words
                      02079 ; udata size:      22 (0x0016) bytes ( 0.57%)
                      02080 ; access size:     22 (0x0016) bytes
                      02081 
                      02082 
                      02083         end
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 41


SYMBOL TABLE
  LABEL                             VALUE

BSR                               00000FE0
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
INDF0                             00000FEF
PCLATH                            00000FFA
PCLATU                            00000FFB
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00105_DS_                        00000076
_00106_DS_                        0000007A
_00109_DS_                        000000E6
_00110_DS_                        00000136
_00113_DS_                        0000009E
_00115_DS_                        000000C2
_00117_DS_                        00000142
_00119_DS_                        00000184
_00121_DS_                        00000190
_00123_DS_                        00000238
_00126_DS_                        00000244
_00138_DS_                        00000050
_00139_DS_                        00000062
_00140_DS_                        00000074
_00141_DS_                        0000008A
_00142_DS_                        0000009C
_00143_DS_                        000000AE
_00144_DS_                        000000C0
_00145_DS_                        000000D2
_00146_DS_                        000000E4
_00148_DS_                        0000017A
_00149_DS_                        0000017C
_00150_DS_                        000001C4
_00158_DS_                        00000086
_00162_DS_                        00000064
_00170_DS_                        00000094
_00171_DS_                        00000096
_00177_DS_                        00000058
_00179_DS_                        00000072
_00183_DS_                        000000B0
_00187_DS_                        00000090
_00189_DS_                        000000BC
_00214_DS_                        0000002E
_00216_DS_                        0000008C
_00217_DS_                        00000094
_00222_DS_                        000000CE
_00223_DS_                        000000A0
_00226_DS_                        000000FC
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

_00227_DS_                        00000116
_00238_DS_                        0000003A
_00241_DS_                        000000AC
_00247_DS_                        000000A0
_00249_DS_                        00000120
_00251_DS_                        0000019C
_00253_DS_                        00000218
_00255_DS_                        00000288
_00257_DS_                        000002F0
_00261_DS_                        00000330
_00297_DS_                        000000FC
_00298_DS_                        0000005C
_00301_DS_                        000000D4
_00308_DS_                        0000009A
_00309_DS_                        000000E4
_00317_DS_                        00000082
_00326_DS_                        000000CC
_00330_DS_                        00000134
_00333_DS_                        0000015E
_00337_DS_                        00000188
_00344_DS_                        00000152
_00345_DS_                        00000114
_00350_DS_                        0000001C
_10350_DS_                        0000016C
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRES                            00000000
_ADRESH                           00000000
_ADRESL                           00000000
_BAUDCON                          00000000
_BAUDCON1                         00000000
_BAUDCON1bits                     00000000
_BAUDCON2                         00000000
_BAUDCON2bits                     00000000
_BAUDCONbits                      00000000
_BAUDCTL                          00000000
_BAUDCTL1                         00000000
_BAUDCTL1bits                     00000000
_BAUDCTL2                         00000000
_BAUDCTL2bits                     00000000
_BAUDCTLbits                      00000000
_BSR                              00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCP3CON                          00000000
_CCP3CONbits                      00000000
_CCP4CON                          00000000
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

_CCP4CONbits                      00000000
_CCP5CON                          00000000
_CCP5CONbits                      00000000
_CCPR1                            00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2                            00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CCPR3                            00000000
_CCPR3H                           00000000
_CCPR3L                           00000000
_CCPR4                            00000000
_CCPR4H                           00000000
_CCPR4L                           00000000
_CCPR5                            00000000
_CCPR5H                           00000000
_CCPR5L                           00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_DDRA                             00000000
_DDRAbits                         00000000
_DDRB                             00000000
_DDRBbits                         00000000
_DDRC                             00000000
_DDRCbits                         00000000
_DDRD                             00000000
_DDRDbits                         00000000
_DDRE                             00000000
_DDREbits                         00000000
_DDRF                             00000000
_DDRFbits                         00000000
_DDRG                             00000000
_DDRGbits                         00000000
_DDRH                             00000000
_DDRHbits                         00000000
_DDRJ                             00000000
_DDRJbits                         00000000
_EBSTCON                          00000000
_EBSTCONbits                      00000000
_EBSTCS                           00000000
_EBSTCSH                          00000000
_EBSTCSL                          00000000
_EBSTSD                           00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_ECCP1CON                         00000000
_ECCP1CONbits                     00000000
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_ECCP2AS                          00000000
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

_ECCP2ASbits                      00000000
_ECCP2CON                         00000000
_ECCP2CONbits                     00000000
_ECCP2DEL                         00000000
_ECCP2DELbits                     00000000
_ECCP3AS                          00000000
_ECCP3ASbits                      00000000
_ECCP3CON                         00000000
_ECCP3CONbits                     00000000
_ECCP3DEL                         00000000
_ECCP3DELbits                     00000000
_ECON1                            00000000
_ECON1bits                        00000000
_ECON2                            00000000
_ECON2bits                        00000000
_EDATA                            00000000
_EDATAbits                        00000000
_EDMACS                           00000000
_EDMACSH                          00000000
_EDMACSL                          00000000
_EDMADST                          00000000
_EDMADSTH                         00000000
_EDMADSTL                         00000000
_EDMAND                           00000000
_EDMANDH                          00000000
_EDMANDL                          00000000
_EDMAST                           00000000
_EDMASTH                          00000000
_EDMASTL                          00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EFLOCON                          00000000
_EFLOCONbits                      00000000
_EHT0                             00000000
_EHT1                             00000000
_EHT2                             00000000
_EHT3                             00000000
_EHT4                             00000000
_EHT5                             00000000
_EHT6                             00000000
_EHT7                             00000000
_EIE                              00000000
_EIEbits                          00000000
_EIR                              00000000
_EIRbits                          00000000
_EPAUS                            00000000
_EPAUSH                           00000000
_EPAUSL                           00000000
_EPKTCNT                          00000000
_EPMCS                            00000000
_EPMCSH                           00000000
_EPMCSL                           00000000
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

_EPMM0                            00000000
_EPMM1                            00000000
_EPMM2                            00000000
_EPMM3                            00000000
_EPMM4                            00000000
_EPMM5                            00000000
_EPMM6                            00000000
_EPMM7                            00000000
_EPMO                             00000000
_EPMOH                            00000000
_EPMOL                            00000000
_ERDPT                            00000000
_ERDPTH                           00000000
_ERDPTL                           00000000
_ERXFCON                          00000000
_ERXFCONbits                      00000000
_ERXND                            00000000
_ERXNDH                           00000000
_ERXNDL                           00000000
_ERXRDPT                          00000000
_ERXRDPTH                         00000000
_ERXRDPTL                         00000000
_ERXST                            00000000
_ERXSTH                           00000000
_ERXSTL                           00000000
_ERXWRPT                          00000000
_ERXWRPTH                         00000000
_ERXWRPTL                         00000000
_ESTAT                            00000000
_ESTATbits                        00000000
_ETXND                            00000000
_ETXNDH                           00000000
_ETXNDL                           00000000
_ETXST                            00000000
_ETXSTH                           00000000
_ETXSTL                           00000000
_EWOLIE                           00000000
_EWOLIEbits                       00000000
_EWOLIR                           00000000
_EWOLIRbits                       00000000
_EWRPT                            00000000
_EWRPTH                           00000000
_EWRPTL                           00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_IPR3                             00000000
_IPR3bits                         00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_LATF                             00000000
_LATFbits                         00000000
_LATG                             00000000
_LATGbits                         00000000
_LATH                             00000000
_LATHbits                         00000000
_LATJ                             00000000
_LATJbits                         00000000
_LCDInit                          00000000
_LCDText                          00000000
_LCDUpdate                        00000000
_MAADR1                           00000000
_MAADR2                           00000000
_MAADR3                           00000000
_MAADR4                           00000000
_MAADR5                           00000000
_MAADR6                           00000000
_MABBIPG                          00000000
_MACLCON1                         00000000
_MACLCON1bits                     00000000
_MACLCON2                         00000000
_MACLCON2bits                     00000000
_MACON1                           00000000
_MACON1bits                       00000000
_MACON2                           00000000
_MACON2bits                       00000000
_MACON3                           00000000
_MACON3bits                       00000000
_MACON4                           00000000
_MACON4bits                       00000000
_MAIPG                            00000000
_MAIPGH                           00000000
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

_MAIPGL                           00000000
_MAMXFL                           00000000
_MAMXFLH                          00000000
_MAMXFLL                          00000000
_MEMCON                           00000000
_MEMCONbits                       00000000
_MICMD                            00000000
_MICMDbits                        00000000
_MICON                            00000000
_MICONbits                        00000000
_MIRD                             00000000
_MIRDH                            00000000
_MIRDL                            00000000
_MIREGADR                         00000000
_MISTAT                           00000000
_MISTATbits                       00000000
_MIWR                             00000000
_MIWRH                            00000000
_MIWRL                            00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_OSCTUNE                          00000000
_OSCTUNEbits                      00000000
_PC                               00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIE3                             00000000
_PIE3bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PIR3                             00000000
_PIR3bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_PORTF                            00000000
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

_PORTFbits                        00000000
_PORTG                            00000000
_PORTGbits                        00000000
_PORTH                            00000000
_PORTHbits                        00000000
_PORTJ                            00000000
_PORTJbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PR4                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PROD                             00000000
_PRODH                            00000000
_PRODL                            00000000
_PSPCON                           00000000
_PSPCONbits                       00000000
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCREG1                           00000000
_RCREG2                           00000000
_RCSTA                            00000000
_RCSTA1                           00000000
_RCSTA1bits                       00000000
_RCSTA2                           00000000
_RCSTA2bits                       00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRG1                           00000000
_SPBRG2                           00000000
_SPBRGH                           00000000
_SPBRGH1                          00000000
_SPBRGH2                          00000000
_SSP1ADD                          00000000
_SSP1BUF                          00000000
_SSP1CON1                         00000000
_SSP1CON1bits                     00000000
_SSP1CON2                         00000000
_SSP1CON2bits                     00000000
_SSP1STAT                         00000000
_SSP1STATbits                     00000000
_SSP2ADD                          00000000
_SSP2BUF                          00000000
_SSP2CON1                         00000000
_SSP2CON1bits                     00000000
_SSP2CON2                         00000000
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

_SSP2CON2bits                     00000000
_SSP2STAT                         00000000
_SSP2STATbits                     00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_T4CON                            00000000
_T4CONbits                        00000000
_TABLAT                           00000000
_TBLPTR                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TMR4                             00000000
_TOS                              00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TRISF                            00000000
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

_TRISFbits                        00000000
_TRISG                            00000000
_TRISGbits                        00000000
_TRISH                            00000000
_TRISHbits                        00000000
_TRISJ                            00000000
_TRISJbits                        00000000
_TXREG                            00000000
_TXREG1                           00000000
_TXREG2                           00000000
_TXSTA                            00000000
_TXSTA1                           00000000
_TXSTA1bits                       00000000
_TXSTA2                           00000000
_TXSTA2bits                       00000000
_TXSTAbits                        00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
__18F97J60                        00000001
__gptrget1                        00000000
__gptrput1                        00000000
__str_0                           0000027E
__str_1                           00000286
_alarm                            00000000
_bres                             00000017
_currentTime                      00000010
_display_string                   00000000
_display_time                     00000000
_display_word                     00000000
_display_word_WDigit_1_1          00000000
_dumb_delay1ms                    00000000
_high_isr                         00000000
_increment_time                   00000000
_main                             00000000
_main_string_1_1                  00000000
_position                         00000013
_refresh                          00000015
_stdin                            00000000
_stdout                           00000000
_strlcpy                          00000000
_strlen                           00000000
_test_inc_current_time            00000000
_time                             00000000
_ultoa                            00000000
ivec_0x1_high_isr                 00000008
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
gpasm-0.14.1 (Jan 11 2012)   Objects/testint.asm3-20-2012  13:24:25          PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
r0x0f                             0000000F
r0x10                             00000010
r0x11                             00000011
r0x12                             00000012
r0x13                             00000013
r0x14                             00000014
r0x15                             00000015

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed


gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : free open source ANSI-C Compiler
               00003 ; Version 2.9.4 #5595 (Mar 13 2012) (UNIX)
               00004 ; This file was generated Tue Mar 27 16:55:59 2012
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f97j60
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _increment_time
               00016         global _alarm
               00017         global _test_inc_current_time
               00018         global _display_time
               00019         global _display_word
               00020         global _display_string
               00021         global _strlcpy
               00022         global _dumb_delay1ms
               00023         global _time
               00024         global _currentTime
               00025         global _position
               00026         global _alarmflag
               00027         global _refresh
               00028         global _bres
               00029         global _high_isr
               00030         global _main
               00031 
               00032 ;--------------------------------------------------------
               00033 ; extern variables in this module
               00034 ;--------------------------------------------------------
               00035         extern __gptrget1
               00036         extern __gptrput1
               00037         extern _EBSTCONbits
               00038         extern _MISTATbits
               00039         extern _EFLOCONbits
               00040         extern _MACON1bits
               00041         extern _MACON2bits
               00042         extern _MACON3bits
               00043         extern _MACON4bits
               00044         extern _MACLCON1bits
               00045         extern _MACLCON2bits
               00046         extern _MICONbits
               00047         extern _MICMDbits
               00048         extern _EWOLIEbits
               00049         extern _EWOLIRbits
               00050         extern _ERXFCONbits
               00051         extern _EIEbits
               00052         extern _ESTATbits
               00053         extern _ECON2bits
               00054         extern _EIRbits
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055         extern _EDATAbits
               00056         extern _SSP2CON2bits
               00057         extern _SSP2CON1bits
               00058         extern _SSP2STATbits
               00059         extern _ECCP2DELbits
               00060         extern _ECCP2ASbits
               00061         extern _ECCP3DELbits
               00062         extern _ECCP3ASbits
               00063         extern _RCSTA2bits
               00064         extern _TXSTA2bits
               00065         extern _CCP5CONbits
               00066         extern _CCP4CONbits
               00067         extern _T4CONbits
               00068         extern _ECCP1DELbits
               00069         extern _BAUDCON2bits
               00070         extern _BAUDCTL2bits
               00071         extern _BAUDCONbits
               00072         extern _BAUDCON1bits
               00073         extern _BAUDCTLbits
               00074         extern _BAUDCTL1bits
               00075         extern _PORTAbits
               00076         extern _PORTBbits
               00077         extern _PORTCbits
               00078         extern _PORTDbits
               00079         extern _PORTEbits
               00080         extern _PORTFbits
               00081         extern _PORTGbits
               00082         extern _PORTHbits
               00083         extern _PORTJbits
               00084         extern _LATAbits
               00085         extern _LATBbits
               00086         extern _LATCbits
               00087         extern _LATDbits
               00088         extern _LATEbits
               00089         extern _LATFbits
               00090         extern _LATGbits
               00091         extern _LATHbits
               00092         extern _LATJbits
               00093         extern _DDRAbits
               00094         extern _TRISAbits
               00095         extern _DDRBbits
               00096         extern _TRISBbits
               00097         extern _DDRCbits
               00098         extern _TRISCbits
               00099         extern _DDRDbits
               00100         extern _TRISDbits
               00101         extern _DDREbits
               00102         extern _TRISEbits
               00103         extern _DDRFbits
               00104         extern _TRISFbits
               00105         extern _DDRGbits
               00106         extern _TRISGbits
               00107         extern _DDRHbits
               00108         extern _TRISHbits
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _DDRJbits
               00110         extern _TRISJbits
               00111         extern _OSCTUNEbits
               00112         extern _MEMCONbits
               00113         extern _PIE1bits
               00114         extern _PIR1bits
               00115         extern _IPR1bits
               00116         extern _PIE2bits
               00117         extern _PIR2bits
               00118         extern _IPR2bits
               00119         extern _PIE3bits
               00120         extern _PIR3bits
               00121         extern _IPR3bits
               00122         extern _EECON1bits
               00123         extern _RCSTAbits
               00124         extern _RCSTA1bits
               00125         extern _TXSTAbits
               00126         extern _TXSTA1bits
               00127         extern _PSPCONbits
               00128         extern _T3CONbits
               00129         extern _CMCONbits
               00130         extern _CVRCONbits
               00131         extern _ECCP1ASbits
               00132         extern _CCP3CONbits
               00133         extern _ECCP3CONbits
               00134         extern _CCP2CONbits
               00135         extern _ECCP2CONbits
               00136         extern _CCP1CONbits
               00137         extern _ECCP1CONbits
               00138         extern _ADCON2bits
               00139         extern _ADCON1bits
               00140         extern _ADCON0bits
               00141         extern _SSP1CON2bits
               00142         extern _SSPCON2bits
               00143         extern _SSP1CON1bits
               00144         extern _SSPCON1bits
               00145         extern _SSP1STATbits
               00146         extern _SSPSTATbits
               00147         extern _T2CONbits
               00148         extern _T1CONbits
               00149         extern _RCONbits
               00150         extern _WDTCONbits
               00151         extern _ECON1bits
               00152         extern _OSCCONbits
               00153         extern _T0CONbits
               00154         extern _STATUSbits
               00155         extern _INTCON3bits
               00156         extern _INTCON2bits
               00157         extern _INTCONbits
               00158         extern _STKPTRbits
               00159         extern _stdin
               00160         extern _stdout
               00161         extern _LCDText
               00162         extern _MAADR5
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _MAADR6
               00164         extern _MAADR3
               00165         extern _MAADR4
               00166         extern _MAADR1
               00167         extern _MAADR2
               00168         extern _EBSTSD
               00169         extern _EBSTCON
               00170         extern _EBSTCS
               00171         extern _EBSTCSL
               00172         extern _EBSTCSH
               00173         extern _MISTAT
               00174         extern _EFLOCON
               00175         extern _EPAUS
               00176         extern _EPAUSL
               00177         extern _EPAUSH
               00178         extern _MACON1
               00179         extern _MACON2
               00180         extern _MACON3
               00181         extern _MACON4
               00182         extern _MABBIPG
               00183         extern _MAIPG
               00184         extern _MAIPGL
               00185         extern _MAIPGH
               00186         extern _MACLCON1
               00187         extern _MACLCON2
               00188         extern _MAMXFL
               00189         extern _MAMXFLL
               00190         extern _MAMXFLH
               00191         extern _MICON
               00192         extern _MICMD
               00193         extern _MIREGADR
               00194         extern _MIWR
               00195         extern _MIWRL
               00196         extern _MIWRH
               00197         extern _MIRD
               00198         extern _MIRDL
               00199         extern _MIRDH
               00200         extern _EHT0
               00201         extern _EHT1
               00202         extern _EHT2
               00203         extern _EHT3
               00204         extern _EHT4
               00205         extern _EHT5
               00206         extern _EHT6
               00207         extern _EHT7
               00208         extern _EPMM0
               00209         extern _EPMM1
               00210         extern _EPMM2
               00211         extern _EPMM3
               00212         extern _EPMM4
               00213         extern _EPMM5
               00214         extern _EPMM6
               00215         extern _EPMM7
               00216         extern _EPMCS
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217         extern _EPMCSL
               00218         extern _EPMCSH
               00219         extern _EPMO
               00220         extern _EPMOL
               00221         extern _EPMOH
               00222         extern _EWOLIE
               00223         extern _EWOLIR
               00224         extern _ERXFCON
               00225         extern _EPKTCNT
               00226         extern _EWRPT
               00227         extern _EWRPTL
               00228         extern _EWRPTH
               00229         extern _ETXST
               00230         extern _ETXSTL
               00231         extern _ETXSTH
               00232         extern _ETXND
               00233         extern _ETXNDL
               00234         extern _ETXNDH
               00235         extern _ERXST
               00236         extern _ERXSTL
               00237         extern _ERXSTH
               00238         extern _ERXND
               00239         extern _ERXNDL
               00240         extern _ERXNDH
               00241         extern _ERXRDPT
               00242         extern _ERXRDPTL
               00243         extern _ERXRDPTH
               00244         extern _ERXWRPT
               00245         extern _ERXWRPTL
               00246         extern _ERXWRPTH
               00247         extern _EDMAST
               00248         extern _EDMASTL
               00249         extern _EDMASTH
               00250         extern _EDMAND
               00251         extern _EDMANDL
               00252         extern _EDMANDH
               00253         extern _EDMADST
               00254         extern _EDMADSTL
               00255         extern _EDMADSTH
               00256         extern _EDMACS
               00257         extern _EDMACSL
               00258         extern _EDMACSH
               00259         extern _EIE
               00260         extern _ESTAT
               00261         extern _ECON2
               00262         extern _EIR
               00263         extern _EDATA
               00264         extern _SSP2CON2
               00265         extern _SSP2CON1
               00266         extern _SSP2STAT
               00267         extern _SSP2ADD
               00268         extern _SSP2BUF
               00269         extern _ECCP2DEL
               00270         extern _ECCP2AS
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00271         extern _ECCP3DEL
               00272         extern _ECCP3AS
               00273         extern _RCSTA2
               00274         extern _TXSTA2
               00275         extern _TXREG2
               00276         extern _RCREG2
               00277         extern _SPBRG2
               00278         extern _CCP5CON
               00279         extern _CCPR5
               00280         extern _CCPR5L
               00281         extern _CCPR5H
               00282         extern _CCP4CON
               00283         extern _CCPR4
               00284         extern _CCPR4L
               00285         extern _CCPR4H
               00286         extern _T4CON
               00287         extern _PR4
               00288         extern _TMR4
               00289         extern _ECCP1DEL
               00290         extern _ERDPT
               00291         extern _ERDPTL
               00292         extern _ERDPTH
               00293         extern _BAUDCON2
               00294         extern _BAUDCTL2
               00295         extern _SPBRGH2
               00296         extern _BAUDCON
               00297         extern _BAUDCON1
               00298         extern _BAUDCTL
               00299         extern _BAUDCTL1
               00300         extern _SPBRGH
               00301         extern _SPBRGH1
               00302         extern _PORTA
               00303         extern _PORTB
               00304         extern _PORTC
               00305         extern _PORTD
               00306         extern _PORTE
               00307         extern _PORTF
               00308         extern _PORTG
               00309         extern _PORTH
               00310         extern _PORTJ
               00311         extern _LATA
               00312         extern _LATB
               00313         extern _LATC
               00314         extern _LATD
               00315         extern _LATE
               00316         extern _LATF
               00317         extern _LATG
               00318         extern _LATH
               00319         extern _LATJ
               00320         extern _DDRA
               00321         extern _TRISA
               00322         extern _DDRB
               00323         extern _TRISB
               00324         extern _DDRC
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00325         extern _TRISC
               00326         extern _DDRD
               00327         extern _TRISD
               00328         extern _DDRE
               00329         extern _TRISE
               00330         extern _DDRF
               00331         extern _TRISF
               00332         extern _DDRG
               00333         extern _TRISG
               00334         extern _DDRH
               00335         extern _TRISH
               00336         extern _DDRJ
               00337         extern _TRISJ
               00338         extern _OSCTUNE
               00339         extern _MEMCON
               00340         extern _PIE1
               00341         extern _PIR1
               00342         extern _IPR1
               00343         extern _PIE2
               00344         extern _PIR2
               00345         extern _IPR2
               00346         extern _PIE3
               00347         extern _PIR3
               00348         extern _IPR3
               00349         extern _EECON1
               00350         extern _EECON2
               00351         extern _RCSTA
               00352         extern _RCSTA1
               00353         extern _TXSTA
               00354         extern _TXSTA1
               00355         extern _TXREG
               00356         extern _TXREG1
               00357         extern _RCREG
               00358         extern _RCREG1
               00359         extern _SPBRG
               00360         extern _SPBRG1
               00361         extern _PSPCON
               00362         extern _T3CON
               00363         extern _TMR3L
               00364         extern _TMR3H
               00365         extern _CMCON
               00366         extern _CVRCON
               00367         extern _ECCP1AS
               00368         extern _CCP3CON
               00369         extern _ECCP3CON
               00370         extern _CCPR3
               00371         extern _CCPR3L
               00372         extern _CCPR3H
               00373         extern _CCP2CON
               00374         extern _ECCP2CON
               00375         extern _CCPR2
               00376         extern _CCPR2L
               00377         extern _CCPR2H
               00378         extern _CCP1CON
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00379         extern _ECCP1CON
               00380         extern _CCPR1
               00381         extern _CCPR1L
               00382         extern _CCPR1H
               00383         extern _ADCON2
               00384         extern _ADCON1
               00385         extern _ADCON0
               00386         extern _ADRES
               00387         extern _ADRESL
               00388         extern _ADRESH
               00389         extern _SSP1CON2
               00390         extern _SSPCON2
               00391         extern _SSP1CON1
               00392         extern _SSPCON1
               00393         extern _SSP1STAT
               00394         extern _SSPSTAT
               00395         extern _SSP1ADD
               00396         extern _SSPADD
               00397         extern _SSP1BUF
               00398         extern _SSPBUF
               00399         extern _T2CON
               00400         extern _PR2
               00401         extern _TMR2
               00402         extern _T1CON
               00403         extern _TMR1L
               00404         extern _TMR1H
               00405         extern _RCON
               00406         extern _WDTCON
               00407         extern _ECON1
               00408         extern _OSCCON
               00409         extern _T0CON
               00410         extern _TMR0L
               00411         extern _TMR0H
               00412         extern _STATUS
               00413         extern _FSR2L
               00414         extern _FSR2H
               00415         extern _PLUSW2
               00416         extern _PREINC2
               00417         extern _POSTDEC2
               00418         extern _POSTINC2
               00419         extern _INDF2
               00420         extern _BSR
               00421         extern _FSR1L
               00422         extern _FSR1H
               00423         extern _PLUSW1
               00424         extern _PREINC1
               00425         extern _POSTDEC1
               00426         extern _POSTINC1
               00427         extern _INDF1
               00428         extern _WREG
               00429         extern _FSR0L
               00430         extern _FSR0H
               00431         extern _PLUSW0
               00432         extern _PREINC0
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00433         extern _POSTDEC0
               00434         extern _POSTINC0
               00435         extern _INDF0
               00436         extern _INTCON3
               00437         extern _INTCON2
               00438         extern _INTCON
               00439         extern _PROD
               00440         extern _PRODL
               00441         extern _PRODH
               00442         extern _TABLAT
               00443         extern _TBLPTR
               00444         extern _TBLPTRL
               00445         extern _TBLPTRH
               00446         extern _TBLPTRU
               00447         extern _PC
               00448         extern _PCL
               00449         extern _PCLATH
               00450         extern _PCLATU
               00451         extern _STKPTR
               00452         extern _TOS
               00453         extern _TOSL
               00454         extern _TOSH
               00455         extern _TOSU
               00456         extern _ultoa
               00457         extern _strlen
               00458         extern _LCDInit
               00459         extern _LCDUpdate
               00460 ;--------------------------------------------------------
               00461 ;       Equates to used internal registers
               00462 ;--------------------------------------------------------
  00000FD8     00463 STATUS  equ     0xfd8
  00000FFA     00464 PCLATH  equ     0xffa
  00000FFB     00465 PCLATU  equ     0xffb
  00000FE8     00466 WREG    equ     0xfe8
  00000FE0     00467 BSR     equ     0xfe0
  00000FE9     00468 FSR0L   equ     0xfe9
  00000FEA     00469 FSR0H   equ     0xfea
  00000FE1     00470 FSR1L   equ     0xfe1
  00000FD9     00471 FSR2L   equ     0xfd9
  00000FEF     00472 INDF0   equ     0xfef
  00000FE5     00473 POSTDEC1        equ     0xfe5
  00000FE4     00474 PREINC1 equ     0xfe4
  00000FDB     00475 PLUSW2  equ     0xfdb
  00000FF3     00476 PRODL   equ     0xff3
  00000FF4     00477 PRODH   equ     0xff4
               00478 
               00479 
               00480         idata
               00481 _time   db      0x30, 0x30, 0x3a, 0x30, 0x30, 0x20, 0x20, 0x30, 0x30, 0x3a, 0x30, 0x30
               00482         db      0x3a, 0x30, 0x30, 0x00
               00483 _currentTime    db      LOW((_time + 7)), HIGH((_time + 7)), 0x80
               00484 _position       db      0x00, 0x00
               00485 _alarmflag      db      0x00, 0x00
               00486 _refresh        db      0x01, 0x00
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00487 _bres   db      0x00, 0x00, 0x00, 0x00
               00488 
               00489 
               00490 ; Internal registers
               00491 .registers      udata_ovr       0x0000
               00492 r0x00   res     1
               00493 r0x01   res     1
               00494 r0x02   res     1
               00495 r0x03   res     1
               00496 r0x04   res     1
               00497 r0x05   res     1
               00498 r0x06   res     1
               00499 r0x07   res     1
               00500 r0x08   res     1
               00501 r0x09   res     1
               00502 r0x0a   res     1
               00503 r0x0b   res     1
               00504 r0x0c   res     1
               00505 r0x0d   res     1
               00506 r0x0e   res     1
               00507 r0x0f   res     1
               00508 r0x10   res     1
               00509 r0x11   res     1
               00510 r0x12   res     1
               00511 r0x13   res     1
               00512 r0x14   res     1
               00513 r0x15   res     1
               00514 
               00515 udata_testint_0 udata
               00516 _main_string_1_1        res     16
               00517 
               00518 udata_testint_1 udata
               00519 _display_word_WDigit_1_1        res     6
               00520 
               00521 ;--------------------------------------------------------
               00522 ; interrupt vector 
               00523 ;--------------------------------------------------------
               00524 
               00525 ;--------------------------------------------------------
               00526 ; global & static initialisations
               00527 ;--------------------------------------------------------
               00528 ; ; Starting pCode block for absolute section
               00529 ; ;-----------------------------------------
               00530 S_testint_ivec_0x1_high_isr     code    0X000008
0008 00531 ivec_0x1_high_isr:
0008 EF00 F000 00532         GOTO    _high_isr
               00533 
               00534 ; I code from now on!
               00535 ; ; Starting pCode block
               00536 S_testint__main code
0000 00537 _main:
0000 0000      00538         BANKSEL _main_string_1_1
               00539 ;       .line   87; testint.c   char string[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
0002 6B00      00540         CLRF    _main_string_1_1, B
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0004 0000      00541         BANKSEL (_main_string_1_1 + 1)
0006 6B00      00542         CLRF    (_main_string_1_1 + 1), B
0008 0000      00543         BANKSEL (_main_string_1_1 + 2)
000A 6B00      00544         CLRF    (_main_string_1_1 + 2), B
000C 0000      00545         BANKSEL (_main_string_1_1 + 3)
000E 6B00      00546         CLRF    (_main_string_1_1 + 3), B
0010 0000      00547         BANKSEL (_main_string_1_1 + 4)
0012 6B00      00548         CLRF    (_main_string_1_1 + 4), B
0014 0000      00549         BANKSEL (_main_string_1_1 + 5)
0016 6B00      00550         CLRF    (_main_string_1_1 + 5), B
0018 0000      00551         BANKSEL (_main_string_1_1 + 6)
001A 6B00      00552         CLRF    (_main_string_1_1 + 6), B
001C 0000      00553         BANKSEL (_main_string_1_1 + 7)
001E 6B00      00554         CLRF    (_main_string_1_1 + 7), B
0020 0000      00555         BANKSEL (_main_string_1_1 + 8)
0022 6B00      00556         CLRF    (_main_string_1_1 + 8), B
0024 0000      00557         BANKSEL (_main_string_1_1 + 9)
0026 6B00      00558         CLRF    (_main_string_1_1 + 9), B
0028 0000      00559         BANKSEL (_main_string_1_1 + 10)
002A 6B00      00560         CLRF    (_main_string_1_1 + 10), B
002C 0000      00561         BANKSEL (_main_string_1_1 + 11)
002E 6B00      00562         CLRF    (_main_string_1_1 + 11), B
0030 0000      00563         BANKSEL (_main_string_1_1 + 12)
0032 6B00      00564         CLRF    (_main_string_1_1 + 12), B
0034 0000      00565         BANKSEL (_main_string_1_1 + 13)
0036 6B00      00566         CLRF    (_main_string_1_1 + 13), B
0038 0000      00567         BANKSEL (_main_string_1_1 + 14)
003A 6B00      00568         CLRF    (_main_string_1_1 + 14), B
003C 0000      00569         BANKSEL (_main_string_1_1 + 15)
003E 6B00      00570         CLRF    (_main_string_1_1 + 15), B
               00571 ;       .line   89; testint.c   LED0_TRIS = 0; //configure 1st led pin as output (yellow)
0040 9000      00572         BCF     _TRISJbits, 0
               00573 ;       .line   90; testint.c   LED1_TRIS = 0; //configure 2nd led pin as output (red)
0042 9200      00574         BCF     _TRISJbits, 1
               00575 ;       .line   91; testint.c   LED2_TRIS = 0; //configure 3rd led pin as output (red)
0044 9400      00576         BCF     _TRISJbits, 2
               00577 ;       .line   93; testint.c   BUTTON0_TRIS = 1; //configure button0 as input
0046 8600      00578         BSF     _TRISBbits, 3
               00579 ;       .line   94; testint.c   BUTTON1_TRIS = 1; //configure button1 as input 
0048 8200      00580         BSF     _TRISBbits, 1
               00581 ;       .line   96; testint.c   RCONbits.IPEN      = 1;   // Interrupts Priority ENable
004A 8E00      00582         BSF     _RCONbits, 7
               00583 ;       .line   98; testint.c   INT1F  = 0;   //clear INT1 flag
004C 9000      00584         BCF     _INTCON3bits, 0
               00585 ;       .line   101; testint.c  INTCON3bits.INT1P  = 1; 
004E 8C00      00586         BSF     _INTCON3bits, 6
               00587 ;       .line   103; testint.c  INTCON2bits.INTEDG1= 0;
0050 9A00      00588         BCF     _INTCON2bits, 5
               00589 ;       .line   106; testint.c  INTCONbits.GIE     = 1;
0052 8E00      00590         BSF     _INTCONbits, 7
               00591 ;       .line   109; testint.c  INTCON3bits.INT1E  = 1;
0054 8600      00592         BSF     _INTCON3bits, 3
               00593 ;       .line   110; testint.c  INTCON3bits.INT3E  = 1;
0056 8A00      00594         BSF     _INTCON3bits, 5
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00595 ;       .line   112; testint.c  T0CONbits.T0CS     = 1;
0058 8A00      00596         BSF     _T0CONbits, 5
               00597 ;       .line   114; testint.c  LCDInit();
005A EC00 F000 00598         CALL    _LCDInit
               00599 ;       .line   115; testint.c  for(i=0;i<100;i++) dumb_delay1ms();
005E 0E64      00600         MOVLW   0x64
0060 6E00      00601         MOVWF   r0x00
0062 6A00      00602         CLRF    r0x01
0064 00603 _00183_DS_:
0064 EC00 F000 00604         CALL    _dumb_delay1ms
0068 0EFF      00605         MOVLW   0xff
006A 2600      00606         ADDWF   r0x00, F
006C A0D8      00607         BTFSS   STATUS, 0
006E 0600      00608         DECF    r0x01, F
0070 5000      00609         MOVF    r0x00, W
0072 1000      00610         IORWF   r0x01, W
0074 E100      00611         BNZ     _00183_DS_
               00612 ;       .line   117; testint.c  display_time (); 
0076 EC00 F000 00613         CALL    _display_time
               00614 ;       .line   120; testint.c  INTCON2bits.TMR0IP       = 1; 
007A 8400      00615         BSF     _INTCON2bits, 2
               00616 ;       .line   123; testint.c  TMR0F    = 0;
007C 9400      00617         BCF     _INTCONbits, 2
               00618 ;       .line   126; testint.c  T0CONbits.T08BIT    = 0;
007E 9C00      00619         BCF     _T0CONbits, 6
               00620 ;       .line   128; testint.c  T0CONbits.PSA       = 1;
0080 8600      00621         BSF     _T0CONbits, 3
               00622 ;       .line   130; testint.c  INTCONbits.TMR0IE   = 1;
0082 8A00      00623         BSF     _INTCONbits, 5
               00624 ;       .line   132; testint.c  T0CONbits.TMR0ON    = 1;
0084 8E00      00625         BSF     _T0CONbits, 7
0086 00626 _00179_DS_:
0086 0000      00627         BANKSEL _refresh
               00628 ;       .line   137; testint.c  if ( refresh == 1){
0088 5100      00629         MOVF    _refresh, W, B
008A 0A01      00630         XORLW   0x01
008C E100      00631         BNZ     _00192_DS_
008E 0000      00632         BANKSEL (_refresh + 1)
0090 5100      00633         MOVF    (_refresh + 1), W, B
0092 E000      00634         BZ      _00193_DS_
0094 00635 _00192_DS_:
0094 D000      00636         BRA     _00179_DS_
0096 00637 _00193_DS_:
0096 0000      00638         BANKSEL _refresh
               00639 ;       .line   138; testint.c  refresh = 0;
0098 6B00      00640         CLRF    _refresh, B
009A 0000      00641         BANKSEL (_refresh + 1)
009C 6B00      00642         CLRF    (_refresh + 1), B
               00643 ;       .line   139; testint.c  display_time();
009E EC00 F000 00644         CALL    _display_time
00A2 0000      00645         BANKSEL _alarmflag
               00646 ;       .line   140; testint.c  if ( alarmflag == 1){
00A4 5100      00647         MOVF    _alarmflag, W, B
00A6 0A01      00648         XORLW   0x01
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A8 E100      00649         BNZ     _00194_DS_
00AA 0000      00650         BANKSEL (_alarmflag + 1)
00AC 5100      00651         MOVF    (_alarmflag + 1), W, B
00AE E000      00652         BZ      _00195_DS_
00B0 00653 _00194_DS_:
00B0 D000      00654         BRA     _00179_DS_
00B2 00655 _00195_DS_:
               00656 ;       .line   141; testint.c  alarm();
00B2 EC00 F000 00657         CALL    _alarm
00B6 D000      00658         BRA     _00179_DS_
00B8 0012      00659         RETURN  
               00660 
               00661 ; ; Starting pCode block
               00662 S_testint__dumb_delay1ms        code
0000 00663 _dumb_delay1ms:
               00664 ;       .line   340; testint.c  void dumb_delay1ms (void)
0000 CFD9 FFE5 00665         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00666         MOVFF   FSR1L, FSR2L
               00667 ;       .line   342; testint.c  TMR0H = HIGH (0x10000-EXEC_FREQ/1000);
0008 0ED8      00668         MOVLW   0xd8
000A 6E00      00669         MOVWF   _TMR0H
               00670 ;       .line   343; testint.c  TMR0L = LOW  (0x10000-EXEC_FREQ/1000);
000C 0EF0      00671         MOVLW   0xf0
000E 6E00      00672         MOVWF   _TMR0L
               00673 ;       .line   344; testint.c  T0CONbits.TMR0ON = 0;  //disable timer0
0010 9E00      00674         BCF     _T0CONbits, 7
               00675 ;       .line   345; testint.c  T0CONbits.T08BIT = 0;  //use timer0 16-bit counter
0012 9C00      00676         BCF     _T0CONbits, 6
               00677 ;       .line   346; testint.c  T0CONbits.T0CS   = 0;  //use timer0 instruction cycle clock
0014 9A00      00678         BCF     _T0CONbits, 5
               00679 ;       .line   347; testint.c  T0CONbits.PSA    = 1;  //disable timer0 prescaler
0016 8600      00680         BSF     _T0CONbits, 3
               00681 ;       .line   348; testint.c  INTCONbits.T0IF   = 0;  //clear timer0 overflow bit
0018 9400      00682         BCF     _INTCONbits, 2
               00683 ;       .line   349; testint.c  T0CONbits.TMR0ON = 1;  //enable timer0
001A 8E00      00684         BSF     _T0CONbits, 7
001C 00685 _00378_DS_:
               00686 ;       .line   350; testint.c  while(!INTCONbits.T0IF){} //busy wait for timer0 to overflow
001C A400      00687         BTFSS   _INTCONbits, 2
001E D000      00688         BRA     _00378_DS_
               00689 ;       .line   351; testint.c  INTCONbits.T0IF   = 0;  //clear timer0 overflow bit
0020 9400      00690         BCF     _INTCONbits, 2
0022 CFE4 FFD9 00691         MOVFF   PREINC1, FSR2L
0026 0012      00692         RETURN  
               00693 
               00694 ; ; Starting pCode block
               00695 S_testint__strlcpy      code
0000 00696 _strlcpy:
               00697 ;       .line   309; testint.c  strlcpy(char *dst, const char *src, size_t siz)
0000 CFD9 FFE5 00698         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00699         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00700         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00701         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00702         MOVFF   r0x02, POSTDEC1
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0014 C000 FFE5 00703         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00704         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00705         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00706         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00707         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 00708         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 00709         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 00710         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 00711         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 00712         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 00713         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 00714         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 00715         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 00716         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 00717         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 00718         MOVFF   r0x12, POSTDEC1
0054 C000 FFE5 00719         MOVFF   r0x13, POSTDEC1
0058 C000 FFE5 00720         MOVFF   r0x14, POSTDEC1
005C C000 FFE5 00721         MOVFF   r0x15, POSTDEC1
0060 0E02      00722         MOVLW   0x02
0062 CFDB F000 00723         MOVFF   PLUSW2, r0x00
0066 0E03      00724         MOVLW   0x03
0068 CFDB F000 00725         MOVFF   PLUSW2, r0x01
006C 0E04      00726         MOVLW   0x04
006E CFDB F000 00727         MOVFF   PLUSW2, r0x02
0072 0E05      00728         MOVLW   0x05
0074 CFDB F000 00729         MOVFF   PLUSW2, r0x03
0078 0E06      00730         MOVLW   0x06
007A CFDB F000 00731         MOVFF   PLUSW2, r0x04
007E 0E07      00732         MOVLW   0x07
0080 CFDB F000 00733         MOVFF   PLUSW2, r0x05
0084 0E08      00734         MOVLW   0x08
0086 CFDB F000 00735         MOVFF   PLUSW2, r0x06
008A 0E09      00736         MOVLW   0x09
008C CFDB F000 00737         MOVFF   PLUSW2, r0x07
               00738 ;       .line   311; testint.c  char       *d = dst;
0090 C000 F000 00739         MOVFF   r0x00, r0x08
0094 C000 F000 00740         MOVFF   r0x01, r0x09
0098 C000 F000 00741         MOVFF   r0x02, r0x0a
               00742 ;       .line   312; testint.c  const char *s = src;
009C C000 F000 00743         MOVFF   r0x03, r0x0b
00A0 C000 F000 00744         MOVFF   r0x04, r0x0c
00A4 C000 F000 00745         MOVFF   r0x05, r0x0d
               00746 ;       .line   313; testint.c  size_t      n = siz;
00A8 C000 F000 00747         MOVFF   r0x06, r0x0e
00AC C000 F000 00748         MOVFF   r0x07, r0x0f
               00749 ;       .line   316; testint.c  if (n != 0)
00B0 5000      00750         MOVF    r0x06, W
00B2 1000      00751         IORWF   r0x07, W
00B4 B4D8      00752         BTFSC   STATUS, 2
00B6 D000      00753         BRA     _00358_DS_
               00754 ;       .line   318; testint.c  while (--n != 0)
00B8 C000 F000 00755         MOVFF   r0x03, r0x10
00BC C000 F000 00756         MOVFF   r0x04, r0x11
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00C0 C000 F000 00757         MOVFF   r0x05, r0x12
00C4 C000 F000 00758         MOVFF   r0x06, r0x13
00C8 C000 F000 00759         MOVFF   r0x07, r0x14
00CC 00760 _00354_DS_:
00CC 0EFF      00761         MOVLW   0xff
00CE 2600      00762         ADDWF   r0x13, F
00D0 A0D8      00763         BTFSS   STATUS, 0
00D2 0600      00764         DECF    r0x14, F
00D4 5000      00765         MOVF    r0x13, W
00D6 1000      00766         IORWF   r0x14, W
00D8 E000      00767         BZ      _00373_DS_
               00768 ;       .line   320; testint.c  if ((*d++ = *s++) == '\0')
00DA C000 FFE9 00769         MOVFF   r0x10, FSR0L
00DE C000 FFF3 00770         MOVFF   r0x11, PRODL
00E2 5000      00771         MOVF    r0x12, W
00E4 EC00 F000 00772         CALL    __gptrget1
00E8 6E00      00773         MOVWF   r0x15
00EA 2A00      00774         INCF    r0x10, F
00EC B0D8      00775         BTFSC   STATUS, 0
00EE 2A00      00776         INCF    r0x11, F
00F0 B0D8      00777         BTFSC   STATUS, 0
00F2 2A00      00778         INCF    r0x12, F
00F4 C000 FFE5 00779         MOVFF   r0x15, POSTDEC1
00F8 C000 FFE9 00780         MOVFF   r0x00, FSR0L
00FC C000 FFF3 00781         MOVFF   r0x01, PRODL
0100 5000      00782         MOVF    r0x02, W
0102 EC00 F000 00783         CALL    __gptrput1
0106 2A00      00784         INCF    r0x00, F
0108 B0D8      00785         BTFSC   STATUS, 0
010A 2A00      00786         INCF    r0x01, F
010C B0D8      00787         BTFSC   STATUS, 0
010E 2A00      00788         INCF    r0x02, F
0110 5000      00789         MOVF    r0x15, W
0112 E100      00790         BNZ     _00354_DS_
0114 00791 _00373_DS_:
               00792 ;       .line   321; testint.c  break;
0114 C000 F000 00793         MOVFF   r0x10, r0x0b
0118 C000 F000 00794         MOVFF   r0x11, r0x0c
011C C000 F000 00795         MOVFF   r0x12, r0x0d
0120 C000 F000 00796         MOVFF   r0x00, r0x08
0124 C000 F000 00797         MOVFF   r0x01, r0x09
0128 C000 F000 00798         MOVFF   r0x02, r0x0a
012C C000 F000 00799         MOVFF   r0x13, r0x0e
0130 C000 F000 00800         MOVFF   r0x14, r0x0f
0134 00801 _00358_DS_:
               00802 ;       .line   326; testint.c  if (n == 0)
0134 5000      00803         MOVF    r0x0e, W
0136 1000      00804         IORWF   r0x0f, W
0138 E100      00805         BNZ     _00365_DS_
               00806 ;       .line   328; testint.c  if (siz != 0)
013A 5000      00807         MOVF    r0x06, W
013C 1000      00808         IORWF   r0x07, W
013E E000      00809         BZ      _00372_DS_
               00810 ;       .line   329; testint.c  *d = '\0';          /* NUL-terminate dst */
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0140 0E00      00811         MOVLW   0x00
0142 6EE5      00812         MOVWF   POSTDEC1
0144 C000 FFE9 00813         MOVFF   r0x08, FSR0L
0148 C000 FFF3 00814         MOVFF   r0x09, PRODL
014C 5000      00815         MOVF    r0x0a, W
014E EC00 F000 00816         CALL    __gptrput1
0152 00817 _00372_DS_:
               00818 ;       .line   330; testint.c  while (*s++)
0152 C000 F000 00819         MOVFF   r0x0b, r0x00
0156 C000 F000 00820         MOVFF   r0x0c, r0x01
015A C000 F000 00821         MOVFF   r0x0d, r0x02
015E 00822 _00361_DS_:
015E C000 FFE9 00823         MOVFF   r0x00, FSR0L
0162 C000 FFF3 00824         MOVFF   r0x01, PRODL
0166 5000      00825         MOVF    r0x02, W
0168 EC00 F000 00826         CALL    __gptrget1
016C 6E00      00827         MOVWF   r0x06
016E 2A00      00828         INCF    r0x00, F
0170 B0D8      00829         BTFSC   STATUS, 0
0172 2A00      00830         INCF    r0x01, F
0174 B0D8      00831         BTFSC   STATUS, 0
0176 2A00      00832         INCF    r0x02, F
0178 5000      00833         MOVF    r0x06, W
017A E100      00834         BNZ     _00361_DS_
017C C000 F000 00835         MOVFF   r0x00, r0x0b
0180 C000 F000 00836         MOVFF   r0x01, r0x0c
0184 C000 F000 00837         MOVFF   r0x02, r0x0d
0188 00838 _00365_DS_:
               00839 ;       .line   336; testint.c  return (s - src - 1);       /* count does not include NUL */
0188 5000      00840         MOVF    r0x03, W
018A 5C00      00841         SUBWF   r0x0b, W
018C 6E00      00842         MOVWF   r0x03
018E 5000      00843         MOVF    r0x04, W
0190 5800      00844         SUBWFB  r0x0c, W
0192 6E00      00845         MOVWF   r0x04
0194 0EFF      00846         MOVLW   0xff
0196 2600      00847         ADDWF   r0x03, F
0198 A0D8      00848         BTFSS   STATUS, 0
019A 0600      00849         DECF    r0x04, F
019C C000 FFF3 00850         MOVFF   r0x04, PRODL
01A0 5000      00851         MOVF    r0x03, W
01A2 CFE4 F000 00852         MOVFF   PREINC1, r0x15
01A6 CFE4 F000 00853         MOVFF   PREINC1, r0x14
01AA CFE4 F000 00854         MOVFF   PREINC1, r0x13
01AE CFE4 F000 00855         MOVFF   PREINC1, r0x12
01B2 CFE4 F000 00856         MOVFF   PREINC1, r0x11
01B6 CFE4 F000 00857         MOVFF   PREINC1, r0x10
01BA CFE4 F000 00858         MOVFF   PREINC1, r0x0f
01BE CFE4 F000 00859         MOVFF   PREINC1, r0x0e
01C2 CFE4 F000 00860         MOVFF   PREINC1, r0x0d
01C6 CFE4 F000 00861         MOVFF   PREINC1, r0x0c
01CA CFE4 F000 00862         MOVFF   PREINC1, r0x0b
01CE CFE4 F000 00863         MOVFF   PREINC1, r0x0a
01D2 CFE4 F000 00864         MOVFF   PREINC1, r0x09
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01D6 CFE4 F000 00865         MOVFF   PREINC1, r0x08
01DA CFE4 F000 00866         MOVFF   PREINC1, r0x07
01DE CFE4 F000 00867         MOVFF   PREINC1, r0x06
01E2 CFE4 F000 00868         MOVFF   PREINC1, r0x05
01E6 CFE4 F000 00869         MOVFF   PREINC1, r0x04
01EA CFE4 F000 00870         MOVFF   PREINC1, r0x03
01EE CFE4 F000 00871         MOVFF   PREINC1, r0x02
01F2 CFE4 F000 00872         MOVFF   PREINC1, r0x01
01F6 CFE4 F000 00873         MOVFF   PREINC1, r0x00
01FA CFE4 FFD9 00874         MOVFF   PREINC1, FSR2L
01FE 0012      00875         RETURN  
               00876 
               00877 ; ; Starting pCode block
               00878 S_testint__display_string       code
0000 00879 _display_string:
               00880 ;       .line   264; testint.c  void display_string(BYTE pos, char* text)
0000 CFD9 FFE5 00881         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00882         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00883         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00884         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00885         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00886         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00887         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00888         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00889         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00890         MOVFF   r0x07, POSTDEC1
0028 0E02      00891         MOVLW   0x02
002A CFDB F000 00892         MOVFF   PLUSW2, r0x00
002E 0E03      00893         MOVLW   0x03
0030 CFDB F000 00894         MOVFF   PLUSW2, r0x01
0034 0E04      00895         MOVLW   0x04
0036 CFDB F000 00896         MOVFF   PLUSW2, r0x02
003A 0E05      00897         MOVLW   0x05
003C CFDB F000 00898         MOVFF   PLUSW2, r0x03
               00899 ;       .line   266; testint.c  BYTE l= strlen(text)+1;
0040 5000      00900         MOVF    r0x03, W
0042 6EE5      00901         MOVWF   POSTDEC1
0044 5000      00902         MOVF    r0x02, W
0046 6EE5      00903         MOVWF   POSTDEC1
0048 5000      00904         MOVF    r0x01, W
004A 6EE5      00905         MOVWF   POSTDEC1
004C EC00 F000 00906         CALL    _strlen
0050 6E00      00907         MOVWF   r0x04
0052 CFF3 F000 00908         MOVFF   PRODL, r0x05
0056 0E03      00909         MOVLW   0x03
0058 26E1      00910         ADDWF   FSR1L, F
005A 2A00      00911         INCF    r0x04, F
               00912 ;       .line   267; testint.c  BYTE max= 32-pos;
005C 5000      00913         MOVF    r0x00, W
005E 0820      00914         SUBLW   0x20
0060 6E00      00915         MOVWF   r0x05
               00916 ;       .line   268; testint.c  strlcpy((char*)&LCDText[pos], text,(l<max)?l:max );
0062 6A00      00917         CLRF    r0x06
0064 0E00      00918         MOVLW   LOW(_LCDText)
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0066 2600      00919         ADDWF   r0x00, F
0068 0E00      00920         MOVLW   HIGH(_LCDText)
006A 2200      00921         ADDWFC  r0x06, F
006C 5000      00922         MOVF    r0x06, W
006E 6E00      00923         MOVWF   r0x06
0070 5000      00924         MOVF    r0x00, W
0072 6E00      00925         MOVWF   r0x00
0074 0E80      00926         MOVLW   0x80
0076 6E00      00927         MOVWF   r0x07
0078 5000      00928         MOVF    r0x05, W
007A 5C00      00929         SUBWF   r0x04, W
007C E300      00930         BNC     _00345_DS_
007E C000 F000 00931         MOVFF   r0x05, r0x04
0082 00932 _00345_DS_:
0082 6A00      00933         CLRF    r0x05
0084 5000      00934         MOVF    r0x05, W
0086 6EE5      00935         MOVWF   POSTDEC1
0088 5000      00936         MOVF    r0x04, W
008A 6EE5      00937         MOVWF   POSTDEC1
008C 5000      00938         MOVF    r0x03, W
008E 6EE5      00939         MOVWF   POSTDEC1
0090 5000      00940         MOVF    r0x02, W
0092 6EE5      00941         MOVWF   POSTDEC1
0094 5000      00942         MOVF    r0x01, W
0096 6EE5      00943         MOVWF   POSTDEC1
0098 5000      00944         MOVF    r0x07, W
009A 6EE5      00945         MOVWF   POSTDEC1
009C 5000      00946         MOVF    r0x06, W
009E 6EE5      00947         MOVWF   POSTDEC1
00A0 5000      00948         MOVF    r0x00, W
00A2 6EE5      00949         MOVWF   POSTDEC1
00A4 EC00 F000 00950         CALL    _strlcpy
00A8 0E08      00951         MOVLW   0x08
00AA 26E1      00952         ADDWF   FSR1L, F
               00953 ;       .line   269; testint.c  LCDUpdate();
00AC EC00 F000 00954         CALL    _LCDUpdate
00B0 CFE4 F000 00955         MOVFF   PREINC1, r0x07
00B4 CFE4 F000 00956         MOVFF   PREINC1, r0x06
00B8 CFE4 F000 00957         MOVFF   PREINC1, r0x05
00BC CFE4 F000 00958         MOVFF   PREINC1, r0x04
00C0 CFE4 F000 00959         MOVFF   PREINC1, r0x03
00C4 CFE4 F000 00960         MOVFF   PREINC1, r0x02
00C8 CFE4 F000 00961         MOVFF   PREINC1, r0x01
00CC CFE4 F000 00962         MOVFF   PREINC1, r0x00
00D0 CFE4 FFD9 00963         MOVFF   PREINC1, FSR2L
00D4 0012      00964         RETURN  
               00965 
               00966 ; ; Starting pCode block
               00967 S_testint__display_word code
0000 00968 _display_word:
               00969 ;       .line   242; testint.c  void display_word(BYTE pos, WORD w) //WORD is a 16 bits unsigned
0000 CFD9 FFE5 00970         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00971         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00972         MOVFF   r0x00, POSTDEC1
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
000C C000 FFE5 00973         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00974         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00975         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00976         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00977         MOVFF   r0x05, POSTDEC1
0020 0E02      00978         MOVLW   0x02
0022 CFDB F000 00979         MOVFF   PLUSW2, r0x00
0026 0E03      00980         MOVLW   0x03
0028 CFDB F000 00981         MOVFF   PLUSW2, r0x01
002C 0E04      00982         MOVLW   0x04
002E CFDB F000 00983         MOVFF   PLUSW2, r0x02
               00984 ;       .line   250; testint.c  ultoa(w, WDigit, radix);      
0032 6A00      00985         CLRF    r0x03
0034 6A00      00986         CLRF    r0x04
0036 0E0A      00987         MOVLW   0x0a
0038 6EE5      00988         MOVWF   POSTDEC1
003A 0E00      00989         MOVLW   HIGH(_display_word_WDigit_1_1)
003C 6EE5      00990         MOVWF   POSTDEC1
003E 0E00      00991         MOVLW   LOW(_display_word_WDigit_1_1)
0040 6EE5      00992         MOVWF   POSTDEC1
0042 5000      00993         MOVF    r0x04, W
0044 6EE5      00994         MOVWF   POSTDEC1
0046 5000      00995         MOVF    r0x03, W
0048 6EE5      00996         MOVWF   POSTDEC1
004A 5000      00997         MOVF    r0x02, W
004C 6EE5      00998         MOVWF   POSTDEC1
004E 5000      00999         MOVF    r0x01, W
0050 6EE5      01000         MOVWF   POSTDEC1
0052 EC00 F000 01001         CALL    _ultoa
0056 0E07      01002         MOVLW   0x07
0058 26E1      01003         ADDWF   FSR1L, F
               01004 ;       .line   251; testint.c  for(j = 0; j < strlen((char*)WDigit); j++)
005A 6A00      01005         CLRF    r0x01
005C 01006 _00326_DS_:
005C 0E00      01007         MOVLW   HIGH(_display_word_WDigit_1_1)
005E 6E00      01008         MOVWF   r0x03
0060 0E00      01009         MOVLW   LOW(_display_word_WDigit_1_1)
0062 6E00      01010         MOVWF   r0x02
0064 0E80      01011         MOVLW   0x80
0066 6E00      01012         MOVWF   r0x04
0068 5000      01013         MOVF    r0x04, W
006A 6EE5      01014         MOVWF   POSTDEC1
006C 5000      01015         MOVF    r0x03, W
006E 6EE5      01016         MOVWF   POSTDEC1
0070 5000      01017         MOVF    r0x02, W
0072 6EE5      01018         MOVWF   POSTDEC1
0074 EC00 F000 01019         CALL    _strlen
0078 6E00      01020         MOVWF   r0x02
007A CFF3 F000 01021         MOVFF   PRODL, r0x03
007E 0E03      01022         MOVLW   0x03
0080 26E1      01023         ADDWF   FSR1L, F
0082 C000 F000 01024         MOVFF   r0x01, r0x04
0086 6A00      01025         CLRF    r0x05
0088 5000      01026         MOVF    r0x05, W
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008A 0F80      01027         ADDLW   0x80
008C 6EF3      01028         MOVWF   PRODL
008E 5000      01029         MOVF    r0x03, W
0090 0F80      01030         ADDLW   0x80
0092 5CF3      01031         SUBWF   PRODL, W
0094 E100      01032         BNZ     _00336_DS_
0096 5000      01033         MOVF    r0x02, W
0098 5C00      01034         SUBWF   r0x04, W
009A 01035 _00336_DS_:
009A E200      01036         BC      _00329_DS_
               01037 ;       .line   253; testint.c  LCDText[LCDPos++] = WDigit[j];
009C C000 F000 01038         MOVFF   r0x00, r0x02
00A0 2A00      01039         INCF    r0x00, F
00A2 6A00      01040         CLRF    r0x03
00A4 0E00      01041         MOVLW   LOW(_LCDText)
00A6 2600      01042         ADDWF   r0x02, F
00A8 0E00      01043         MOVLW   HIGH(_LCDText)
00AA 2200      01044         ADDWFC  r0x03, F
00AC 0E00      01045         MOVLW   LOW(_display_word_WDigit_1_1)
00AE 2400      01046         ADDWF   r0x01, W
00B0 6E00      01047         MOVWF   r0x04
00B2 6A00      01048         CLRF    r0x05
00B4 0E00      01049         MOVLW   HIGH(_display_word_WDigit_1_1)
00B6 2200      01050         ADDWFC  r0x05, F
00B8 C000 FFE9 01051         MOVFF   r0x04, FSR0L
00BC C000 FFEA 01052         MOVFF   r0x05, FSR0H
00C0 CFEF F000 01053         MOVFF   INDF0, r0x04
00C4 C000 FFE9 01054         MOVFF   r0x02, FSR0L
00C8 C000 FFEA 01055         MOVFF   r0x03, FSR0H
00CC C000 FFEF 01056         MOVFF   r0x04, INDF0
               01057 ;       .line   251; testint.c  for(j = 0; j < strlen((char*)WDigit); j++)
00D0 2A00      01058         INCF    r0x01, F
00D2 D000      01059         BRA     _00326_DS_
00D4 01060 _00329_DS_:
               01061 ;       .line   255; testint.c  if(LCDPos < 32u)
00D4 C000 F000 01062         MOVFF   r0x00, r0x01
00D8 6A00      01063         CLRF    r0x02
00DA 0E00      01064         MOVLW   0x00
00DC 5C00      01065         SUBWF   r0x02, W
00DE E100      01066         BNZ     _00337_DS_
00E0 0E20      01067         MOVLW   0x20
00E2 5C00      01068         SUBWF   r0x01, W
00E4 01069 _00337_DS_:
00E4 E200      01070         BC      _00325_DS_
               01071 ;       .line   256; testint.c  LCDText[LCDPos] = 0;
00E6 6A00      01072         CLRF    r0x01
00E8 0E00      01073         MOVLW   LOW(_LCDText)
00EA 2600      01074         ADDWF   r0x00, F
00EC 0E00      01075         MOVLW   HIGH(_LCDText)
00EE 2200      01076         ADDWFC  r0x01, F
00F0 C000 FFE9 01077         MOVFF   r0x00, FSR0L
00F4 C000 FFEA 01078         MOVFF   r0x01, FSR0H
00F8 0E00      01079         MOVLW   0x00
00FA 6EEF      01080         MOVWF   INDF0
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00FC 01081 _00325_DS_:
               01082 ;       .line   257; testint.c  LCDUpdate();
00FC EC00 F000 01083         CALL    _LCDUpdate
0100 CFE4 F000 01084         MOVFF   PREINC1, r0x05
0104 CFE4 F000 01085         MOVFF   PREINC1, r0x04
0108 CFE4 F000 01086         MOVFF   PREINC1, r0x03
010C CFE4 F000 01087         MOVFF   PREINC1, r0x02
0110 CFE4 F000 01088         MOVFF   PREINC1, r0x01
0114 CFE4 F000 01089         MOVFF   PREINC1, r0x00
0118 CFE4 FFD9 01090         MOVFF   PREINC1, FSR2L
011C 0012      01091         RETURN  
               01092 
               01093 ; ; Starting pCode block
               01094 S_testint__display_time code
0000 01095 _display_time:
               01096 ;       .line   226; testint.c  void display_time(){    
0000 CFD9 FFE5 01097         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01098         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01099         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01100         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01101         MOVFF   r0x02, POSTDEC1
               01102 ;       .line   227; testint.c  display_string(0,time);         
0014 0E00      01103         MOVLW   HIGH(_time)
0016 6E00      01104         MOVWF   r0x01
0018 0E00      01105         MOVLW   LOW(_time)
001A 6E00      01106         MOVWF   r0x00
001C 0E80      01107         MOVLW   0x80
001E 6E00      01108         MOVWF   r0x02
0020 5000      01109         MOVF    r0x02, W
0022 6EE5      01110         MOVWF   POSTDEC1
0024 5000      01111         MOVF    r0x01, W
0026 6EE5      01112         MOVWF   POSTDEC1
0028 5000      01113         MOVF    r0x00, W
002A 6EE5      01114         MOVWF   POSTDEC1
002C 0E00      01115         MOVLW   0x00
002E 6EE5      01116         MOVWF   POSTDEC1
0030 EC00 F000 01117         CALL    _display_string
0034 0E04      01118         MOVLW   0x04
0036 26E1      01119         ADDWF   FSR1L, F
0038 0000      01120         BANKSEL _position
               01121 ;       .line   228; testint.c  if(position == 0) display_string(16+position-1," ^");
003A 5100      01122         MOVF    _position, W, B
003C 0000      01123         BANKSEL (_position + 1)
003E 1100      01124         IORWF   (_position + 1), W, B
0040 E100      01125         BNZ     _00317_DS_
0042 0000      01126         BANKSEL _position
0044 5100      01127         MOVF    _position, W, B
0046 6E00      01128         MOVWF   r0x00
0048 0E0F      01129         MOVLW   0x0f
004A 2600      01130         ADDWF   r0x00, F
004C 0E00      01131         MOVLW   UPPER(__str_2)
004E 6EE5      01132         MOVWF   POSTDEC1
0050 0E00      01133         MOVLW   HIGH(__str_2)
0052 6EE5      01134         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0054 0E00      01135         MOVLW   LOW(__str_2)
0056 6EE5      01136         MOVWF   POSTDEC1
0058 5000      01137         MOVF    r0x00, W
005A 6EE5      01138         MOVWF   POSTDEC1
005C EC00 F000 01139         CALL    _display_string
0060 0E04      01140         MOVLW   0x04
0062 26E1      01141         ADDWF   FSR1L, F
0064 D000      01142         BRA     _00319_DS_
0066 01143 _00317_DS_:
0066 0000      01144         BANKSEL _position
               01145 ;       .line   229; testint.c  else display_string(16+position-3,"   ^");
0068 5100      01146         MOVF    _position, W, B
006A 6E00      01147         MOVWF   r0x00
006C 0E0D      01148         MOVLW   0x0d
006E 2600      01149         ADDWF   r0x00, F
0070 0E00      01150         MOVLW   UPPER(__str_3)
0072 6EE5      01151         MOVWF   POSTDEC1
0074 0E00      01152         MOVLW   HIGH(__str_3)
0076 6EE5      01153         MOVWF   POSTDEC1
0078 0E00      01154         MOVLW   LOW(__str_3)
007A 6EE5      01155         MOVWF   POSTDEC1
007C 5000      01156         MOVF    r0x00, W
007E 6EE5      01157         MOVWF   POSTDEC1
0080 EC00 F000 01158         CALL    _display_string
0084 0E04      01159         MOVLW   0x04
0086 26E1      01160         ADDWF   FSR1L, F
0088 01161 _00319_DS_:
0088 CFE4 F000 01162         MOVFF   PREINC1, r0x02
008C CFE4 F000 01163         MOVFF   PREINC1, r0x01
0090 CFE4 F000 01164         MOVFF   PREINC1, r0x00
0094 CFE4 FFD9 01165         MOVFF   PREINC1, FSR2L
0098 0012      01166         RETURN  
               01167 
               01168 ; ; Starting pCode block
               01169 S_testint__test_inc_current_time        code
0000 01170 _test_inc_current_time:
               01171 ;       .line   195; testint.c  void test_inc_current_time(){        
0000 CFD9 FFE5 01172         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01173         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01174         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01175         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01176         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01177         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01178         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01179         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01180         MOVFF   r0x06, POSTDEC1
0024 0000      01181         BANKSEL _currentTime
               01182 ;       .line   196; testint.c  if(currentTime[7] == ':'){
0026 5100      01183         MOVF    _currentTime, W, B
0028 0F07      01184         ADDLW   0x07
002A 6E00      01185         MOVWF   r0x00
002C 0E00      01186         MOVLW   0x00
002E 0000      01187         BANKSEL (_currentTime + 1)
0030 2100      01188         ADDWFC  (_currentTime + 1), W, B
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0032 6E00      01189         MOVWF   r0x01
0034 0E00      01190         MOVLW   0x00
0036 0000      01191         BANKSEL (_currentTime + 2)
0038 2100      01192         ADDWFC  (_currentTime + 2), W, B
003A 6E00      01193         MOVWF   r0x02
003C C000 FFE9 01194         MOVFF   r0x00, FSR0L
0040 C000 FFF3 01195         MOVFF   r0x01, PRODL
0044 5000      01196         MOVF    r0x02, W
0046 EC00 F000 01197         CALL    __gptrget1
004A 6E00      01198         MOVWF   r0x03
004C 5000      01199         MOVF    r0x03, W
004E 0A3A      01200         XORLW   0x3a
0050 E100      01201         BNZ     _00272_DS_
               01202 ;       .line   197; testint.c  currentTime[7] = '0';
0052 0E30      01203         MOVLW   0x30
0054 6EE5      01204         MOVWF   POSTDEC1
0056 C000 FFE9 01205         MOVFF   r0x00, FSR0L
005A C000 FFF3 01206         MOVFF   r0x01, PRODL
005E 5000      01207         MOVF    r0x02, W
0060 EC00 F000 01208         CALL    __gptrput1
0064 0000      01209         BANKSEL _currentTime
               01210 ;       .line   198; testint.c  ++currentTime[6];
0066 5100      01211         MOVF    _currentTime, W, B
0068 0F06      01212         ADDLW   0x06
006A 6E00      01213         MOVWF   r0x00
006C 0E00      01214         MOVLW   0x00
006E 0000      01215         BANKSEL (_currentTime + 1)
0070 2100      01216         ADDWFC  (_currentTime + 1), W, B
0072 6E00      01217         MOVWF   r0x01
0074 0E00      01218         MOVLW   0x00
0076 0000      01219         BANKSEL (_currentTime + 2)
0078 2100      01220         ADDWFC  (_currentTime + 2), W, B
007A 6E00      01221         MOVWF   r0x02
007C C000 FFE9 01222         MOVFF   r0x00, FSR0L
0080 C000 FFF3 01223         MOVFF   r0x01, PRODL
0084 5000      01224         MOVF    r0x02, W
0086 EC00 F000 01225         CALL    __gptrget1
008A 6E00      01226         MOVWF   r0x03
008C 2A00      01227         INCF    r0x03, F
008E C000 FFE5 01228         MOVFF   r0x03, POSTDEC1
0092 C000 FFE9 01229         MOVFF   r0x00, FSR0L
0096 C000 FFF3 01230         MOVFF   r0x01, PRODL
009A 5000      01231         MOVF    r0x02, W
009C EC00 F000 01232         CALL    __gptrput1
00A0 01233 _00272_DS_:
00A0 0000      01234         BANKSEL _currentTime
               01235 ;       .line   200; testint.c  if(currentTime[6]=='6'){
00A2 5100      01236         MOVF    _currentTime, W, B
00A4 0F06      01237         ADDLW   0x06
00A6 6E00      01238         MOVWF   r0x00
00A8 0E00      01239         MOVLW   0x00
00AA 0000      01240         BANKSEL (_currentTime + 1)
00AC 2100      01241         ADDWFC  (_currentTime + 1), W, B
00AE 6E00      01242         MOVWF   r0x01
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00B0 0E00      01243         MOVLW   0x00
00B2 0000      01244         BANKSEL (_currentTime + 2)
00B4 2100      01245         ADDWFC  (_currentTime + 2), W, B
00B6 6E00      01246         MOVWF   r0x02
00B8 C000 FFE9 01247         MOVFF   r0x00, FSR0L
00BC C000 FFF3 01248         MOVFF   r0x01, PRODL
00C0 5000      01249         MOVF    r0x02, W
00C2 EC00 F000 01250         CALL    __gptrget1
00C6 6E00      01251         MOVWF   r0x03
00C8 5000      01252         MOVF    r0x03, W
00CA 0A36      01253         XORLW   0x36
00CC E100      01254         BNZ     _00274_DS_
               01255 ;       .line   201; testint.c  currentTime[6]='0';
00CE 0E30      01256         MOVLW   0x30
00D0 6EE5      01257         MOVWF   POSTDEC1
00D2 C000 FFE9 01258         MOVFF   r0x00, FSR0L
00D6 C000 FFF3 01259         MOVFF   r0x01, PRODL
00DA 5000      01260         MOVF    r0x02, W
00DC EC00 F000 01261         CALL    __gptrput1
00E0 0000      01262         BANKSEL _currentTime
               01263 ;       .line   202; testint.c  currentTime[4]++;
00E2 5100      01264         MOVF    _currentTime, W, B
00E4 0F04      01265         ADDLW   0x04
00E6 6E00      01266         MOVWF   r0x00
00E8 0E00      01267         MOVLW   0x00
00EA 0000      01268         BANKSEL (_currentTime + 1)
00EC 2100      01269         ADDWFC  (_currentTime + 1), W, B
00EE 6E00      01270         MOVWF   r0x01
00F0 0E00      01271         MOVLW   0x00
00F2 0000      01272         BANKSEL (_currentTime + 2)
00F4 2100      01273         ADDWFC  (_currentTime + 2), W, B
00F6 6E00      01274         MOVWF   r0x02
00F8 C000 FFE9 01275         MOVFF   r0x00, FSR0L
00FC C000 FFF3 01276         MOVFF   r0x01, PRODL
0100 5000      01277         MOVF    r0x02, W
0102 EC00 F000 01278         CALL    __gptrget1
0106 6E00      01279         MOVWF   r0x03
0108 2A00      01280         INCF    r0x03, F
010A C000 FFE5 01281         MOVFF   r0x03, POSTDEC1
010E C000 FFE9 01282         MOVFF   r0x00, FSR0L
0112 C000 FFF3 01283         MOVFF   r0x01, PRODL
0116 5000      01284         MOVF    r0x02, W
0118 EC00 F000 01285         CALL    __gptrput1
               01286 ;       .line   203; testint.c  alarmflag = 1;
011C 0E01      01287         MOVLW   0x01
011E 0000      01288         BANKSEL _alarmflag
0120 6F00      01289         MOVWF   _alarmflag, B
0122 0000      01290         BANKSEL (_alarmflag + 1)
0124 6B00      01291         CLRF    (_alarmflag + 1), B
0126 01292 _00274_DS_:
0126 0000      01293         BANKSEL _currentTime
               01294 ;       .line   205; testint.c  if(currentTime[4] == ':'){
0128 5100      01295         MOVF    _currentTime, W, B
012A 0F04      01296         ADDLW   0x04
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
012C 6E00      01297         MOVWF   r0x00
012E 0E00      01298         MOVLW   0x00
0130 0000      01299         BANKSEL (_currentTime + 1)
0132 2100      01300         ADDWFC  (_currentTime + 1), W, B
0134 6E00      01301         MOVWF   r0x01
0136 0E00      01302         MOVLW   0x00
0138 0000      01303         BANKSEL (_currentTime + 2)
013A 2100      01304         ADDWFC  (_currentTime + 2), W, B
013C 6E00      01305         MOVWF   r0x02
013E C000 FFE9 01306         MOVFF   r0x00, FSR0L
0142 C000 FFF3 01307         MOVFF   r0x01, PRODL
0146 5000      01308         MOVF    r0x02, W
0148 EC00 F000 01309         CALL    __gptrget1
014C 6E00      01310         MOVWF   r0x03
014E 5000      01311         MOVF    r0x03, W
0150 0A3A      01312         XORLW   0x3a
0152 E100      01313         BNZ     _00276_DS_
               01314 ;       .line   206; testint.c  currentTime[4] = '0';
0154 0E30      01315         MOVLW   0x30
0156 6EE5      01316         MOVWF   POSTDEC1
0158 C000 FFE9 01317         MOVFF   r0x00, FSR0L
015C C000 FFF3 01318         MOVFF   r0x01, PRODL
0160 5000      01319         MOVF    r0x02, W
0162 EC00 F000 01320         CALL    __gptrput1
0166 0000      01321         BANKSEL _currentTime
               01322 ;       .line   207; testint.c  ++currentTime[3];
0168 5100      01323         MOVF    _currentTime, W, B
016A 0F03      01324         ADDLW   0x03
016C 6E00      01325         MOVWF   r0x00
016E 0E00      01326         MOVLW   0x00
0170 0000      01327         BANKSEL (_currentTime + 1)
0172 2100      01328         ADDWFC  (_currentTime + 1), W, B
0174 6E00      01329         MOVWF   r0x01
0176 0E00      01330         MOVLW   0x00
0178 0000      01331         BANKSEL (_currentTime + 2)
017A 2100      01332         ADDWFC  (_currentTime + 2), W, B
017C 6E00      01333         MOVWF   r0x02
017E C000 FFE9 01334         MOVFF   r0x00, FSR0L
0182 C000 FFF3 01335         MOVFF   r0x01, PRODL
0186 5000      01336         MOVF    r0x02, W
0188 EC00 F000 01337         CALL    __gptrget1
018C 6E00      01338         MOVWF   r0x03
018E 2A00      01339         INCF    r0x03, F
0190 C000 FFE5 01340         MOVFF   r0x03, POSTDEC1
0194 C000 FFE9 01341         MOVFF   r0x00, FSR0L
0198 C000 FFF3 01342         MOVFF   r0x01, PRODL
019C 5000      01343         MOVF    r0x02, W
019E EC00 F000 01344         CALL    __gptrput1
01A2 01345 _00276_DS_:
01A2 0000      01346         BANKSEL _currentTime
               01347 ;       .line   209; testint.c  if(currentTime[3]=='6'){
01A4 5100      01348         MOVF    _currentTime, W, B
01A6 0F03      01349         ADDLW   0x03
01A8 6E00      01350         MOVWF   r0x00
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01AA 0E00      01351         MOVLW   0x00
01AC 0000      01352         BANKSEL (_currentTime + 1)
01AE 2100      01353         ADDWFC  (_currentTime + 1), W, B
01B0 6E00      01354         MOVWF   r0x01
01B2 0E00      01355         MOVLW   0x00
01B4 0000      01356         BANKSEL (_currentTime + 2)
01B6 2100      01357         ADDWFC  (_currentTime + 2), W, B
01B8 6E00      01358         MOVWF   r0x02
01BA C000 FFE9 01359         MOVFF   r0x00, FSR0L
01BE C000 FFF3 01360         MOVFF   r0x01, PRODL
01C2 5000      01361         MOVF    r0x02, W
01C4 EC00 F000 01362         CALL    __gptrget1
01C8 6E00      01363         MOVWF   r0x03
01CA 5000      01364         MOVF    r0x03, W
01CC 0A36      01365         XORLW   0x36
01CE E100      01366         BNZ     _00278_DS_
               01367 ;       .line   210; testint.c  currentTime[3]='0';
01D0 0E30      01368         MOVLW   0x30
01D2 6EE5      01369         MOVWF   POSTDEC1
01D4 C000 FFE9 01370         MOVFF   r0x00, FSR0L
01D8 C000 FFF3 01371         MOVFF   r0x01, PRODL
01DC 5000      01372         MOVF    r0x02, W
01DE EC00 F000 01373         CALL    __gptrput1
01E2 0000      01374         BANKSEL _currentTime
               01375 ;       .line   211; testint.c  currentTime[1]++;
01E4 5100      01376         MOVF    _currentTime, W, B
01E6 0F01      01377         ADDLW   0x01
01E8 6E00      01378         MOVWF   r0x00
01EA 0E00      01379         MOVLW   0x00
01EC 0000      01380         BANKSEL (_currentTime + 1)
01EE 2100      01381         ADDWFC  (_currentTime + 1), W, B
01F0 6E00      01382         MOVWF   r0x01
01F2 0E00      01383         MOVLW   0x00
01F4 0000      01384         BANKSEL (_currentTime + 2)
01F6 2100      01385         ADDWFC  (_currentTime + 2), W, B
01F8 6E00      01386         MOVWF   r0x02
01FA C000 FFE9 01387         MOVFF   r0x00, FSR0L
01FE C000 FFF3 01388         MOVFF   r0x01, PRODL
0202 5000      01389         MOVF    r0x02, W
0204 EC00 F000 01390         CALL    __gptrget1
0208 6E00      01391         MOVWF   r0x03
020A 2A00      01392         INCF    r0x03, F
020C C000 FFE5 01393         MOVFF   r0x03, POSTDEC1
0210 C000 FFE9 01394         MOVFF   r0x00, FSR0L
0214 C000 FFF3 01395         MOVFF   r0x01, PRODL
0218 5000      01396         MOVF    r0x02, W
021A EC00 F000 01397         CALL    __gptrput1
021E 01398 _00278_DS_:
021E 0000      01399         BANKSEL _currentTime
               01400 ;       .line   213; testint.c  if(currentTime[1] == ':'){
0220 5100      01401         MOVF    _currentTime, W, B
0222 0F01      01402         ADDLW   0x01
0224 6E00      01403         MOVWF   r0x00
0226 0E00      01404         MOVLW   0x00
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0228 0000      01405         BANKSEL (_currentTime + 1)
022A 2100      01406         ADDWFC  (_currentTime + 1), W, B
022C 6E00      01407         MOVWF   r0x01
022E 0E00      01408         MOVLW   0x00
0230 0000      01409         BANKSEL (_currentTime + 2)
0232 2100      01410         ADDWFC  (_currentTime + 2), W, B
0234 6E00      01411         MOVWF   r0x02
0236 C000 FFE9 01412         MOVFF   r0x00, FSR0L
023A C000 FFF3 01413         MOVFF   r0x01, PRODL
023E 5000      01414         MOVF    r0x02, W
0240 EC00 F000 01415         CALL    __gptrget1
0244 6E00      01416         MOVWF   r0x03
0246 5000      01417         MOVF    r0x03, W
0248 0A3A      01418         XORLW   0x3a
024A E100      01419         BNZ     _00280_DS_
               01420 ;       .line   214; testint.c  currentTime[1] = '0';
024C 0E30      01421         MOVLW   0x30
024E 6EE5      01422         MOVWF   POSTDEC1
0250 C000 FFE9 01423         MOVFF   r0x00, FSR0L
0254 C000 FFF3 01424         MOVFF   r0x01, PRODL
0258 5000      01425         MOVF    r0x02, W
025A EC00 F000 01426         CALL    __gptrput1
               01427 ;       .line   215; testint.c  ++currentTime[0];
025E C000 F000 01428         MOVFF   _currentTime, r0x03
0262 C000 F000 01429         MOVFF   (_currentTime + 1), r0x04
0266 C000 F000 01430         MOVFF   (_currentTime + 2), r0x05
026A C000 FFE9 01431         MOVFF   r0x03, FSR0L
026E C000 FFF3 01432         MOVFF   r0x04, PRODL
0272 5000      01433         MOVF    r0x05, W
0274 EC00 F000 01434         CALL    __gptrget1
0278 6E00      01435         MOVWF   r0x06
027A 2A00      01436         INCF    r0x06, F
027C C000 FFE5 01437         MOVFF   r0x06, POSTDEC1
0280 C000 FFE9 01438         MOVFF   r0x03, FSR0L
0284 C000 FFF3 01439         MOVFF   r0x04, PRODL
0288 5000      01440         MOVF    r0x05, W
028A EC00 F000 01441         CALL    __gptrput1
028E 01442 _00280_DS_:
               01443 ;       .line   217; testint.c  if(currentTime[0]=='2' && currentTime[1]=='4'){
028E C000 F000 01444         MOVFF   _currentTime, r0x03
0292 C000 F000 01445         MOVFF   (_currentTime + 1), r0x04
0296 C000 F000 01446         MOVFF   (_currentTime + 2), r0x05
029A C000 FFE9 01447         MOVFF   r0x03, FSR0L
029E C000 FFF3 01448         MOVFF   r0x04, PRODL
02A2 5000      01449         MOVF    r0x05, W
02A4 EC00 F000 01450         CALL    __gptrget1
02A8 6E00      01451         MOVWF   r0x03
02AA 5000      01452         MOVF    r0x03, W
02AC 0A32      01453         XORLW   0x32
02AE E100      01454         BNZ     _00282_DS_
02B0 C000 FFE9 01455         MOVFF   r0x00, FSR0L
02B4 C000 FFF3 01456         MOVFF   r0x01, PRODL
02B8 5000      01457         MOVF    r0x02, W
02BA EC00 F000 01458         CALL    __gptrget1
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02BE 6E00      01459         MOVWF   r0x03
02C0 5000      01460         MOVF    r0x03, W
02C2 0A34      01461         XORLW   0x34
02C4 E100      01462         BNZ     _00282_DS_
               01463 ;       .line   218; testint.c  currentTime[0]='0';
02C6 C000 F000 01464         MOVFF   _currentTime, r0x03
02CA C000 F000 01465         MOVFF   (_currentTime + 1), r0x04
02CE C000 F000 01466         MOVFF   (_currentTime + 2), r0x05
02D2 0E30      01467         MOVLW   0x30
02D4 6EE5      01468         MOVWF   POSTDEC1
02D6 C000 FFE9 01469         MOVFF   r0x03, FSR0L
02DA C000 FFF3 01470         MOVFF   r0x04, PRODL
02DE 5000      01471         MOVF    r0x05, W
02E0 EC00 F000 01472         CALL    __gptrput1
               01473 ;       .line   219; testint.c  currentTime[1]='0';
02E4 0E30      01474         MOVLW   0x30
02E6 6EE5      01475         MOVWF   POSTDEC1
02E8 C000 FFE9 01476         MOVFF   r0x00, FSR0L
02EC C000 FFF3 01477         MOVFF   r0x01, PRODL
02F0 5000      01478         MOVF    r0x02, W
02F2 EC00 F000 01479         CALL    __gptrput1
02F6 01480 _00282_DS_:
               01481 ;       .line   221; testint.c  if(currentTime[0]=='3'){
02F6 C000 F000 01482         MOVFF   _currentTime, r0x00
02FA C000 F000 01483         MOVFF   (_currentTime + 1), r0x01
02FE C000 F000 01484         MOVFF   (_currentTime + 2), r0x02
0302 C000 FFE9 01485         MOVFF   r0x00, FSR0L
0306 C000 FFF3 01486         MOVFF   r0x01, PRODL
030A 5000      01487         MOVF    r0x02, W
030C EC00 F000 01488         CALL    __gptrget1
0310 6E00      01489         MOVWF   r0x00
0312 5000      01490         MOVF    r0x00, W
0314 0A33      01491         XORLW   0x33
0316 E100      01492         BNZ     _00286_DS_
               01493 ;       .line   222; testint.c  currentTime[0]='0';
0318 C000 F000 01494         MOVFF   _currentTime, r0x00
031C C000 F000 01495         MOVFF   (_currentTime + 1), r0x01
0320 C000 F000 01496         MOVFF   (_currentTime + 2), r0x02
0324 0E30      01497         MOVLW   0x30
0326 6EE5      01498         MOVWF   POSTDEC1
0328 C000 FFE9 01499         MOVFF   r0x00, FSR0L
032C C000 FFF3 01500         MOVFF   r0x01, PRODL
0330 5000      01501         MOVF    r0x02, W
0332 EC00 F000 01502         CALL    __gptrput1
0336 01503 _00286_DS_:
0336 CFE4 F000 01504         MOVFF   PREINC1, r0x06
033A CFE4 F000 01505         MOVFF   PREINC1, r0x05
033E CFE4 F000 01506         MOVFF   PREINC1, r0x04
0342 CFE4 F000 01507         MOVFF   PREINC1, r0x03
0346 CFE4 F000 01508         MOVFF   PREINC1, r0x02
034A CFE4 F000 01509         MOVFF   PREINC1, r0x01
034E CFE4 F000 01510         MOVFF   PREINC1, r0x00
0352 CFE4 FFD9 01511         MOVFF   PREINC1, FSR2L
0356 0012      01512         RETURN  
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01513 
               01514 ; ; Starting pCode block
               01515 S_testint__alarm        code
0000 01516 _alarm:
               01517 ;       .line   171; testint.c  void alarm(){
0000 CFD9 FFE5 01518         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01519         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01520         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01521         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01522         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01523         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01524         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01525         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01526         MOVFF   r0x06, POSTDEC1
               01527 ;       .line   172; testint.c  int blink = 1;
0024 0E01      01528         MOVLW   0x01
0026 6E00      01529         MOVWF   r0x00
0028 6A00      01530         CLRF    r0x01
               01531 ;       .line   173; testint.c  int i = 0;
002A 6A00      01532         CLRF    r0x02
002C 6A00      01533         CLRF    r0x03
002E 01534 _00240_DS_:
               01535 ;       .line   176; testint.c  for(i; i<5; i++){
002E 5000      01536         MOVF    r0x03, W
0030 0F80      01537         ADDLW   0x80
0032 0F80      01538         ADDLW   0x80
0034 E100      01539         BNZ     _00263_DS_
0036 0E05      01540         MOVLW   0x05
0038 5C00      01541         SUBWF   r0x02, W
003A 01542 _00263_DS_:
003A E200      01543         BC      _00243_DS_
               01544 ;       .line   177; testint.c  if(currentTime[i]!=time[i]){
003C 5000      01545         MOVF    r0x02, W
003E 0000      01546         BANKSEL _currentTime
0040 2500      01547         ADDWF   _currentTime, W, B
0042 6E00      01548         MOVWF   r0x04
0044 5000      01549         MOVF    r0x03, W
0046 0000      01550         BANKSEL (_currentTime + 1)
0048 2100      01551         ADDWFC  (_currentTime + 1), W, B
004A 6E00      01552         MOVWF   r0x05
004C 6AE8      01553         CLRF    WREG
004E BE00      01554         BTFSC   r0x03, 7
0050 68E8      01555         SETF    WREG
0052 0000      01556         BANKSEL (_currentTime + 2)
0054 2100      01557         ADDWFC  (_currentTime + 2), W, B
0056 6E00      01558         MOVWF   r0x06
0058 C000 FFE9 01559         MOVFF   r0x04, FSR0L
005C C000 FFF3 01560         MOVFF   r0x05, PRODL
0060 5000      01561         MOVF    r0x06, W
0062 EC00 F000 01562         CALL    __gptrget1
0066 6E00      01563         MOVWF   r0x04
0068 0E00      01564         MOVLW   LOW(_time)
006A 2400      01565         ADDWF   r0x02, W
006C 6E00      01566         MOVWF   r0x05
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
006E 0E00      01567         MOVLW   HIGH(_time)
0070 2000      01568         ADDWFC  r0x03, W
0072 6E00      01569         MOVWF   r0x06
0074 C000 FFE9 01570         MOVFF   r0x05, FSR0L
0078 C000 FFEA 01571         MOVFF   r0x06, FSR0H
007C CFEF F000 01572         MOVFF   INDF0, r0x05
0080 5000      01573         MOVF    r0x04, W
0082 1800      01574         XORWF   r0x05, W
0084 E000      01575         BZ      _00242_DS_
               01576 ;       .line   178; testint.c  blink = 0;
0086 6A00      01577         CLRF    r0x00
0088 6A00      01578         CLRF    r0x01
               01579 ;       .line   179; testint.c  i = 5;
008A 0E05      01580         MOVLW   0x05
008C 6E00      01581         MOVWF   r0x02
008E 6A00      01582         CLRF    r0x03
0090 01583 _00242_DS_:
               01584 ;       .line   176; testint.c  for(i; i<5; i++){
0090 2A00      01585         INCF    r0x02, F
0092 B0D8      01586         BTFSC   STATUS, 0
0094 2A00      01587         INCF    r0x03, F
0096 D000      01588         BRA     _00240_DS_
0098 01589 _00243_DS_:
               01590 ;       .line   182; testint.c  if(blink){
0098 5000      01591         MOVF    r0x00, W
009A 1000      01592         IORWF   r0x01, W
009C B4D8      01593         BTFSC   STATUS, 2
009E D000      01594         BRA     _00239_DS_
               01595 ;       .line   183; testint.c  display_string(0,"    Wake up!    ");
00A0 0E00      01596         MOVLW   UPPER(__str_0)
00A2 6EE5      01597         MOVWF   POSTDEC1
00A4 0E00      01598         MOVLW   HIGH(__str_0)
00A6 6EE5      01599         MOVWF   POSTDEC1
00A8 0E00      01600         MOVLW   LOW(__str_0)
00AA 6EE5      01601         MOVWF   POSTDEC1
00AC 0E00      01602         MOVLW   0x00
00AE 6EE5      01603         MOVWF   POSTDEC1
00B0 EC00 F000 01604         CALL    _display_string
00B4 0E04      01605         MOVLW   0x04
00B6 26E1      01606         ADDWF   FSR1L, F
               01607 ;       .line   184; testint.c  display_string(16, "                ");
00B8 0E00      01608         MOVLW   UPPER(__str_1)
00BA 6EE5      01609         MOVWF   POSTDEC1
00BC 0E00      01610         MOVLW   HIGH(__str_1)
00BE 6EE5      01611         MOVWF   POSTDEC1
00C0 0E00      01612         MOVLW   LOW(__str_1)
00C2 6EE5      01613         MOVWF   POSTDEC1
00C4 0E10      01614         MOVLW   0x10
00C6 6EE5      01615         MOVWF   POSTDEC1
00C8 EC00 F000 01616         CALL    _display_string
00CC 0E04      01617         MOVLW   0x04
00CE 26E1      01618         ADDWF   FSR1L, F
               01619 ;       .line   185; testint.c  for(j; j<30; j++){
00D0 6A00      01620         CLRF    r0x00
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00D2 6A00      01621         CLRF    r0x01
00D4 01622 _00247_DS_:
00D4 5000      01623         MOVF    r0x01, W
00D6 0F80      01624         ADDLW   0x80
00D8 0F80      01625         ADDLW   0x80
00DA E100      01626         BNZ     _00266_DS_
00DC 0E1E      01627         MOVLW   0x1e
00DE 5C00      01628         SUBWF   r0x00, W
00E0 01629 _00266_DS_:
00E0 E200      01630         BC      _00250_DS_
               01631 ;       .line   186; testint.c  LED1_IO ^=1;
00E2 6A00      01632         CLRF    r0x02
00E4 B200      01633         BTFSC   _LATJbits, 1
00E6 2A00      01634         INCF    r0x02, F
00E8 0E01      01635         MOVLW   0x01
00EA 1A00      01636         XORWF   r0x02, F
00EC 5000      01637         MOVF    r0x02, W
00EE 0B01      01638         ANDLW   0x01
00F0 44E8      01639         RLNCF   WREG, W
00F2 6EF4      01640         MOVWF   PRODH
00F4 5000      01641         MOVF    _LATJbits, W
00F6 0BFD      01642         ANDLW   0xfd
00F8 10F4      01643         IORWF   PRODH, W
00FA 6E00      01644         MOVWF   _LATJbits
               01645 ;       .line   187; testint.c  for(k=0; k<40;++k) 
00FC 0E28      01646         MOVLW   0x28
00FE 6E00      01647         MOVWF   r0x02
0100 6A00      01648         CLRF    r0x03
0102 01649 _00246_DS_:
               01650 ;       .line   188; testint.c  dumb_delay1ms();
0102 EC00 F000 01651         CALL    _dumb_delay1ms
0106 0EFF      01652         MOVLW   0xff
0108 2600      01653         ADDWF   r0x02, F
010A A0D8      01654         BTFSS   STATUS, 0
010C 0600      01655         DECF    r0x03, F
               01656 ;       .line   187; testint.c  for(k=0; k<40;++k) 
010E 5000      01657         MOVF    r0x02, W
0110 1000      01658         IORWF   r0x03, W
0112 E100      01659         BNZ     _00246_DS_
               01660 ;       .line   185; testint.c  for(j; j<30; j++){
0114 2A00      01661         INCF    r0x00, F
0116 B0D8      01662         BTFSC   STATUS, 0
0118 2A00      01663         INCF    r0x01, F
011A D000      01664         BRA     _00247_DS_
011C 01665 _00250_DS_:
               01666 ;       .line   190; testint.c  LED1_IO ^=1;
011C 6A00      01667         CLRF    r0x00
011E B200      01668         BTFSC   _LATJbits, 1
0120 2A00      01669         INCF    r0x00, F
0122 0E01      01670         MOVLW   0x01
0124 1A00      01671         XORWF   r0x00, F
0126 5000      01672         MOVF    r0x00, W
0128 0B01      01673         ANDLW   0x01
012A 44E8      01674         RLNCF   WREG, W
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
012C 6EF4      01675         MOVWF   PRODH
012E 5000      01676         MOVF    _LATJbits, W
0130 0BFD      01677         ANDLW   0xfd
0132 10F4      01678         IORWF   PRODH, W
0134 6E00      01679         MOVWF   _LATJbits
0136 01680 _00239_DS_:
0136 0000      01681         BANKSEL _alarmflag
               01682 ;       .line   192; testint.c  alarmflag = 0;
0138 6B00      01683         CLRF    _alarmflag, B
013A 0000      01684         BANKSEL (_alarmflag + 1)
013C 6B00      01685         CLRF    (_alarmflag + 1), B
013E CFE4 F000 01686         MOVFF   PREINC1, r0x06
0142 CFE4 F000 01687         MOVFF   PREINC1, r0x05
0146 CFE4 F000 01688         MOVFF   PREINC1, r0x04
014A CFE4 F000 01689         MOVFF   PREINC1, r0x03
014E CFE4 F000 01690         MOVFF   PREINC1, r0x02
0152 CFE4 F000 01691         MOVFF   PREINC1, r0x01
0156 CFE4 F000 01692         MOVFF   PREINC1, r0x00
015A CFE4 FFD9 01693         MOVFF   PREINC1, FSR2L
015E 0012      01694         RETURN  
               01695 
               01696 ; ; Starting pCode block
               01697 S_testint__increment_time       code
0000 01698 _increment_time:
               01699 ;       .line   147; testint.c  void increment_time(){
0000 CFD9 FFE5 01700         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01701         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01702         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01703         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01704         MOVFF   r0x02, POSTDEC1
               01705 ;       .line   148; testint.c  time[position]++;
0014 0E00      01706         MOVLW   LOW(_time)
0016 0000      01707         BANKSEL _position
0018 2500      01708         ADDWF   _position, W, B
001A 6E00      01709         MOVWF   r0x00
001C 0E00      01710         MOVLW   HIGH(_time)
001E 0000      01711         BANKSEL (_position + 1)
0020 2100      01712         ADDWFC  (_position + 1), W, B
0022 6E00      01713         MOVWF   r0x01
0024 C000 FFE9 01714         MOVFF   r0x00, FSR0L
0028 C000 FFEA 01715         MOVFF   r0x01, FSR0H
002C CFEF F000 01716         MOVFF   INDF0, r0x02
0030 2A00      01717         INCF    r0x02, F
0032 C000 FFE9 01718         MOVFF   r0x00, FSR0L
0036 C000 FFEA 01719         MOVFF   r0x01, FSR0H
003A C000 FFEF 01720         MOVFF   r0x02, INDF0
003E 0000      01721         BANKSEL (_time + 4)
               01722 ;       .line   149; testint.c  if(time[4] == ':'){
0040 5100      01723         MOVF    (_time + 4), W, B
0042 0A3A      01724         XORLW   0x3a
0044 E100      01725         BNZ     _00201_DS_
               01726 ;       .line   150; testint.c  time[4] = '0';
0046 0E30      01727         MOVLW   0x30
0048 0000      01728         BANKSEL (_time + 4)
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
004A 6F00      01729         MOVWF   (_time + 4), B
004C 0000      01730         BANKSEL (_time + 3)
               01731 ;       .line   151; testint.c  ++time[3];
004E 2900      01732         INCF    (_time + 3), W, B
0050 6E00      01733         MOVWF   r0x00
0052 5000      01734         MOVF    r0x00, W
0054 0000      01735         BANKSEL (_time + 3)
0056 6F00      01736         MOVWF   (_time + 3), B
0058 01737 _00201_DS_:
0058 0000      01738         BANKSEL (_time + 3)
               01739 ;       .line   153; testint.c  if(time[3]=='6'){
005A 5100      01740         MOVF    (_time + 3), W, B
005C 0A36      01741         XORLW   0x36
005E E100      01742         BNZ     _00203_DS_
               01743 ;       .line   154; testint.c  time[3]='0';
0060 0E30      01744         MOVLW   0x30
0062 0000      01745         BANKSEL (_time + 3)
0064 6F00      01746         MOVWF   (_time + 3), B
               01747 ;       .line   155; testint.c  time[1]++;
0066 C000 F000 01748         MOVFF   (_time + 1), r0x00
006A 2A00      01749         INCF    r0x00, F
006C 5000      01750         MOVF    r0x00, W
006E 0000      01751         BANKSEL (_time + 1)
0070 6F00      01752         MOVWF   (_time + 1), B
0072 01753 _00203_DS_:
               01754 ;       .line   157; testint.c  if(time[1] == ':'){
0072 C000 F000 01755         MOVFF   (_time + 1), r0x00
0076 5000      01756         MOVF    r0x00, W
0078 0A3A      01757         XORLW   0x3a
007A E100      01758         BNZ     _00211_DS_
               01759 ;       .line   158; testint.c  time[1] = '0';
007C 0E30      01760         MOVLW   0x30
007E 0000      01761         BANKSEL (_time + 1)
0080 6F00      01762         MOVWF   (_time + 1), B
0082 0000      01763         BANKSEL _time
               01764 ;       .line   159; testint.c  ++time[0];
0084 2900      01765         INCF    _time, W, B
0086 6E00      01766         MOVWF   r0x01
0088 5000      01767         MOVF    r0x01, W
008A 0000      01768         BANKSEL _time
008C 6F00      01769         MOVWF   _time, B
008E D000      01770         BRA     _00213_DS_
0090 01771 _00211_DS_:
               01772 ;       .line   161; testint.c  else if(time[0]=='2' && time[1]>='4'){
0090 C000 F000 01773         MOVFF   _time, r0x01
0094 5000      01774         MOVF    r0x01, W
0096 0A32      01775         XORLW   0x32
0098 E100      01776         BNZ     _00207_DS_
009A 5000      01777         MOVF    r0x00, W
009C 0F80      01778         ADDLW   0x80
009E 0F4C      01779         ADDLW   0x4c
00A0 E300      01780         BNC     _00207_DS_
               01781 ;       .line   162; testint.c  time[0]='0';
00A2 0E30      01782         MOVLW   0x30
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A4 0000      01783         BANKSEL _time
00A6 6F00      01784         MOVWF   _time, B
               01785 ;       .line   163; testint.c  time[1]='0';
00A8 0E30      01786         MOVLW   0x30
00AA 0000      01787         BANKSEL (_time + 1)
00AC 6F00      01788         MOVWF   (_time + 1), B
00AE D000      01789         BRA     _00213_DS_
00B0 01790 _00207_DS_:
               01791 ;       .line   165; testint.c  else if(time[0]=='3'){
00B0 5000      01792         MOVF    r0x01, W
00B2 0A33      01793         XORLW   0x33
00B4 E100      01794         BNZ     _00213_DS_
               01795 ;       .line   166; testint.c  time[0]='0';
00B6 0E30      01796         MOVLW   0x30
00B8 0000      01797         BANKSEL _time
00BA 6F00      01798         MOVWF   _time, B
00BC 01799 _00213_DS_:
00BC CFE4 F000 01800         MOVFF   PREINC1, r0x02
00C0 CFE4 F000 01801         MOVFF   PREINC1, r0x01
00C4 CFE4 F000 01802         MOVFF   PREINC1, r0x00
00C8 CFE4 FFD9 01803         MOVFF   PREINC1, FSR2L
00CC 0012      01804         RETURN  
               01805 
               01806 ; ; Starting pCode block
               01807 S_testint__high_isr     code
0000 01808 _high_isr:
               01809 ;       .line   38; testint.c   void high_isr (void) __interrupt 1
0000 CFE8 FFE5 01810         MOVFF   WREG, POSTDEC1
0004 CFD8 FFE5 01811         MOVFF   STATUS, POSTDEC1
0008 CFE0 FFE5 01812         MOVFF   BSR, POSTDEC1
000C CFF3 FFE5 01813         MOVFF   PRODL, POSTDEC1
0010 CFF4 FFE5 01814         MOVFF   PRODH, POSTDEC1
0014 CFE9 FFE5 01815         MOVFF   FSR0L, POSTDEC1
0018 CFEA FFE5 01816         MOVFF   FSR0H, POSTDEC1
001C CFFA FFE5 01817         MOVFF   PCLATH, POSTDEC1
0020 CFFB FFE5 01818         MOVFF   PCLATU, POSTDEC1
0024 CFD9 FFE5 01819         MOVFF   FSR2L, POSTDEC1
0028 CFE1 FFD9 01820         MOVFF   FSR1L, FSR2L
002C C000 FFE5 01821         MOVFF   r0x00, POSTDEC1
0030 C000 FFE5 01822         MOVFF   r0x01, POSTDEC1
0034 C000 FFE5 01823         MOVFF   r0x02, POSTDEC1
0038 C000 FFE5 01824         MOVFF   r0x03, POSTDEC1
               01825 ;       .line   41; testint.c   if (INT3F)
003C A400      01826         BTFSS   _INTCON3bits, 2
003E D000      01827         BRA     _00117_DS_
0040 0000      01828         BANKSEL (_position + 1)
               01829 ;       .line   43; testint.c   if(position<2 || (position>2 && position<5))
0042 5100      01830         MOVF    (_position + 1), W, B
0044 0F80      01831         ADDLW   0x80
0046 0F80      01832         ADDLW   0x80
0048 E100      01833         BNZ     _00150_DS_
004A 0E02      01834         MOVLW   0x02
004C 0000      01835         BANKSEL _position
004E 5D00      01836         SUBWF   _position, W, B
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0050 01837 _00150_DS_:
0050 E300      01838         BNC     _00105_DS_
0052 0000      01839         BANKSEL (_position + 1)
0054 5100      01840         MOVF    (_position + 1), W, B
0056 0F80      01841         ADDLW   0x80
0058 0F80      01842         ADDLW   0x80
005A E100      01843         BNZ     _00151_DS_
005C 0E03      01844         MOVLW   0x03
005E 0000      01845         BANKSEL _position
0060 5D00      01846         SUBWF   _position, W, B
0062 01847 _00151_DS_:
0062 E300      01848         BNC     _00106_DS_
0064 0000      01849         BANKSEL (_position + 1)
0066 5100      01850         MOVF    (_position + 1), W, B
0068 0F80      01851         ADDLW   0x80
006A 0F80      01852         ADDLW   0x80
006C E100      01853         BNZ     _00152_DS_
006E 0E05      01854         MOVLW   0x05
0070 0000      01855         BANKSEL _position
0072 5D00      01856         SUBWF   _position, W, B
0074 01857 _00152_DS_:
0074 E200      01858         BC      _00106_DS_
0076 01859 _00105_DS_:
               01860 ;       .line   44; testint.c   increment_time();
0076 EC00 F000 01861         CALL    _increment_time
007A 01862 _00106_DS_:
007A 0000      01863         BANKSEL (_position + 1)
               01864 ;       .line   46; testint.c   if((position>6 && position<9) || (position>9 && position<12) || (position>12 && position<15)){
007C 5100      01865         MOVF    (_position + 1), W, B
007E 0F80      01866         ADDLW   0x80
0080 0F80      01867         ADDLW   0x80
0082 E100      01868         BNZ     _00153_DS_
0084 0E07      01869         MOVLW   0x07
0086 0000      01870         BANKSEL _position
0088 5D00      01871         SUBWF   _position, W, B
008A 01872 _00153_DS_:
008A E300      01873         BNC     _00113_DS_
008C 0000      01874         BANKSEL (_position + 1)
008E 5100      01875         MOVF    (_position + 1), W, B
0090 0F80      01876         ADDLW   0x80
0092 0F80      01877         ADDLW   0x80
0094 E100      01878         BNZ     _00154_DS_
0096 0E09      01879         MOVLW   0x09
0098 0000      01880         BANKSEL _position
009A 5D00      01881         SUBWF   _position, W, B
009C 01882 _00154_DS_:
009C E300      01883         BNC     _00109_DS_
009E 01884 _00113_DS_:
009E 0000      01885         BANKSEL (_position + 1)
00A0 5100      01886         MOVF    (_position + 1), W, B
00A2 0F80      01887         ADDLW   0x80
00A4 0F80      01888         ADDLW   0x80
00A6 E100      01889         BNZ     _00155_DS_
00A8 0E0A      01890         MOVLW   0x0a
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00AA 0000      01891         BANKSEL _position
00AC 5D00      01892         SUBWF   _position, W, B
00AE 01893 _00155_DS_:
00AE E300      01894         BNC     _00115_DS_
00B0 0000      01895         BANKSEL (_position + 1)
00B2 5100      01896         MOVF    (_position + 1), W, B
00B4 0F80      01897         ADDLW   0x80
00B6 0F80      01898         ADDLW   0x80
00B8 E100      01899         BNZ     _00156_DS_
00BA 0E0C      01900         MOVLW   0x0c
00BC 0000      01901         BANKSEL _position
00BE 5D00      01902         SUBWF   _position, W, B
00C0 01903 _00156_DS_:
00C0 E300      01904         BNC     _00109_DS_
00C2 01905 _00115_DS_:
00C2 0000      01906         BANKSEL (_position + 1)
00C4 5100      01907         MOVF    (_position + 1), W, B
00C6 0F80      01908         ADDLW   0x80
00C8 0F80      01909         ADDLW   0x80
00CA E100      01910         BNZ     _00157_DS_
00CC 0E0D      01911         MOVLW   0x0d
00CE 0000      01912         BANKSEL _position
00D0 5D00      01913         SUBWF   _position, W, B
00D2 01914 _00157_DS_:
00D2 E300      01915         BNC     _00110_DS_
00D4 0000      01916         BANKSEL (_position + 1)
00D6 5100      01917         MOVF    (_position + 1), W, B
00D8 0F80      01918         ADDLW   0x80
00DA 0F80      01919         ADDLW   0x80
00DC E100      01920         BNZ     _00158_DS_
00DE 0E0F      01921         MOVLW   0x0f
00E0 0000      01922         BANKSEL _position
00E2 5D00      01923         SUBWF   _position, W, B
00E4 01924 _00158_DS_:
00E4 E200      01925         BC      _00110_DS_
00E6 01926 _00109_DS_:
00E6 0000      01927         BANKSEL _position
               01928 ;       .line   47; testint.c   currentTime[position-7]++;
00E8 5100      01929         MOVF    _position, W, B
00EA 0FF9      01930         ADDLW   0xf9
00EC 6E00      01931         MOVWF   r0x00
00EE 0EFF      01932         MOVLW   0xff
00F0 0000      01933         BANKSEL (_position + 1)
00F2 2100      01934         ADDWFC  (_position + 1), W, B
00F4 6E00      01935         MOVWF   r0x01
00F6 6A00      01936         CLRF    r0x02
00F8 BE00      01937         BTFSC   r0x01, 7
00FA 6800      01938         SETF    r0x02
00FC 0000      01939         BANKSEL _currentTime
00FE 5100      01940         MOVF    _currentTime, W, B
0100 2600      01941         ADDWF   r0x00, F
0102 0000      01942         BANKSEL (_currentTime + 1)
0104 5100      01943         MOVF    (_currentTime + 1), W, B
0106 2200      01944         ADDWFC  r0x01, F
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0108 0000      01945         BANKSEL (_currentTime + 2)
010A 5100      01946         MOVF    (_currentTime + 2), W, B
010C 2200      01947         ADDWFC  r0x02, F
010E C000 FFE9 01948         MOVFF   r0x00, FSR0L
0112 C000 FFF3 01949         MOVFF   r0x01, PRODL
0116 5000      01950         MOVF    r0x02, W
0118 EC00 F000 01951         CALL    __gptrget1
011C 6E00      01952         MOVWF   r0x03
011E 2A00      01953         INCF    r0x03, F
0120 C000 FFE5 01954         MOVFF   r0x03, POSTDEC1
0124 C000 FFE9 01955         MOVFF   r0x00, FSR0L
0128 C000 FFF3 01956         MOVFF   r0x01, PRODL
012C 5000      01957         MOVF    r0x02, W
012E EC00 F000 01958         CALL    __gptrput1
               01959 ;       .line   48; testint.c   test_inc_current_time();
0132 EC00 F000 01960         CALL    _test_inc_current_time
0136 01961 _00110_DS_:
               01962 ;       .line   51; testint.c   INT3F = 0;
0136 9400      01963         BCF     _INTCON3bits, 2
               01964 ;       .line   52; testint.c   refresh = 1;
0138 0E01      01965         MOVLW   0x01
013A 0000      01966         BANKSEL _refresh
013C 6F00      01967         MOVWF   _refresh, B
013E 0000      01968         BANKSEL (_refresh + 1)
0140 6B00      01969         CLRF    (_refresh + 1), B
0142 01970 _00117_DS_:
               01971 ;       .line   55; testint.c   if ( INT1F ) {
0142 A000      01972         BTFSS   _INTCON3bits, 0
0144 D000      01973         BRA     _00129_DS_
0146 0000      01974         BANKSEL _position
               01975 ;       .line   57; testint.c   position++;
0148 2B00      01976         INCF    _position, F, B
014A E300      01977         BNC     _10378_DS_
014C 0000      01978         BANKSEL (_position + 1)
014E 2B00      01979         INCF    (_position + 1), F, B
0150 01980 _10378_DS_:
0150 0000      01981         BANKSEL _position
               01982 ;       .line   58; testint.c   if(position == 2) position = 3;
0152 5100      01983         MOVF    _position, W, B
0154 0A02      01984         XORLW   0x02
0156 E100      01985         BNZ     _00159_DS_
0158 0000      01986         BANKSEL (_position + 1)
015A 5100      01987         MOVF    (_position + 1), W, B
015C E000      01988         BZ      _00160_DS_
015E 01989 _00159_DS_:
015E D000      01990         BRA     _00119_DS_
0160 01991 _00160_DS_:
0160 0E03      01992         MOVLW   0x03
0162 0000      01993         BANKSEL _position
0164 6F00      01994         MOVWF   _position, B
0166 0000      01995         BANKSEL (_position + 1)
0168 6B00      01996         CLRF    (_position + 1), B
016A 01997 _00119_DS_:
016A 0000      01998         BANKSEL _position
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01999 ;       .line   59; testint.c   if(position == 5) position = 7;
016C 5100      02000         MOVF    _position, W, B
016E 0A05      02001         XORLW   0x05
0170 E100      02002         BNZ     _00161_DS_
0172 0000      02003         BANKSEL (_position + 1)
0174 5100      02004         MOVF    (_position + 1), W, B
0176 E000      02005         BZ      _00162_DS_
0178 02006 _00161_DS_:
0178 D000      02007         BRA     _00121_DS_
017A 02008 _00162_DS_:
017A 0E07      02009         MOVLW   0x07
017C 0000      02010         BANKSEL _position
017E 6F00      02011         MOVWF   _position, B
0180 0000      02012         BANKSEL (_position + 1)
0182 6B00      02013         CLRF    (_position + 1), B
0184 02014 _00121_DS_:
0184 0000      02015         BANKSEL _position
               02016 ;       .line   60; testint.c   if(position == 9) position = 10;
0186 5100      02017         MOVF    _position, W, B
0188 0A09      02018         XORLW   0x09
018A E100      02019         BNZ     _00163_DS_
018C 0000      02020         BANKSEL (_position + 1)
018E 5100      02021         MOVF    (_position + 1), W, B
0190 E000      02022         BZ      _00164_DS_
0192 02023 _00163_DS_:
0192 D000      02024         BRA     _00123_DS_
0194 02025 _00164_DS_:
0194 0E0A      02026         MOVLW   0x0a
0196 0000      02027         BANKSEL _position
0198 6F00      02028         MOVWF   _position, B
019A 0000      02029         BANKSEL (_position + 1)
019C 6B00      02030         CLRF    (_position + 1), B
019E 02031 _00123_DS_:
019E 0000      02032         BANKSEL _position
               02033 ;       .line   61; testint.c   if(position == 12) position = 13;
01A0 5100      02034         MOVF    _position, W, B
01A2 0A0C      02035         XORLW   0x0c
01A4 E100      02036         BNZ     _00165_DS_
01A6 0000      02037         BANKSEL (_position + 1)
01A8 5100      02038         MOVF    (_position + 1), W, B
01AA E000      02039         BZ      _00166_DS_
01AC 02040 _00165_DS_:
01AC D000      02041         BRA     _00125_DS_
01AE 02042 _00166_DS_:
01AE 0E0D      02043         MOVLW   0x0d
01B0 0000      02044         BANKSEL _position
01B2 6F00      02045         MOVWF   _position, B
01B4 0000      02046         BANKSEL (_position + 1)
01B6 6B00      02047         CLRF    (_position + 1), B
01B8 02048 _00125_DS_:
01B8 0000      02049         BANKSEL _position
               02050 ;       .line   62; testint.c   if(position == 15) position = 0;
01BA 5100      02051         MOVF    _position, W, B
01BC 0A0F      02052         XORLW   0x0f
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01BE E100      02053         BNZ     _00167_DS_
01C0 0000      02054         BANKSEL (_position + 1)
01C2 5100      02055         MOVF    (_position + 1), W, B
01C4 E000      02056         BZ      _00168_DS_
01C6 02057 _00167_DS_:
01C6 D000      02058         BRA     _00127_DS_
01C8 02059 _00168_DS_:
01C8 0000      02060         BANKSEL _position
01CA 6B00      02061         CLRF    _position, B
01CC 0000      02062         BANKSEL (_position + 1)
01CE 6B00      02063         CLRF    (_position + 1), B
01D0 02064 _00127_DS_:
               02065 ;       .line   63; testint.c   refresh = 1;
01D0 0E01      02066         MOVLW   0x01
01D2 0000      02067         BANKSEL _refresh
01D4 6F00      02068         MOVWF   _refresh, B
01D6 0000      02069         BANKSEL (_refresh + 1)
01D8 6B00      02070         CLRF    (_refresh + 1), B
               02071 ;       .line   65; testint.c   INT1F  = 0;     
01DA 9000      02072         BCF     _INTCON3bits, 0
01DC 02073 _00129_DS_:
               02074 ;       .line   69; testint.c   if ( TMR0F ){        
01DC A400      02075         BTFSS   _INTCONbits, 2
01DE D000      02076         BRA     _00134_DS_
               02077 ;       .line   70; testint.c   bres += 4096;  
01E0 0E10      02078         MOVLW   0x10
01E2 0000      02079         BANKSEL (_bres + 1)
01E4 2700      02080         ADDWF   (_bres + 1), F, B
01E6 0E00      02081         MOVLW   0x00
01E8 0000      02082         BANKSEL (_bres + 2)
01EA 2300      02083         ADDWFC  (_bres + 2), F, B
01EC 0E00      02084         MOVLW   0x00
01EE 0000      02085         BANKSEL (_bres + 3)
01F0 2300      02086         ADDWFC  (_bres + 3), F, B
               02087 ;       .line   71; testint.c   if(bres >= 390625)
01F2 0E00      02088         MOVLW   0x00
01F4 0000      02089         BANKSEL (_bres + 3)
01F6 5D00      02090         SUBWF   (_bres + 3), W, B
01F8 E100      02091         BNZ     _00169_DS_
01FA 0E05      02092         MOVLW   0x05
01FC 0000      02093         BANKSEL (_bres + 2)
01FE 5D00      02094         SUBWF   (_bres + 2), W, B
0200 E100      02095         BNZ     _00169_DS_
0202 0EF5      02096         MOVLW   0xf5
0204 0000      02097         BANKSEL (_bres + 1)
0206 5D00      02098         SUBWF   (_bres + 1), W, B
0208 E100      02099         BNZ     _00169_DS_
020A 0EE1      02100         MOVLW   0xe1
020C 0000      02101         BANKSEL _bres
020E 5D00      02102         SUBWF   _bres, W, B
0210 02103 _00169_DS_:
0210 A0D8      02104         BTFSS   STATUS, 0
0212 D000      02105         BRA     _00131_DS_
               02106 ;       .line   73; testint.c   bres -= 390625; 
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0214 0E1F      02107         MOVLW   0x1f
0216 0000      02108         BANKSEL _bres
0218 2700      02109         ADDWF   _bres, F, B
021A 0E0A      02110         MOVLW   0x0a
021C 0000      02111         BANKSEL (_bres + 1)
021E 2300      02112         ADDWFC  (_bres + 1), F, B
0220 0EFA      02113         MOVLW   0xfa
0222 0000      02114         BANKSEL (_bres + 2)
0224 2300      02115         ADDWFC  (_bres + 2), F, B
0226 0EFF      02116         MOVLW   0xff
0228 0000      02117         BANKSEL (_bres + 3)
022A 2300      02118         ADDWFC  (_bres + 3), F, B
               02119 ;       .line   74; testint.c   LED0_IO ^= 1;
022C 6A00      02120         CLRF    r0x00
022E B000      02121         BTFSC   _LATJbits, 0
0230 2A00      02122         INCF    r0x00, F
0232 0E01      02123         MOVLW   0x01
0234 1A00      02124         XORWF   r0x00, F
0236 5000      02125         MOVF    r0x00, W
0238 0B01      02126         ANDLW   0x01
023A 6EF4      02127         MOVWF   PRODH
023C 5000      02128         MOVF    _LATJbits, W
023E 0BFE      02129         ANDLW   0xfe
0240 10F4      02130         IORWF   PRODH, W
0242 6E00      02131         MOVWF   _LATJbits
0244 0000      02132         BANKSEL _currentTime
               02133 ;       .line   75; testint.c   currentTime[7]++;
0246 5100      02134         MOVF    _currentTime, W, B
0248 0F07      02135         ADDLW   0x07
024A 6E00      02136         MOVWF   r0x00
024C 0E00      02137         MOVLW   0x00
024E 0000      02138         BANKSEL (_currentTime + 1)
0250 2100      02139         ADDWFC  (_currentTime + 1), W, B
0252 6E00      02140         MOVWF   r0x01
0254 0E00      02141         MOVLW   0x00
0256 0000      02142         BANKSEL (_currentTime + 2)
0258 2100      02143         ADDWFC  (_currentTime + 2), W, B
025A 6E00      02144         MOVWF   r0x02
025C C000 FFE9 02145         MOVFF   r0x00, FSR0L
0260 C000 FFF3 02146         MOVFF   r0x01, PRODL
0264 5000      02147         MOVF    r0x02, W
0266 EC00 F000 02148         CALL    __gptrget1
026A 6E00      02149         MOVWF   r0x03
026C 2A00      02150         INCF    r0x03, F
026E C000 FFE5 02151         MOVFF   r0x03, POSTDEC1
0272 C000 FFE9 02152         MOVFF   r0x00, FSR0L
0276 C000 FFF3 02153         MOVFF   r0x01, PRODL
027A 5000      02154         MOVF    r0x02, W
027C EC00 F000 02155         CALL    __gptrput1
               02156 ;       .line   76; testint.c   test_inc_current_time();
0280 EC00 F000 02157         CALL    _test_inc_current_time
0284 02158 _00131_DS_:
               02159 ;       .line   78; testint.c   refresh = 1;
0284 0E01      02160         MOVLW   0x01
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0286 0000      02161         BANKSEL _refresh
0288 6F00      02162         MOVWF   _refresh, B
028A 0000      02163         BANKSEL (_refresh + 1)
028C 6B00      02164         CLRF    (_refresh + 1), B
               02165 ;       .line   79; testint.c   TMR0F = 0; 
028E 9400      02166         BCF     _INTCONbits, 2
0290 02167 _00134_DS_:
0290 CFE4 F000 02168         MOVFF   PREINC1, r0x03
0294 CFE4 F000 02169         MOVFF   PREINC1, r0x02
0298 CFE4 F000 02170         MOVFF   PREINC1, r0x01
029C CFE4 F000 02171         MOVFF   PREINC1, r0x00
02A0 CFE4 FFD9 02172         MOVFF   PREINC1, FSR2L
02A4 CFE4 FFFB 02173         MOVFF   PREINC1, PCLATU
02A8 CFE4 FFFA 02174         MOVFF   PREINC1, PCLATH
02AC CFE4 FFEA 02175         MOVFF   PREINC1, FSR0H
02B0 CFE4 FFE9 02176         MOVFF   PREINC1, FSR0L
02B4 CFE4 FFF4 02177         MOVFF   PREINC1, PRODH
02B8 CFE4 FFF3 02178         MOVFF   PREINC1, PRODL
02BC CFE4 FFE0 02179         MOVFF   PREINC1, BSR
02C0 CFE4 FFD8 02180         MOVFF   PREINC1, STATUS
02C4 CFE4 FFE8 02181         MOVFF   PREINC1, WREG
02C8 0010      02182         RETFIE  
               02183 
               02184 ; ; Starting pCode block
02CA 02185 __str_0:
02CA 2020 2020 02186         DB      0x20, 0x20, 0x20, 0x20, 0x57, 0x61, 0x6b, 0x65, 0x20, 0x75, 0x70, 0x21
     6157 656B 
     7520 2170 
02D6 2020 2020 02187         DB      0x20, 0x20, 0x20, 0x20, 0x00
     0000      
               02188 ; ; Starting pCode block
02DC 02189 __str_1:
02DC 2020 2020 02190         DB      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
     2020 2020 
     2020 2020 
02E8 2020 2020 02191         DB      0x20, 0x20, 0x20, 0x20, 0x00
     0000      
               02192 ; ; Starting pCode block
02EE 02193 __str_2:
02EE 5E20 0000 02194         DB      0x20, 0x5e, 0x00
               02195 ; ; Starting pCode block
02F2 02196 __str_3:
02F2 2020 5E20 02197         DB      0x20, 0x20, 0x20, 0x5e, 0x00
     0000      
               02198 
               02199 
               02200 ; Statistics:
               02201 ; code size:     3534 (0x0dce) bytes ( 2.70%)
               02202 ;                1767 (0x06e7) words
               02203 ; udata size:      22 (0x0016) bytes ( 0.57%)
               02204 ; access size:     22 (0x0016) bytes
               02205 
               02206 
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

BSR                               00000FE0
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
INDF0                             00000FEF
PCLATH                            00000FFA
PCLATU                            00000FFB
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00105_DS_                        00000076
_00106_DS_                        0000007A
_00109_DS_                        000000E6
_00110_DS_                        00000136
_00113_DS_                        0000009E
_00115_DS_                        000000C2
_00117_DS_                        00000142
_00119_DS_                        0000016A
_00121_DS_                        00000184
_00123_DS_                        0000019E
_00125_DS_                        000001B8
_00127_DS_                        000001D0
_00129_DS_                        000001DC
_00131_DS_                        00000284
_00134_DS_                        00000290
_00150_DS_                        00000050
_00151_DS_                        00000062
_00152_DS_                        00000074
_00153_DS_                        0000008A
_00154_DS_                        0000009C
_00155_DS_                        000000AE
_00156_DS_                        000000C0
_00157_DS_                        000000D2
_00158_DS_                        000000E4
_00159_DS_                        0000015E
_00160_DS_                        00000160
_00161_DS_                        00000178
_00162_DS_                        0000017A
_00163_DS_                        00000192
_00164_DS_                        00000194
_00165_DS_                        000001AC
_00166_DS_                        000001AE
_00167_DS_                        000001C6
_00168_DS_                        000001C8
_00169_DS_                        00000210
_00179_DS_                        00000086
_00183_DS_                        00000064
_00192_DS_                        00000094
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00193_DS_                        00000096
_00194_DS_                        000000B0
_00195_DS_                        000000B2
_00201_DS_                        00000058
_00203_DS_                        00000072
_00207_DS_                        000000B0
_00211_DS_                        00000090
_00213_DS_                        000000BC
_00239_DS_                        00000136
_00240_DS_                        0000002E
_00242_DS_                        00000090
_00243_DS_                        00000098
_00246_DS_                        00000102
_00247_DS_                        000000D4
_00250_DS_                        0000011C
_00263_DS_                        0000003A
_00266_DS_                        000000E0
_00272_DS_                        000000A0
_00274_DS_                        00000126
_00276_DS_                        000001A2
_00278_DS_                        0000021E
_00280_DS_                        0000028E
_00282_DS_                        000002F6
_00286_DS_                        00000336
_00317_DS_                        00000066
_00319_DS_                        00000088
_00325_DS_                        000000FC
_00326_DS_                        0000005C
_00329_DS_                        000000D4
_00336_DS_                        0000009A
_00337_DS_                        000000E4
_00345_DS_                        00000082
_00354_DS_                        000000CC
_00358_DS_                        00000134
_00361_DS_                        0000015E
_00365_DS_                        00000188
_00372_DS_                        00000152
_00373_DS_                        00000114
_00378_DS_                        0000001C
_10378_DS_                        00000150
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRES                            00000000
_ADRESH                           00000000
_ADRESL                           00000000
_BAUDCON                          00000000
_BAUDCON1                         00000000
_BAUDCON1bits                     00000000
_BAUDCON2                         00000000
_BAUDCON2bits                     00000000
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_BAUDCONbits                      00000000
_BAUDCTL                          00000000
_BAUDCTL1                         00000000
_BAUDCTL1bits                     00000000
_BAUDCTL2                         00000000
_BAUDCTL2bits                     00000000
_BAUDCTLbits                      00000000
_BSR                              00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCP3CON                          00000000
_CCP3CONbits                      00000000
_CCP4CON                          00000000
_CCP4CONbits                      00000000
_CCP5CON                          00000000
_CCP5CONbits                      00000000
_CCPR1                            00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2                            00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CCPR3                            00000000
_CCPR3H                           00000000
_CCPR3L                           00000000
_CCPR4                            00000000
_CCPR4H                           00000000
_CCPR4L                           00000000
_CCPR5                            00000000
_CCPR5H                           00000000
_CCPR5L                           00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_DDRA                             00000000
_DDRAbits                         00000000
_DDRB                             00000000
_DDRBbits                         00000000
_DDRC                             00000000
_DDRCbits                         00000000
_DDRD                             00000000
_DDRDbits                         00000000
_DDRE                             00000000
_DDREbits                         00000000
_DDRF                             00000000
_DDRFbits                         00000000
_DDRG                             00000000
_DDRGbits                         00000000
_DDRH                             00000000
_DDRHbits                         00000000
_DDRJ                             00000000
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_DDRJbits                         00000000
_EBSTCON                          00000000
_EBSTCONbits                      00000000
_EBSTCS                           00000000
_EBSTCSH                          00000000
_EBSTCSL                          00000000
_EBSTSD                           00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_ECCP1CON                         00000000
_ECCP1CONbits                     00000000
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_ECCP2AS                          00000000
_ECCP2ASbits                      00000000
_ECCP2CON                         00000000
_ECCP2CONbits                     00000000
_ECCP2DEL                         00000000
_ECCP2DELbits                     00000000
_ECCP3AS                          00000000
_ECCP3ASbits                      00000000
_ECCP3CON                         00000000
_ECCP3CONbits                     00000000
_ECCP3DEL                         00000000
_ECCP3DELbits                     00000000
_ECON1                            00000000
_ECON1bits                        00000000
_ECON2                            00000000
_ECON2bits                        00000000
_EDATA                            00000000
_EDATAbits                        00000000
_EDMACS                           00000000
_EDMACSH                          00000000
_EDMACSL                          00000000
_EDMADST                          00000000
_EDMADSTH                         00000000
_EDMADSTL                         00000000
_EDMAND                           00000000
_EDMANDH                          00000000
_EDMANDL                          00000000
_EDMAST                           00000000
_EDMASTH                          00000000
_EDMASTL                          00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EFLOCON                          00000000
_EFLOCONbits                      00000000
_EHT0                             00000000
_EHT1                             00000000
_EHT2                             00000000
_EHT3                             00000000
_EHT4                             00000000
_EHT5                             00000000
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_EHT6                             00000000
_EHT7                             00000000
_EIE                              00000000
_EIEbits                          00000000
_EIR                              00000000
_EIRbits                          00000000
_EPAUS                            00000000
_EPAUSH                           00000000
_EPAUSL                           00000000
_EPKTCNT                          00000000
_EPMCS                            00000000
_EPMCSH                           00000000
_EPMCSL                           00000000
_EPMM0                            00000000
_EPMM1                            00000000
_EPMM2                            00000000
_EPMM3                            00000000
_EPMM4                            00000000
_EPMM5                            00000000
_EPMM6                            00000000
_EPMM7                            00000000
_EPMO                             00000000
_EPMOH                            00000000
_EPMOL                            00000000
_ERDPT                            00000000
_ERDPTH                           00000000
_ERDPTL                           00000000
_ERXFCON                          00000000
_ERXFCONbits                      00000000
_ERXND                            00000000
_ERXNDH                           00000000
_ERXNDL                           00000000
_ERXRDPT                          00000000
_ERXRDPTH                         00000000
_ERXRDPTL                         00000000
_ERXST                            00000000
_ERXSTH                           00000000
_ERXSTL                           00000000
_ERXWRPT                          00000000
_ERXWRPTH                         00000000
_ERXWRPTL                         00000000
_ESTAT                            00000000
_ESTATbits                        00000000
_ETXND                            00000000
_ETXNDH                           00000000
_ETXNDL                           00000000
_ETXST                            00000000
_ETXSTH                           00000000
_ETXSTL                           00000000
_EWOLIE                           00000000
_EWOLIEbits                       00000000
_EWOLIR                           00000000
_EWOLIRbits                       00000000
_EWRPT                            00000000
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_EWRPTH                           00000000
_EWRPTL                           00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_IPR3                             00000000
_IPR3bits                         00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_LATF                             00000000
_LATFbits                         00000000
_LATG                             00000000
_LATGbits                         00000000
_LATH                             00000000
_LATHbits                         00000000
_LATJ                             00000000
_LATJbits                         00000000
_LCDInit                          00000000
_LCDText                          00000000
_LCDUpdate                        00000000
_MAADR1                           00000000
_MAADR2                           00000000
_MAADR3                           00000000
_MAADR4                           00000000
_MAADR5                           00000000
_MAADR6                           00000000
_MABBIPG                          00000000
_MACLCON1                         00000000
_MACLCON1bits                     00000000
_MACLCON2                         00000000
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_MACLCON2bits                     00000000
_MACON1                           00000000
_MACON1bits                       00000000
_MACON2                           00000000
_MACON2bits                       00000000
_MACON3                           00000000
_MACON3bits                       00000000
_MACON4                           00000000
_MACON4bits                       00000000
_MAIPG                            00000000
_MAIPGH                           00000000
_MAIPGL                           00000000
_MAMXFL                           00000000
_MAMXFLH                          00000000
_MAMXFLL                          00000000
_MEMCON                           00000000
_MEMCONbits                       00000000
_MICMD                            00000000
_MICMDbits                        00000000
_MICON                            00000000
_MICONbits                        00000000
_MIRD                             00000000
_MIRDH                            00000000
_MIRDL                            00000000
_MIREGADR                         00000000
_MISTAT                           00000000
_MISTATbits                       00000000
_MIWR                             00000000
_MIWRH                            00000000
_MIWRL                            00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_OSCTUNE                          00000000
_OSCTUNEbits                      00000000
_PC                               00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIE3                             00000000
_PIE3bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PIR3                             00000000
_PIR3bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_PORTF                            00000000
_PORTFbits                        00000000
_PORTG                            00000000
_PORTGbits                        00000000
_PORTH                            00000000
_PORTHbits                        00000000
_PORTJ                            00000000
_PORTJbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PR4                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PROD                             00000000
_PRODH                            00000000
_PRODL                            00000000
_PSPCON                           00000000
_PSPCONbits                       00000000
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCREG1                           00000000
_RCREG2                           00000000
_RCSTA                            00000000
_RCSTA1                           00000000
_RCSTA1bits                       00000000
_RCSTA2                           00000000
_RCSTA2bits                       00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRG1                           00000000
_SPBRG2                           00000000
_SPBRGH                           00000000
_SPBRGH1                          00000000
_SPBRGH2                          00000000
_SSP1ADD                          00000000
_SSP1BUF                          00000000
_SSP1CON1                         00000000
_SSP1CON1bits                     00000000
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_SSP1CON2                         00000000
_SSP1CON2bits                     00000000
_SSP1STAT                         00000000
_SSP1STATbits                     00000000
_SSP2ADD                          00000000
_SSP2BUF                          00000000
_SSP2CON1                         00000000
_SSP2CON1bits                     00000000
_SSP2CON2                         00000000
_SSP2CON2bits                     00000000
_SSP2STAT                         00000000
_SSP2STATbits                     00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_T4CON                            00000000
_T4CONbits                        00000000
_TABLAT                           00000000
_TBLPTR                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TMR4                             00000000
_TOS                              00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TRISF                            00000000
_TRISFbits                        00000000
_TRISG                            00000000
_TRISGbits                        00000000
_TRISH                            00000000
_TRISHbits                        00000000
_TRISJ                            00000000
_TRISJbits                        00000000
_TXREG                            00000000
_TXREG1                           00000000
_TXREG2                           00000000
_TXSTA                            00000000
_TXSTA1                           00000000
_TXSTA1bits                       00000000
_TXSTA2                           00000000
_TXSTA2bits                       00000000
_TXSTAbits                        00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
__18F97J60                        00000001
__gptrget1                        00000000
__gptrput1                        00000000
__str_0                           000002CA
__str_1                           000002DC
__str_2                           000002EE
__str_3                           000002F2
_alarm                            00000000
_alarmflag                        00000015
_bres                             00000019
_currentTime                      00000010
_display_string                   00000000
_display_time                     00000000
_display_word                     00000000
_display_word_WDigit_1_1          00000000
_dumb_delay1ms                    00000000
_high_isr                         00000000
_increment_time                   00000000
_main                             00000000
_main_string_1_1                  00000000
_position                         00000013
_refresh                          00000017
_stdin                            00000000
_stdout                           00000000
_strlcpy                          00000000
_strlen                           00000000
_test_inc_current_time            00000000
gpasm-0.13.7 beta               Objects/testint.asm3-27-2012  16:55:59          PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_time                             00000000
_ultoa                            00000000
ivec_0x1_high_isr                 00000008
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
r0x0f                             0000000F
r0x10                             00000010
r0x11                             00000011
r0x12                             00000012
r0x13                             00000013
r0x14                             00000014
r0x15                             00000015


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

